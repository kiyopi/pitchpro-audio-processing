"use strict";var je=Object.defineProperty;var Qe=(l,e,t)=>e in l?je(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var _=(l,e,t)=>Qe(l,typeof e!="symbol"?e+"":e,t);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const E=class E{static getDeviceSpecs(){if(E.cachedSpecs)return E.cachedSpecs;if(typeof window>"u"||typeof navigator>"u")return E.getDefaultSpecs();const e=navigator.userAgent,t=E.analyzeUserAgent(e);return E.cachedSpecs=t,console.log("📱 [DeviceDetection] Device analysis:",{userAgent:e.substring(0,100)+"...",deviceType:t.deviceType,isIOS:t.isIOS,sensitivity:t.sensitivity,divisor:t.divisor}),t}static analyzeUserAgent(e){const t=/iPhone/.test(e),s=/iPad/.test(e),i=/Macintosh/.test(e)&&"ontouchend"in document,n=/iPad|iPhone|iPod/.test(e),o=/iPad|iPhone|iPod/.test(navigator.platform||""),r=t||s||i||n||o;let a="PC";t?a="iPhone":s||i?a="iPad":r&&(a=E.detectIOSDeviceType());const c=E.getDeviceOptimizations(a,r);return{deviceType:a,isIOS:r,sensitivity:c.sensitivity,noiseGate:c.noiseGate,divisor:c.divisor,gainCompensation:c.gainCompensation,noiseThreshold:c.noiseThreshold,smoothingFactor:c.smoothingFactor}}static detectIOSDeviceType(){const e=window.screen.width,t=window.screen.height,s=Math.max(e,t),i=Math.min(e,t);return s>=768||s>=700&&i>=500?"iPad":"iPhone"}static getDeviceOptimizations(e,t){switch(e){case"iPad":return{sensitivity:7,noiseGate:.025,divisor:4,gainCompensation:1.5,noiseThreshold:8,smoothingFactor:.3};case"iPhone":return{sensitivity:2,noiseGate:.03,divisor:4,gainCompensation:1.5,noiseThreshold:6,smoothingFactor:.25};case"PC":default:return{sensitivity:1,noiseGate:.035,divisor:6,gainCompensation:1,noiseThreshold:7,smoothingFactor:.25}}}static getDefaultSpecs(){return{deviceType:"PC",isIOS:!1,sensitivity:1,noiseGate:.035,divisor:6,gainCompensation:1,noiseThreshold:7,smoothingFactor:.25}}static supportsWebAudio(){return typeof window<"u"&&(typeof window.AudioContext<"u"||typeof window.webkitAudioContext<"u")}static supportsMediaDevices(){return typeof navigator<"u"&&typeof navigator.mediaDevices<"u"&&typeof navigator.mediaDevices.getUserMedia<"u"}static supportsMediaRecorder(){return typeof window<"u"&&typeof window.MediaRecorder<"u"}static getDeviceCapabilities(){return{deviceSpecs:E.getDeviceSpecs(),webAudioSupport:E.supportsWebAudio(),mediaDevicesSupport:E.supportsMediaDevices(),mediaRecorderSupport:E.supportsMediaRecorder(),touchSupport:"ontouchend"in document,userAgent:typeof navigator<"u"?navigator.userAgent:"Unknown",screenSize:typeof window<"u"?{width:window.screen.width,height:window.screen.height,pixelRatio:window.devicePixelRatio}:null,language:typeof navigator<"u"?navigator.language:"Unknown",platform:typeof navigator<"u"&&navigator.platform||"Unknown"}}static isMobile(){return E.getDeviceSpecs().isIOS||/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test((navigator==null?void 0:navigator.userAgent)||"")}static isTablet(){if(E.getDeviceSpecs().deviceType==="iPad")return!0;const t=(navigator==null?void 0:navigator.userAgent)||"";return/Android/i.test(t)&&!/Mobile/i.test(t)}static isDesktop(){return!E.isMobile()&&!E.isTablet()}static getOptimalAudioConstraints(){const e=E.getDeviceSpecs(),t={audio:{echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1,sampleRate:44100,channelCount:1,sampleSize:16,deviceId:{ideal:"default"}}};return e.isIOS&&t.audio&&typeof t.audio=="object"&&(t.audio={...t.audio,googAutoGainControl:!1,googNoiseSuppression:!1,googEchoCancellation:!1,googHighpassFilter:!1,googTypingNoiseDetection:!1,googBeamforming:!1,mozAutoGainControl:!1,mozNoiseSuppression:!1}),t}static clearCache(){E.cachedSpecs=null}static getDebugInfo(){return{...E.getDeviceCapabilities(),detectionMethods:{userAgentIPhone:/iPhone/.test((navigator==null?void 0:navigator.userAgent)||""),userAgentIPad:/iPad/.test((navigator==null?void 0:navigator.userAgent)||""),userAgentMacintosh:/Macintosh/.test((navigator==null?void 0:navigator.userAgent)||""),touchSupport:"ontouchend"in document,navigatorPlatform:(navigator==null?void 0:navigator.platform)||"Unknown",screenAspectRatio:typeof window<"u"?(window.screen.width/window.screen.height).toFixed(2):"Unknown"}}}};E.cachedSpecs=null;let se=E;var G=(l=>(l.AUDIO_CONTEXT_ERROR="AUDIO_CONTEXT_ERROR",l.MICROPHONE_ACCESS_DENIED="MICROPHONE_ACCESS_DENIED",l.PITCH_DETECTION_ERROR="PITCH_DETECTION_ERROR",l.BUFFER_OVERFLOW="BUFFER_OVERFLOW",l.INVALID_SAMPLE_RATE="INVALID_SAMPLE_RATE",l.DEVICE_NOT_SUPPORTED="DEVICE_NOT_SUPPORTED",l.PROCESSING_TIMEOUT="PROCESSING_TIMEOUT",l))(G||{});class D extends Error{constructor(e,t,s){super(e),this.name="PitchProError",this.code=t,this.timestamp=new Date,this.context=s,Error.captureStackTrace&&Error.captureStackTrace(this,D)}toJSON(){return{name:this.name,message:this.message,code:this.code,timestamp:this.timestamp,context:this.context,stack:this.stack}}}class W extends D{constructor(e,t){super(e,"AUDIO_CONTEXT_ERROR",t),this.name="AudioContextError"}}class Ee extends D{constructor(e,t){super(e,"MICROPHONE_ACCESS_DENIED",t),this.name="MicrophoneAccessError"}}class xe extends D{constructor(e,t,s,i){super(e,"MICROPHONE_ACCESS_DENIED",{healthStatus:t,recoveryAttempts:s,timestamp:Date.now(),...i}),this.name="MicrophoneHealthError"}getHealthStatus(){var e;return(e=this.context)==null?void 0:e.healthStatus}getRecoveryAttempts(){var e;return(e=this.context)==null?void 0:e.recoveryAttempts}}class De extends D{constructor(e,t){super(e,"PITCH_DETECTION_ERROR",t),this.name="PitchDetectionError"}}function Ie(l){return["BUFFER_OVERFLOW","PROCESSING_TIMEOUT","PITCH_DETECTION_ERROR"].includes(l.code)}class x{static getUserFriendlyMessage(e){switch(e.code){case"MICROPHONE_ACCESS_DENIED":return{title:"マイクアクセスが拒否されました",message:"ピッチ検出を行うには、マイクへのアクセス許可が必要です。",actions:["ブラウザのアドレスバーにあるマイクアイコンをクリック","「このサイトでマイクを許可する」を選択","ページを再読み込みしてもう一度試す","プライベートブラウジングモードを無効にする（Safariの場合）"],severity:"high",canRetry:!0};case"AUDIO_CONTEXT_ERROR":return{title:"オーディオシステムエラー",message:"オーディオの初期化に失敗しました。デバイスの音響設定を確認してください。",actions:["他のアプリケーションでマイクが使用中でないか確認","ブラウザを再起動してもう一度試す","システムの音響設定でマイクが有効になっているか確認","外部マイクを使用している場合は接続を確認"],severity:"high",canRetry:!0};case"PITCH_DETECTION_ERROR":return{title:"ピッチ検出エラー",message:"音程の検出中に一時的な問題が発生しました。",actions:["マイクに向かって明確に歌ってみる","周囲のノイズを減らす","感度設定を調整する","数秒待ってからもう一度試す"],severity:"medium",canRetry:!0};case"BUFFER_OVERFLOW":return{title:"バッファオーバーフロー",message:"オーディオデータの処理が追いついていません。",actions:["他のタブやアプリケーションを閉じる","ブラウザのハードウェアアクセラレーションを有効にする","より高性能なデバイスを使用する","ページを再読み込みする"],severity:"medium",canRetry:!0};case"PROCESSING_TIMEOUT":return{title:"処理タイムアウト",message:"オーディオ処理の応答時間が長すぎます。",actions:["デバイスの負荷を減らす（他のアプリを閉じる）","ネットワーク接続を確認する","ブラウザを再起動する","しばらく待ってからもう一度試す"],severity:"medium",canRetry:!0};case"INVALID_SAMPLE_RATE":return{title:"サンプリングレート不適合",message:"お使いのデバイスのサンプリングレートがサポートされていません。",actions:["システムの音響設定で44.1kHz または 48kHzに設定","外部オーディオインターフェースの設定を確認","デバイスドライバを更新","別のマイクを試す"],severity:"high",canRetry:!1};case"DEVICE_NOT_SUPPORTED":return{title:"デバイス非対応",message:"お使いのデバイスまたはブラウザはサポートされていません。",actions:["Chrome、Firefox、Safari の最新版を使用","より新しいデバイスを使用","ブラウザの互換性情報を確認","技術サポートにお問い合わせ"],severity:"critical",canRetry:!1};default:return{title:"予期しないエラー",message:"システムで予期しない問題が発生しました。",actions:["ページを再読み込み","ブラウザを再起動","しばらく時間をおいて再試行","問題が続く場合はサポートへ連絡"],severity:"medium",canRetry:!0}}}static getTechnicalDetails(e){return{errorCode:e.code,timestamp:e.timestamp.toISOString(),context:e.context||{},stackTrace:e.stack,diagnosticInfo:{userAgent:typeof navigator<"u"?navigator.userAgent:"unknown",timestamp:Date.now(),url:typeof window<"u"?window.location.href:"unknown",isRecoverable:Ie(e)}}}static logError(e,t){const s=this.getUserFriendlyMessage(e),i=this.getTechnicalDetails(e);console.group(`🚨 [PitchPro Error] ${s.title}`),console.log("👤 User Message:",s.message),console.log("📋 Suggested Actions:",s.actions),console.log("⚠️ Severity:",s.severity),console.log("🔄 Can Retry:",s.canRetry),console.log("🔧 Error Code:",i.errorCode),console.log("⏰ Timestamp:",i.timestamp),t&&console.log("📍 Context:",t),i.context&&Object.keys(i.context).length>0&&console.log("🔍 Additional Context:",i.context),i.stackTrace&&console.log("📜 Stack Trace:",i.stackTrace),console.groupEnd()}static getRecoveryStrategy(e,t){const s=this.getUserFriendlyMessage(e),i=s.actions.slice(0,2),n=s.actions.slice(2);let o=[];return t==="iPhone"||t==="iPad"?o=["感度を高めに設定（7.0x推奨）","Safari使用を推奨","iOS 14以上で使用","低電力モードを無効にする"]:t==="Android"?o=["Chrome使用を推奨","バックグラウンドアプリを制限","省電力モードを無効にする","マイク権限を常に許可に設定"]:o=["安定したネットワーク環境で使用","ブラウザを最新版に更新","ハードウェアアクセラレーションを有効化","外部ノイズの少ない環境で使用"],{immediate:i,fallback:n,preventive:o}}}class we{constructor(e={}){this.audioContext=null,this.mediaStream=null,this.sourceNode=null,this.gainNode=null,this.analysers=new Map,this.filters=new Map,this.refCount=0,this.initPromise=null,this.isInitialized=!1,this.lastError=null,this.gainMonitorInterval=null,console.log("🔍 [DIAGNOSTIC] AudioManager constructor - input config:",e),this.config={sampleRate:44100,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1,latency:.1,...e},console.log("🔍 [DIAGNOSTIC] AudioManager constructor - final config:",this.config),console.log("🔍 [DIAGNOSTIC] autoGainControl value after merge:",this.config.autoGainControl),this.currentSensitivity=this._getDefaultSensitivity()}_getDefaultSensitivity(){const e=se.getDeviceSpecs();return console.log(`🔧 [AudioManager] ${e.deviceType} detected - setting default sensitivity ${e.sensitivity}x`),e.sensitivity}async initialize(){var e,t,s;if(this.initPromise)return this.initPromise;if(this.isInitialized&&this.audioContext&&this.mediaStream){const i=this.checkMediaStreamHealth();if(i.healthy)return this.refCount++,{audioContext:this.audioContext,mediaStream:this.mediaStream,sourceNode:this.sourceNode};console.warn("⚠️ [AudioManager] Unhealthy MediaStream detected - force re-initialization:",i),console.log("🔄 [AudioManager] Unhealthy MediaStream details:",{mediaStreamActive:(e=this.mediaStream)==null?void 0:e.active,trackCount:(t=this.mediaStream)==null?void 0:t.getTracks().length,trackStates:(s=this.mediaStream)==null?void 0:s.getTracks().map(n=>({kind:n.kind,readyState:n.readyState,enabled:n.enabled,muted:n.muted}))}),this._cleanup(),this.isInitialized=!1,this.refCount=0,await new Promise(n=>setTimeout(n,100)),console.log("🔄 [AudioManager] Cleanup complete - starting re-initialization")}this.initPromise=this._doInitialize();try{const i=await this.initPromise;return this.initPromise=null,i}catch(i){throw this.initPromise=null,i}}async _doInitialize(){try{if(console.log("🎤 [AudioManager] Starting initialization"),this.audioContext||(this.audioContext=new(window.AudioContext||window.webkitAudioContext),console.log("✅ [AudioManager] AudioContext creation complete")),this.audioContext.state==="suspended"&&(await this.audioContext.resume(),console.log("✅ [AudioManager] AudioContext resume complete")),!this.mediaStream){const e=this.getPlatformSpecs();console.log(`🔍 [AudioManager] Device detection: ${e.deviceType}`,navigator.userAgent),console.log(`🔍 [AudioManager] Touch support: ${"ontouchend"in document}`),console.log("🔍 [DIAGNOSTIC] Device specs from getPlatformSpecs():",e),console.log("🔍 [DIAGNOSTIC] Current this.config before constraints creation:",this.config);const t={audio:{echoCancellation:this.config.echoCancellation,noiseSuppression:this.config.noiseSuppression,autoGainControl:this.config.autoGainControl,...window.chrome&&{googAutoGainControl:!1,googNoiseSuppression:!1,googEchoCancellation:!1,googHighpassFilter:!1,googTypingNoiseDetection:!1,googBeamforming:!1},...navigator.userAgent.includes("Firefox")&&{mozAutoGainControl:!1,mozNoiseSuppression:!1},sampleRate:this.config.sampleRate,channelCount:this.config.channelCount,sampleSize:16,deviceId:{ideal:"default"}}};console.log("🎤 [AudioManager] Getting MediaStream with Safari-compatible settings:",t),this.mediaStream=await navigator.mediaDevices.getUserMedia(t),console.log("✅ [AudioManager] MediaStream acquisition complete");const s=this.mediaStream.getAudioTracks()[0];if(s&&typeof s.getConstraints=="function"&&typeof s.getSettings=="function")try{const i=s.getConstraints(),n=s.getSettings();console.log("🔍 [DIAGNOSTIC] Requested autoGainControl:",t.audio&&t.audio.autoGainControl),console.log("🔍 [DIAGNOSTIC] Actually applied constraints:",i),console.log("🔍 [DIAGNOSTIC] Actual MediaStream settings:",n),n.autoGainControl===!0?(console.warn("⚠️ [DIAGNOSTIC] CRITICAL: Browser ignored autoGainControl: false setting!"),console.warn("⚠️ [DIAGNOSTIC] This explains the gain drift issues - browser is automatically adjusting gain")):console.log("✅ [DIAGNOSTIC] autoGainControl successfully disabled by browser")}catch{console.log("ℹ️ [DIAGNOSTIC] MediaTrack constraint inspection not available in this environment")}else console.log("ℹ️ [DIAGNOSTIC] MediaTrack constraint inspection not supported in this environment")}if(!this.sourceNode){this.sourceNode=this.audioContext.createMediaStreamSource(this.mediaStream),console.log("✅ [AudioManager] SourceNode creation complete");const e=this.mediaStream.getTracks();console.log("🎤 [AudioManager] MediaStream tracks:",e.map(t=>({kind:t.kind,label:t.label,enabled:t.enabled,readyState:t.readyState,muted:t.muted})))}return this.gainNode||(this.gainNode=this.audioContext.createGain(),this.gainNode.gain.setValueAtTime(this.currentSensitivity,this.audioContext.currentTime),this.sourceNode.connect(this.gainNode),console.log(`✅ [AudioManager] GainNode creation complete (sensitivity: ${this.currentSensitivity}x)`)),this.isInitialized=!0,this.refCount++,this.lastError=null,console.log(`🎤 [AudioManager] Initialization complete (refCount: ${this.refCount})`),{audioContext:this.audioContext,mediaStream:this.mediaStream,sourceNode:this.sourceNode}}catch(e){const t=this._createStructuredError(e,"initialization");throw x.logError(t,"AudioManager initialization"),this.lastError=t,this.isInitialized=!1,this._cleanup(),t}}createAnalyser(e,t={}){if(!this.isInitialized||!this.audioContext||!this.sourceNode){const h=new W("AudioManagerが初期化されていません。initialize()メソッドを最初に呼び出してください。",{operation:"createAnalyser",analyserId:e,currentState:{isInitialized:this.isInitialized,hasAudioContext:!!this.audioContext,hasSourceNode:!!this.sourceNode}});throw x.logError(h,"Analyser creation"),h}this.removeAnalyser(e);const{fftSize:s=2048,smoothingTimeConstant:i=.8,minDecibels:n=-90,maxDecibels:o=-10,useFilters:r=!0}=t,a=this.audioContext.createAnalyser();a.fftSize=Math.min(s,2048),a.smoothingTimeConstant=Math.max(i,.7),a.minDecibels=Math.max(n,-80),a.maxDecibels=Math.min(o,-10);let c=this.gainNode||this.sourceNode;if(r){const h=this._createFilterChain();this.filters.set(e,h),c.connect(h.highpass),h.highpass.connect(h.lowpass),h.lowpass.connect(h.notch),h.notch.connect(a),console.log(`🔧 [AudioManager] Filtered Analyser created: ${e}`)}else c.connect(a),console.log(`🔧 [AudioManager] Raw signal Analyser created: ${e}`);return this.analysers.set(e,a),a}_createFilterChain(){if(!this.audioContext){const i=new W("AudioContextが利用できません。ブラウザでオーディオ機能が無効になっているか、デバイスがサポートされていません。",{operation:"_createFilterChain",audioContextState:"null"});throw x.logError(i,"Filter chain creation"),i}const e=this.audioContext.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(80,this.audioContext.currentTime),e.Q.setValueAtTime(.7,this.audioContext.currentTime);const t=this.audioContext.createBiquadFilter();t.type="lowpass",t.frequency.setValueAtTime(800,this.audioContext.currentTime),t.Q.setValueAtTime(.7,this.audioContext.currentTime);const s=this.audioContext.createBiquadFilter();return s.type="notch",s.frequency.setValueAtTime(60,this.audioContext.currentTime),s.Q.setValueAtTime(10,this.audioContext.currentTime),{highpass:e,lowpass:t,notch:s}}removeAnalyser(e){if(this.analysers.has(e)&&(this.analysers.get(e).disconnect(),this.analysers.delete(e),console.log(`🗑️ [AudioManager] Analyser removed: ${e}`)),this.filters.has(e)){const t=this.filters.get(e);t.highpass.disconnect(),t.lowpass.disconnect(),t.notch.disconnect(),this.filters.delete(e),console.log(`🗑️ [AudioManager] Filter chain removed: ${e}`)}}setSensitivity(e){var s;const t=Math.max(.1,Math.min(10,e));this.gainNode?(this.gainNode.gain.setValueAtTime(t,((s=this.audioContext)==null?void 0:s.currentTime)||0),this.currentSensitivity=t,setTimeout(()=>{if(!this.gainNode)return;const i=this.gainNode.gain.value,n=.1;if(Math.abs(i-t)>n){const o=new D(`期待ゲイン(${t}x)が設定できませんでした。ブラウザのautoGainControlが有効になっている可能性があります。実際値: ${i}`,G.AUDIO_CONTEXT_ERROR,{operation:"setSensitivity_verification_critical",expectedGain:t,actualGain:i,driftAmount:Math.abs(i-t),tolerance:n,isCriticalFailure:!0,suggestion:"ブラウザ設定でautoGainControlを無効にするか、デバイス設定を確認してください"});throw x.logError(o,"Critical gain setting failure"),o}else console.log(`✅ [AudioManager] Gain setting verified: ${i.toFixed(1)}x (expected: ${t.toFixed(1)}x)`)},50),console.log(`🎤 [AudioManager] Microphone sensitivity updated: ${t.toFixed(1)}x`)):(this.currentSensitivity=t,console.log(`🎤 [AudioManager] Microphone sensitivity set (awaiting initialization): ${t.toFixed(1)}x`))}getSensitivity(){return this.currentSensitivity}stopGainMonitoring(){this.gainMonitorInterval&&(clearInterval(this.gainMonitorInterval),this.gainMonitorInterval=null)}getPlatformSpecs(){const e=se.getDeviceSpecs();return{...e,sensitivity:this.currentSensitivity||e.sensitivity}}release(e=[]){e.forEach(t=>this.removeAnalyser(t)),this.refCount=Math.max(0,this.refCount-1),console.log(`📉 [AudioManager] Reference count decremented: ${this.refCount}`),this.refCount<=0&&(console.log("🧹 [AudioManager] Starting full resource cleanup"),this._cleanup())}forceCleanup(){console.log("🚨 [AudioManager] Force cleanup executed"),this._cleanup()}_cleanup(){var e;console.log("🧹 [AudioManager] Starting cleanup"),this.stopGainMonitoring();for(const t of this.analysers.keys())this.removeAnalyser(t);if(this.mediaStream){const t=this.mediaStream.getTracks();console.log(`🛑 [AudioManager] Stopping MediaStream: ${t.length} tracks`),t.forEach((s,i)=>{try{s.readyState!=="ended"?(s.stop(),console.log(`🛑 [AudioManager] Track ${i} stop complete`)):console.log(`⚠️ [AudioManager] Track ${i} already ended`)}catch(n){const o=new D(`メディアトラック ${i} の停止中にエラーが発生しました: ${n.message}`,G.AUDIO_CONTEXT_ERROR,{operation:"track_cleanup",trackIndex:i,originalError:n.message,trackState:s.readyState});x.logError(o,"Media track cleanup")}}),this.mediaStream=null}if(this.audioContext&&this.audioContext.state!=="closed"){try{this.audioContext.close(),console.log("🛑 [AudioManager] AudioContext close complete")}catch(t){const s=new W(`AudioContextの終了中にエラーが発生しました: ${t.message}`,{operation:"audioContext_cleanup",contextState:(e=this.audioContext)==null?void 0:e.state,originalError:t.message});x.logError(s,"AudioContext cleanup")}this.audioContext=null}this.gainNode&&(this.gainNode.disconnect(),this.gainNode=null),this.sourceNode&&(this.sourceNode.disconnect(),this.sourceNode=null),this.isInitialized=!1,this.refCount=0,this.initPromise=null,this.currentSensitivity=this._getDefaultSensitivity(),console.log("✅ [AudioManager] Cleanup complete")}_createStructuredError(e,t){var s,i;return e.message.includes("Permission denied")||e.message.includes("NotAllowedError")||e.message.includes("permission")?new Ee("マイクへのアクセス許可が拒否されました。ブラウザの設定でマイクアクセスを許可してください。",{operation:t,originalError:e.message,deviceSpecs:this.getPlatformSpecs(),userAgent:typeof navigator<"u"?navigator.userAgent:"unknown"}):e.message.includes("AudioContext")||e.message.includes("audio")||e.message.includes("context")?new W("オーディオシステムの初期化に失敗しました。デバイスの音響設定を確認するか、ブラウザを再起動してください。",{operation:t,originalError:e.message,audioContextState:((s=this.audioContext)==null?void 0:s.state)||"none",sampleRate:((i=this.audioContext)==null?void 0:i.sampleRate)||"unknown",deviceSpecs:this.getPlatformSpecs()}):new D(`${t}中に予期しないエラーが発生しました: ${e.message}`,G.AUDIO_CONTEXT_ERROR,{operation:t,originalError:e.message,stack:e.stack,currentState:{isInitialized:this.isInitialized,refCount:this.refCount,hasResources:!!(this.audioContext&&this.mediaStream&&this.sourceNode)}})}getStatus(){var e,t;return{isInitialized:this.isInitialized,refCount:this.refCount,audioContextState:((e=this.audioContext)==null?void 0:e.state)||"none",mediaStreamActive:((t=this.mediaStream)==null?void 0:t.active)||!1,activeAnalysers:Array.from(this.analysers.keys()),activeFilters:Array.from(this.filters.keys()),lastError:this.lastError,currentSensitivity:this.currentSensitivity}}checkMediaStreamHealth(){var i,n,o,r,a,c,h,m,d;if(!this.mediaStream)return{mediaStreamActive:!1,audioContextState:((i=this.audioContext)==null?void 0:i.state)||"none",trackStates:[],healthy:!1};if(!this.mediaStream.active)return{mediaStreamActive:!1,audioContextState:((n=this.audioContext)==null?void 0:n.state)||"none",trackStates:[],healthy:!1};const e=this.mediaStream.getTracks();if(e.length===0)return{mediaStreamActive:this.mediaStream.active,audioContextState:((o=this.audioContext)==null?void 0:o.state)||"none",trackStates:[],healthy:!1};const t=e.find(u=>u.kind==="audio");if(!t)return{mediaStreamActive:this.mediaStream.active,audioContextState:((r=this.audioContext)==null?void 0:r.state)||"none",trackStates:e.map(u=>({kind:u.kind,enabled:u.enabled,readyState:u.readyState,muted:u.muted})),healthy:!1};const s=e.map(u=>({kind:u.kind,enabled:u.enabled,readyState:u.readyState,muted:u.muted}));return t.readyState==="ended"?{mediaStreamActive:this.mediaStream.active,audioContextState:((a=this.audioContext)==null?void 0:a.state)||"none",trackStates:s,healthy:!1}:t.enabled?t.muted?{mediaStreamActive:this.mediaStream.active,audioContextState:((h=this.audioContext)==null?void 0:h.state)||"none",trackStates:s,healthy:!1}:this.mediaStream.active&&t.readyState!=="live"?{mediaStreamActive:this.mediaStream.active,audioContextState:((m=this.audioContext)==null?void 0:m.state)||"none",trackStates:s,healthy:!1}:{mediaStreamActive:this.mediaStream.active,audioContextState:((d=this.audioContext)==null?void 0:d.state)||"none",trackStates:s,healthy:!0,refCount:this.refCount}:{mediaStreamActive:this.mediaStream.active,audioContextState:((c=this.audioContext)==null?void 0:c.state)||"none",trackStates:s,healthy:!1}}}function We(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}function R(l){if(this.size=l|0,this.size<=1||this.size&this.size-1)throw new Error("FFT size must be a power of two and bigger than 1");this._csize=l<<1;for(var e=new Array(this.size*2),t=0;t<e.length;t+=2){const a=Math.PI*t/this.size;e[t]=Math.cos(a),e[t+1]=-Math.sin(a)}this.table=e;for(var s=0,i=1;this.size>i;i<<=1)s++;this._width=s%2===0?s-1:s,this._bitrev=new Array(1<<this._width);for(var n=0;n<this._bitrev.length;n++){this._bitrev[n]=0;for(var o=0;o<this._width;o+=2){var r=this._width-o-2;this._bitrev[n]|=(n>>>o&3)<<r}}this._out=null,this._data=null,this._inv=0}var Xe=R;R.prototype.fromComplexArray=function(e,t){for(var s=t||new Array(e.length>>>1),i=0;i<e.length;i+=2)s[i>>>1]=e[i];return s};R.prototype.createComplexArray=function(){const e=new Array(this._csize);for(var t=0;t<e.length;t++)e[t]=0;return e};R.prototype.toComplexArray=function(e,t){for(var s=t||this.createComplexArray(),i=0;i<s.length;i+=2)s[i]=e[i>>>1],s[i+1]=0;return s};R.prototype.completeSpectrum=function(e){for(var t=this._csize,s=t>>>1,i=2;i<s;i+=2)e[t-i]=e[i],e[t-i+1]=-e[i+1]};R.prototype.transform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._transform4(),this._out=null,this._data=null};R.prototype.realTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._realTransform4(),this._out=null,this._data=null};R.prototype.inverseTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=1,this._transform4();for(var s=0;s<e.length;s++)e[s]/=this.size;this._out=null,this._data=null};R.prototype._transform4=function(){var e=this._out,t=this._csize,s=this._width,i=1<<s,n=t/i<<1,o,r,a=this._bitrev;if(n===4)for(o=0,r=0;o<t;o+=n,r++){const g=a[r];this._singleTransform2(o,g,i)}else for(o=0,r=0;o<t;o+=n,r++){const g=a[r];this._singleTransform4(o,g,i)}var c=this._inv?-1:1,h=this.table;for(i>>=2;i>=2;i>>=2){n=t/i<<1;var m=n>>>2;for(o=0;o<t;o+=n)for(var d=o+m,u=o,f=0;u<d;u+=2,f+=i){const g=u,v=g+m,y=v+m,S=y+m,b=e[g],p=e[g+1],A=e[v],q=e[v+1],O=e[y],j=e[y+1],z=e[S],k=e[S+1],L=b,$=p,H=h[f],V=c*h[f+1],B=A*H-q*V,U=A*V+q*H,X=h[2*f],J=c*h[2*f+1],Y=O*X-j*J,K=O*J+j*X,Z=h[3*f],M=c*h[3*f+1],T=z*Z-k*M,w=z*M+k*Z,ee=L+Y,F=$+K,P=L-Y,ie=$-K,ae=B+T,ne=U+w,oe=c*(B-T),ce=c*(U-w),de=ee+ae,fe=F+ne,ge=ee-ae,pe=F-ne,ye=P+ce,ve=ie-oe,Se=P-ce,Ce=ie+oe;e[g]=de,e[g+1]=fe,e[v]=ye,e[v+1]=ve,e[y]=ge,e[y+1]=pe,e[S]=Se,e[S+1]=Ce}}};R.prototype._singleTransform2=function(e,t,s){const i=this._out,n=this._data,o=n[t],r=n[t+1],a=n[t+s],c=n[t+s+1],h=o+a,m=r+c,d=o-a,u=r-c;i[e]=h,i[e+1]=m,i[e+2]=d,i[e+3]=u};R.prototype._singleTransform4=function(e,t,s){const i=this._out,n=this._data,o=this._inv?-1:1,r=s*2,a=s*3,c=n[t],h=n[t+1],m=n[t+s],d=n[t+s+1],u=n[t+r],f=n[t+r+1],g=n[t+a],v=n[t+a+1],y=c+u,S=h+f,b=c-u,p=h-f,A=m+g,q=d+v,O=o*(m-g),j=o*(d-v),z=y+A,k=S+q,L=b+j,$=p-O,H=y-A,V=S-q,B=b-j,U=p+O;i[e]=z,i[e+1]=k,i[e+2]=L,i[e+3]=$,i[e+4]=H,i[e+5]=V,i[e+6]=B,i[e+7]=U};R.prototype._realTransform4=function(){var e=this._out,t=this._csize,s=this._width,i=1<<s,n=t/i<<1,o,r,a=this._bitrev;if(n===4)for(o=0,r=0;o<t;o+=n,r++){const be=a[r];this._singleRealTransform2(o,be>>>1,i>>>1)}else for(o=0,r=0;o<t;o+=n,r++){const be=a[r];this._singleRealTransform4(o,be>>>1,i>>>1)}var c=this._inv?-1:1,h=this.table;for(i>>=2;i>=2;i>>=2){n=t/i<<1;var m=n>>>1,d=m>>>1,u=d>>>1;for(o=0;o<t;o+=n)for(var f=0,g=0;f<=u;f+=2,g+=i){var v=o+f,y=v+d,S=y+d,b=S+d,p=e[v],A=e[v+1],q=e[y],O=e[y+1],j=e[S],z=e[S+1],k=e[b],L=e[b+1],$=p,H=A,V=h[g],B=c*h[g+1],U=q*V-O*B,X=q*B+O*V,J=h[2*g],Y=c*h[2*g+1],K=j*J-z*Y,Z=j*Y+z*J,M=h[3*g],T=c*h[3*g+1],w=k*M-L*T,ee=k*T+L*M,F=$+K,P=H+Z,ie=$-K,ae=H-Z,ne=U+w,oe=X+ee,ce=c*(U-w),de=c*(X-ee),fe=F+ne,ge=P+oe,pe=ie+de,ye=ae-ce;if(e[v]=fe,e[v+1]=ge,e[y]=pe,e[y+1]=ye,f===0){var ve=F-ne,Se=P-oe;e[S]=ve,e[S+1]=Se;continue}if(f!==u){var Ce=ie,qe=-ae,Oe=F,ze=-P,ke=-c*de,Le=-c*ce,$e=-c*oe,He=-c*ne,Ve=Ce+ke,Be=qe+Le,Ue=Oe+He,Ge=ze-$e,Te=o+d-f,Fe=o+m-f;e[Te]=Ve,e[Te+1]=Be,e[Fe]=Ue,e[Fe+1]=Ge}}}};R.prototype._singleRealTransform2=function(e,t,s){const i=this._out,n=this._data,o=n[t],r=n[t+s],a=o+r,c=o-r;i[e]=a,i[e+1]=0,i[e+2]=c,i[e+3]=0};R.prototype._singleRealTransform4=function(e,t,s){const i=this._out,n=this._data,o=this._inv?-1:1,r=s*2,a=s*3,c=n[t],h=n[t+s],m=n[t+r],d=n[t+a],u=c+m,f=c-m,g=h+d,v=o*(h-d),y=u+g,S=f,b=-v,p=u-g,A=f,q=v;i[e]=y,i[e+1]=0,i[e+2]=S,i[e+3]=b,i[e+4]=p,i[e+5]=0,i[e+6]=A,i[e+7]=q};const Je=We(Xe);class le{constructor(e,t){_(this,"_inputLength");_(this,"_fft");_(this,"_bufferSupplier");_(this,"_paddedInputBuffer");_(this,"_transformBuffer");_(this,"_inverseBuffer");if(e<1)throw new Error("Input length must be at least one");this._inputLength=e,this._fft=new Je(et(2*e)),this._bufferSupplier=t,this._paddedInputBuffer=this._bufferSupplier(this._fft.size),this._transformBuffer=this._bufferSupplier(2*this._fft.size),this._inverseBuffer=this._bufferSupplier(2*this._fft.size)}static forFloat32Array(e){return new le(e,t=>new Float32Array(t))}static forFloat64Array(e){return new le(e,t=>new Float64Array(t))}static forNumberArray(e){return new le(e,t=>Array(t))}get inputLength(){return this._inputLength}autocorrelate(e,t=this._bufferSupplier(e.length)){if(e.length!==this._inputLength)throw new Error(`Input must have length ${this._inputLength} but had length ${e.length}`);for(let i=0;i<e.length;i++)this._paddedInputBuffer[i]=e[i];for(let i=e.length;i<this._paddedInputBuffer.length;i++)this._paddedInputBuffer[i]=0;this._fft.realTransform(this._transformBuffer,this._paddedInputBuffer),this._fft.completeSpectrum(this._transformBuffer);const s=this._transformBuffer;for(let i=0;i<s.length;i+=2)s[i]=s[i]*s[i]+s[i+1]*s[i+1],s[i+1]=0;this._fft.inverseTransform(this._inverseBuffer,this._transformBuffer);for(let i=0;i<e.length;i++)t[i]=this._inverseBuffer[2*i];return t}}function Ye(l){const e=[];let t=!1,s=-1/0,i=-1;for(let n=1;n<l.length-1;n++)l[n-1]<=0&&l[n]>0?(t=!0,i=n,s=l[n]):l[n-1]>0&&l[n]<=0?(t=!1,i!==-1&&e.push(i)):t&&l[n]>s&&(s=l[n],i=n);return e}function Ke(l,e){const[t,s,i]=[l-1,l,l+1],[n,o,r]=[e[t],e[s],e[i]],a=n/2-o+r/2,c=-(n/2)*(s+i)+o*(t+i)-r/2*(t+s),h=n*s*i/2-o*t*i+r*t*s/2,m=-c/(2*a),d=a*m*m+c*m+h;return[m,d]}let Ze=class me{constructor(e,t){_(this,"_autocorrelator");_(this,"_nsdfBuffer");_(this,"_clarityThreshold",.9);_(this,"_minVolumeAbsolute",0);_(this,"_maxInputAmplitude",1);this._autocorrelator=new le(e,t),this._nsdfBuffer=t(e)}static forFloat32Array(e){return new me(e,t=>new Float32Array(t))}static forFloat64Array(e){return new me(e,t=>new Float64Array(t))}static forNumberArray(e){return new me(e,t=>Array(t))}get inputLength(){return this._autocorrelator.inputLength}set clarityThreshold(e){if(!Number.isFinite(e)||e<=0||e>1)throw new Error("clarityThreshold must be a number in the range (0, 1]");this._clarityThreshold=e}set minVolumeAbsolute(e){if(!Number.isFinite(e)||e<0||e>this._maxInputAmplitude)throw new Error(`minVolumeAbsolute must be a number in the range [0, ${this._maxInputAmplitude}]`);this._minVolumeAbsolute=e}set minVolumeDecibels(e){if(!Number.isFinite(e)||e>0)throw new Error("minVolumeDecibels must be a number <= 0");this._minVolumeAbsolute=this._maxInputAmplitude*10**(e/10)}set maxInputAmplitude(e){if(!Number.isFinite(e)||e<=0)throw new Error("maxInputAmplitude must be a number > 0");this._maxInputAmplitude=e}findPitch(e,t){if(this._belowMinimumVolume(e))return[0,0];this._nsdf(e);const s=Ye(this._nsdfBuffer);if(s.length===0)return[0,0];const i=Math.max(...s.map(a=>this._nsdfBuffer[a])),n=s.find(a=>this._nsdfBuffer[a]>=this._clarityThreshold*i),[o,r]=Ke(n,this._nsdfBuffer);return[t/o,Math.min(r,1)]}_belowMinimumVolume(e){if(this._minVolumeAbsolute===0)return!1;let t=0;for(let s=0;s<e.length;s++)t+=e[s]**2;return Math.sqrt(t/e.length)<this._minVolumeAbsolute}_nsdf(e){this._autocorrelator.autocorrelate(e,this._nsdfBuffer);let t=2*this._nsdfBuffer[0],s;for(s=0;s<this._nsdfBuffer.length&&t>0;s++)this._nsdfBuffer[s]=2*this._nsdfBuffer[s]/t,t-=e[s]**2+e[e.length-s-1]**2;for(;s<this._nsdfBuffer.length;s++)this._nsdfBuffer[s]=0}};function et(l){return l--,l|=l>>1,l|=l>>2,l|=l>>4,l|=l>>8,l|=l>>16,l++,l}class tt{constructor(e=45){this.lastFrameTime=0,this.nextFrameTime=0,this.frameDrops=0,this.MIN_FPS=30,this.MAX_FPS=60,this.OPTIMAL_FPS=45,this.targetFPS=Math.max(this.MIN_FPS,Math.min(e,this.MAX_FPS)),this.frameInterval=1e3/this.targetFPS}shouldProcess(){const e=performance.now();return this.nextFrameTime===0?(this.nextFrameTime=e+this.frameInterval,this.lastFrameTime=e,!0):e>=this.nextFrameTime?(e-this.lastFrameTime>this.frameInterval*1.5&&(this.frameDrops++,this.adjustFrameRate()),this.nextFrameTime=e+this.frameInterval,this.lastFrameTime=e,!0):!1}adjustFrameRate(){if(this.frameDrops>5&&this.targetFPS>this.MIN_FPS){this.targetFPS=Math.max(this.MIN_FPS,this.targetFPS-5),this.frameInterval=1e3/this.targetFPS,this.frameDrops=0;const e=performance.now();this.nextFrameTime=e+this.frameInterval,console.log(`Adjusted FPS to ${this.targetFPS} due to high load`)}}recoverPerformance(){if(this.frameDrops===0&&this.targetFPS<this.OPTIMAL_FPS){this.targetFPS=Math.min(this.OPTIMAL_FPS,this.targetFPS+5),this.frameInterval=1e3/this.targetFPS;const e=performance.now();this.nextFrameTime=e+this.frameInterval}}reset(){this.lastFrameTime=0,this.nextFrameTime=0,this.frameDrops=0,this.targetFPS=this.OPTIMAL_FPS,this.frameInterval=1e3/this.targetFPS}getStats(){return{currentFPS:this.targetFPS,frameDrops:this.frameDrops,latency:this.frameInterval}}}class Ne{constructor(e,t={}){this.pitchDetector=null,this.analyser=null,this.rawAnalyser=null,this.animationFrame=null,this.componentState="uninitialized",this.isInitialized=!1,this.isDetecting=!1,this.lastError=null,this.analyserIds=[],this.currentVolume=0,this.rawVolume=0,this.currentFrequency=0,this.detectedNote="--",this.detectedOctave=null,this.pitchClarity=0,this.volumeHistory=[],this.stableVolume=0,this.previousFrequency=0,this.harmonicHistory=[],this.disableHarmonicCorrection=!1,this.callbacks={},this.deviceSpecs=null,this.silenceStartTime=null,this.silenceWarningTimer=null,this.silenceTimeoutTimer=null,this.isSilent=!1,this.hasWarned=!1,this.audioManager=e,this.config={fftSize:4096,smoothing:.9,clarityThreshold:.4,minVolumeAbsolute:.01,noiseGate:.02,deviceOptimization:!0,...t},this.harmonicConfig={enabled:!0,confidenceThreshold:.7,historyWindow:1e3,frequencyThreshold:.1,...t.harmonicCorrection},this.volumeHistoryConfig={historyLength:10,useTypedArray:!0,...t.volumeHistory},this.initializeVolumeHistory(),this.disableHarmonicCorrection=!this.harmonicConfig.enabled,this.silenceDetectionConfig={enabled:!1,warningThreshold:15e3,timeoutThreshold:3e4,minVolumeThreshold:.01,...t.silenceDetection},this.frameRateLimiter=new tt(45)}setCallbacks(e){this.callbacks={...this.callbacks,...e}}async initialize(){var e,t,s,i,n;try{this.componentState="initializing",this.lastError=null,console.log("🎙️ [PitchDetector] Starting initialization via AudioManager"),await this.audioManager.initialize(),this.deviceSpecs=this.audioManager.getPlatformSpecs(),console.log("📱 [PitchDetector] Device specs initialized:",this.deviceSpecs.deviceType),console.log("✅ [PitchDetector] AudioManager resources acquired");const o=`pitch-detector-filtered-${Date.now()}`;this.analyser=this.audioManager.createAnalyser(o,{fftSize:this.config.fftSize,smoothingTimeConstant:this.config.smoothing,minDecibels:-90,maxDecibels:-10,useFilters:!0}),this.analyserIds.push(o);const r=`pitch-detector-raw-${Date.now()}`;this.rawAnalyser=this.audioManager.createAnalyser(r,{fftSize:this.config.fftSize,smoothingTimeConstant:this.config.smoothing,minDecibels:-90,maxDecibels:-10,useFilters:!1}),this.analyserIds.push(r),console.log("✅ [PitchDetector] Analysers created:",this.analyserIds),this.pitchDetector=Ze.forFloat32Array(this.analyser.fftSize),typeof process<"u"&&((e=process.env)==null?void 0:e.NODE_ENV)==="development"&&console.log(`[Debug] Pitchyインスタンス作成: ${!!this.pitchDetector}, FFTサイズ: ${this.analyser.fftSize}`),this.componentState="ready",this.isInitialized=!0,(s=(t=this.callbacks).onStateChange)==null||s.call(t,this.componentState),console.log("✅ [PitchDetector] Initialization complete")}catch(o){const r=o instanceof D?o:new W("PitchDetector initialization failed",{originalError:o instanceof Error?o.message:String(o),audioContextState:this.audioManager.getStatus().audioContextState,deviceSpecs:this.deviceSpecs});throw console.error("❌ [PitchDetector] Initialization error:",r.toJSON()),this.componentState="error",this.lastError=r,this.isInitialized=!1,(n=(i=this.callbacks).onError)==null||n.call(i,r),o}}startDetection(){var e,t,s,i,n,o;if(this.componentState!=="ready"){const r=new Error(`Cannot start detection: component state is ${this.componentState}`);return(t=(e=this.callbacks).onError)==null||t.call(e,r),!1}if(!this.analyser||!this.pitchDetector){const r=new De("ピッチ検出に必要なコンポーネントが初期化されていません。initialize()メソッドを先に呼び出してください。",{operation:"startDetection",hasAnalyser:!!this.analyser,hasPitchDetector:!!this.pitchDetector,componentState:this.componentState,isInitialized:this.isInitialized});return x.logError(r,"Pitch detection startup"),this.componentState="error",(i=(s=this.callbacks).onError)==null||i.call(s,r),!1}return this.componentState="detecting",this.isDetecting=!0,(o=(n=this.callbacks).onStateChange)==null||o.call(n,this.componentState),this.detectPitch(),!0}stopDetection(){var e,t;this.isDetecting=!1,this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null),this.frameRateLimiter.reset(),this.resetSilenceTracking(),this.componentState==="detecting"&&this.isInitialized&&(this.componentState="ready",(t=(e=this.callbacks).onStateChange)==null||t.call(e,this.componentState))}detectPitch(){var z,k,L,$,H,V,B,U,X,J,Y,K,Z;const e=typeof process<"u"&&((z=process.env)==null?void 0:z.NODE_ENV)==="development"||typeof window<"u",t=performance.now();if(!this.frameRateLimiter.shouldProcess()){this.animationFrame=requestAnimationFrame(()=>this.detectPitch());return}if(typeof process<"u"&&((k=process.env)==null?void 0:k.NODE_ENV)==="development"){console.log(`[Debug] detectPitch呼び出し: detecting=${this.isDetecting}, analyser=${!!this.analyser}, rawAnalyser=${!!this.rawAnalyser}, pitchDetector=${!!this.pitchDetector}`);const M=this.audioManager.getStatus();console.log(`[Debug] AudioManager状態: context=${M.audioContextState}, stream=${M.mediaStreamActive}`)}if(!this.isDetecting||!this.analyser||!this.rawAnalyser||!this.pitchDetector||!this.deviceSpecs)return;const s=this.analyser.fftSize,i=new Float32Array(s),n=new Float32Array(this.rawAnalyser.fftSize);if(this.analyser.getFloatTimeDomainData(i),this.rawAnalyser.getFloatTimeDomainData(n),typeof process<"u"&&((L=process.env)==null?void 0:L.NODE_ENV)==="development"){const M=i.filter(w=>Math.abs(w)>1e-4).length,T=Math.max(...i.map(w=>Math.abs(w)));console.log(`[Debug] バッファー分析: 非ゼロ値=${M}/${s}, 最大値=${T.toFixed(6)}`)}let o=0;for(let M=0;M<s;M++)o+=Math.abs(i[M]);const r=Math.sqrt(o/s);typeof process<"u"&&(($=process.env)==null?void 0:$.NODE_ENV)==="development"&&console.log(`[Debug] RMS計算: sum=${o.toFixed(6)}, rms=${r.toFixed(6)}`);const a=this.deviceSpecs,c=r*a.gainCompensation,h=400,m=1500,d=c*h,u=Math.min(100,Math.max(0,d));e&&(console.log("[Debug] 音量計算詳細:"),console.log(`  rms=${r.toFixed(6)}`),console.log(`  adjustedRms=${c.toFixed(6)}`),console.log(`  SCALING_FACTOR=${h}`),console.log(`  計算前: adjustedRms * SCALING_FACTOR = ${d.toFixed(6)}`),console.log(`  計算後volumePercent=${u.toFixed(2)}%`),console.log(`  クリップされた？: ${d>100?"YES":"NO"}`),console.log(`  プラットフォーム: gain=${a.gainCompensation}, divisor=${a.divisor}`));let f=0;for(let M=0;M<n.length;M++)f+=Math.abs(n[M]);const v=Math.sqrt(f/n.length)*a.gainCompensation,y=Math.min(100,Math.max(0,v*h));this.addToVolumeHistory(u),this.stableVolume=this.calculateVolumeAverage(),e&&console.log(`[Debug] 平滑化結果: volumePercent=${u.toFixed(2)}%, stableVolume=${this.stableVolume.toFixed(2)}%`);const S=this.config.minVolumeAbsolute*m,b=u<S;if(e&&(console.log("[Debug] ノイズゲート判定:"),console.log(`  閾値: ${S.toFixed(2)}%`),console.log(`  現在値: ${u.toFixed(2)}%`),console.log(`  判定: ${b?"ノイズとしてブロック":"有効信号として通過"}`)),b)this.currentVolume=0,this.rawVolume=0,this.currentFrequency=0,this.detectedNote="--",this.detectedOctave=null,this.pitchClarity=0,this.resetHarmonicHistory(),typeof process<"u"&&((H=process.env)==null?void 0:H.NODE_ENV)==="development"&&console.log(`[Debug] ノイズゲート作動: 入力音量=${u.toFixed(3)} < 閾値=${S}, stableVolume=${this.stableVolume.toFixed(3)}（保持）`);else{this.currentVolume=this.stableVolume,this.rawVolume=y;const M=((V=this.analyser.context)==null?void 0:V.sampleRate)||44100;let T=0,w=0;try{const F=this.pitchDetector.findPitch(i,M);T=F[0]||0,w=F[1]||0}catch(F){const P=new De("Pitch detection algorithm failed",{bufferLength:i.length,sampleRate:M,volume:this.currentVolume,originalError:F instanceof Error?F.message:String(F)});if(console.warn("⚠️ [PitchDetector] Pitch detection error (recoverable):",P.toJSON()),Ie(P))T=0,w=0;else{(U=(B=this.callbacks).onError)==null||U.call(B,P);return}}typeof process<"u"&&((X=process.env)==null?void 0:X.NODE_ENV)==="development"&&(console.log(`[Debug] Pitchy結果: pitch=${(T==null?void 0:T.toFixed(1))||"null"}, clarity=${(w==null?void 0:w.toFixed(3))||"null"}, volume=${(J=this.currentVolume)==null?void 0:J.toFixed(1)}%, sampleRate=${M.toString()}`),console.log(`[Debug] Pitchyバッファー: 最初5要素=${Array.from(i.slice(0,5)).map(F=>F.toFixed(6)).join(", ")}`));const ee=T>=65&&T<=1200;if(typeof process<"u"&&((Y=process.env)==null?void 0:Y.NODE_ENV)==="development"&&console.log(`[Debug] 判定条件: pitch=${!!T}, clarity=${w==null?void 0:w.toFixed(3)}>${this.config.clarityThreshold}, volume=${(K=this.currentVolume)==null?void 0:K.toFixed(1)}>${this.config.minVolumeAbsolute}, range=${ee}`),T&&w>this.config.clarityThreshold&&this.currentVolume>this.config.minVolumeAbsolute&&ee){let F=T;if(!this.disableHarmonicCorrection){const ie=Math.min(this.currentVolume/100,1);F=this.correctHarmonic(T,ie)}this.currentFrequency=F;const P=this.frequencyToNoteAndOctave(this.currentFrequency);this.detectedNote=P.note,this.detectedOctave=P.octave,this.pitchClarity=w}else this.currentFrequency===0&&this.resetHarmonicHistory(),this.currentFrequency=0,this.detectedNote="--",this.detectedOctave=null,this.pitchClarity=0}const p=b?0:this.stableVolume;this.processSilenceDetection(this.currentVolume);const A={frequency:this.currentFrequency,note:this.detectedNote,octave:this.detectedOctave||void 0,clarity:this.pitchClarity,volume:p,cents:this.currentFrequency>0?this.frequencyToCents(this.currentFrequency):void 0};this.processAudioData(A),this.updateVisuals(A);const O=performance.now()-t;this.frameRateLimiter.getStats().frameDrops===0&&this.frameRateLimiter.recoverPerformance(),typeof process<"u"&&((Z=process.env)==null?void 0:Z.NODE_ENV)==="development"&&O>16.67&&console.warn(`[PitchDetector] Frame processing took ${O.toFixed(2)}ms (>16.67ms threshold)`),this.animationFrame=requestAnimationFrame(()=>this.detectPitch())}correctHarmonic(e,t){var m,d;if(!this.harmonicConfig.enabled)return this.previousFrequency=e,e;const s=performance.now();if(this.harmonicHistory=this.harmonicHistory.filter(u=>s-u.timestamp<this.harmonicConfig.historyWindow),this.harmonicHistory.push({frequency:e,confidence:t,timestamp:s}),this.harmonicHistory.length<8)return this.previousFrequency=e,e;const i=this.harmonicHistory.reduce((u,f)=>u+f.frequency,0)/this.harmonicHistory.length,n=e*2,o=e/2,r=Math.abs(e-i),a=Math.abs(n-i),c=Math.abs(o-i);let h=e;return c<r&&c<a?(h=o,typeof process<"u"&&((m=process.env)==null?void 0:m.NODE_ENV)==="development"&&console.log(`🔧 [PitchDetector] Octave correction DOWN: ${e.toFixed(1)}Hz → ${h.toFixed(1)}Hz (avg: ${i.toFixed(1)}Hz)`)):a<r&&a<c&&(h=n,typeof process<"u"&&((d=process.env)==null?void 0:d.NODE_ENV)==="development"&&console.log(`🔧 [PitchDetector] Octave correction UP: ${e.toFixed(1)}Hz → ${h.toFixed(1)}Hz (avg: ${i.toFixed(1)}Hz)`)),this.previousFrequency=h,h}resetHarmonicHistory(){this.harmonicHistory=[],this.previousFrequency=0}frequencyToNoteAndOctave(e){const t=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];if(e<=0)return{note:"--",octave:null};const i=Math.round(12*Math.log2(e/440)),n=(i+9+120)%12,o=Math.floor((i+9)/12)+4;return{note:t[n],octave:o}}frequencyToCents(e){const s=12*Math.log2(e/440),i=Math.round(s),n=(s-i)*100;return Math.round(n)}processSilenceDetection(e){if(!this.silenceDetectionConfig.enabled)return;const t=Date.now(),s=this.silenceDetectionConfig.minVolumeThreshold||.01;if(e<s)this.isSilent||(this.isSilent=!0,this.silenceStartTime=t,this.hasWarned=!1,console.log("🔇 [PitchDetector] Silence detected, starting timer"),this.silenceDetectionConfig.warningThreshold&&(this.silenceWarningTimer=window.setTimeout(()=>{this.handleSilenceWarning()},this.silenceDetectionConfig.warningThreshold)),this.silenceDetectionConfig.timeoutThreshold&&(this.silenceTimeoutTimer=window.setTimeout(()=>{this.handleSilenceTimeout()},this.silenceDetectionConfig.timeoutThreshold)));else if(this.isSilent){const n=this.silenceStartTime?t-this.silenceStartTime:0;console.log(`🔊 [PitchDetector] Voice recovered after ${n}ms of silence`),this.resetSilenceTracking(),this.silenceDetectionConfig.onSilenceRecovered&&this.silenceDetectionConfig.onSilenceRecovered()}}handleSilenceWarning(){if(!this.hasWarned&&this.silenceStartTime){const e=Date.now()-this.silenceStartTime;this.hasWarned=!0,console.log(`⚠️ [PitchDetector] Silence warning: ${e}ms`),this.silenceDetectionConfig.onSilenceWarning&&this.silenceDetectionConfig.onSilenceWarning(e)}}handleSilenceTimeout(){console.log("⏰ [PitchDetector] Silence timeout reached"),this.silenceDetectionConfig.onSilenceTimeout&&this.silenceDetectionConfig.onSilenceTimeout(),this.stopDetection(),this.resetSilenceTracking()}resetSilenceTracking(){this.isSilent=!1,this.silenceStartTime=null,this.hasWarned=!1,this.silenceWarningTimer&&(clearTimeout(this.silenceWarningTimer),this.silenceWarningTimer=null),this.silenceTimeoutTimer&&(clearTimeout(this.silenceTimeoutTimer),this.silenceTimeoutTimer=null)}resetDisplayState(){this.currentVolume=0,this.rawVolume=0,this.currentFrequency=0,this.detectedNote="--",this.detectedOctave=null,this.pitchClarity=0,this.stableVolume=0,this.initializeVolumeHistory(),this.resetHarmonicHistory(),this.resetSilenceTracking(),console.log("🔄 [PitchDetector] Display state reset")}setHarmonicCorrectionEnabled(e){this.disableHarmonicCorrection=!e,e||this.resetHarmonicHistory()}setSilenceDetectionConfig(e){this.silenceDetectionConfig={...this.silenceDetectionConfig,...e},this.silenceDetectionConfig.enabled||this.resetSilenceTracking(),console.log("🔇 [PitchDetector] Silence detection config updated:",this.silenceDetectionConfig)}getSilenceStatus(){const e=this.silenceStartTime&&this.isSilent?Date.now()-this.silenceStartTime:null;return{isEnabled:this.silenceDetectionConfig.enabled||!1,isSilent:this.isSilent,silenceDuration:e,hasWarned:this.hasWarned}}getIsInitialized(){return this.isInitialized&&this.componentState==="ready"}getState(){return{componentState:this.componentState,isInitialized:this.isInitialized,isDetecting:this.isDetecting,lastError:this.lastError,hasRequiredComponents:!!(this.analyser&&this.pitchDetector)}}getCurrentResult(){return{frequency:this.currentFrequency,note:this.detectedNote,clarity:this.pitchClarity,volume:this.currentFrequency>0?this.rawVolume:0}}processAudioData(e){var t,s;(s=(t=this.callbacks).onPitchUpdate)==null||s.call(t,e)}updateVisuals(e){}getPerformanceStats(){return this.frameRateLimiter.getStats()}async reinitialize(){console.log("🔄 [PitchDetector] Starting reinitialization"),this.cleanup(),await new Promise(e=>setTimeout(e,100)),await this.initialize(),console.log("✅ [PitchDetector] Reinitialization complete")}cleanup(){console.log("🧹 [PitchDetector] Starting cleanup"),this.stopDetection(),this.analyserIds.length>0&&(this.audioManager.release(this.analyserIds),console.log("📤 [PitchDetector] Notified AudioManager of Analyser release:",this.analyserIds),this.analyserIds=[]),this.componentState="uninitialized",this.isInitialized=!1,this.lastError=null,this.analyser=null,this.rawAnalyser=null,this.pitchDetector=null,this.initializeVolumeHistory(),this.resetHarmonicHistory(),console.log("✅ [PitchDetector] Cleanup complete")}getLatestResult(){return!this.isDetecting||this.componentState!=="detecting"?null:{frequency:this.currentFrequency,note:this.detectedNote,octave:this.detectedOctave??0,volume:this.currentVolume,rawVolume:this.rawVolume,clarity:this.pitchClarity,timestamp:Date.now()}}destroy(){this.stopDetection(),this.analyserIds.length>0&&(this.audioManager.release(this.analyserIds),console.log("📤 [PitchDetector] Notified AudioManager of Analyser release:",this.analyserIds),this.analyserIds=[]),this.componentState="uninitialized",this.isInitialized=!1,this.lastError=null,this.analyser=null}getStatus(){var e;return{componentState:this.componentState,isInitialized:this.isInitialized,isDetecting:this.isDetecting,isRunning:this.isDetecting,currentVolume:this.currentVolume,rawVolume:this.rawVolume,currentFrequency:this.currentFrequency,detectedNote:this.detectedNote,detectedOctave:this.detectedOctave,currentClarity:this.pitchClarity,lastError:this.lastError,frameRateStatus:(e=this.frameRateLimiter)==null?void 0:e.getStats(),deviceSpecs:this.deviceSpecs,hasRequiredComponents:!!(this.analyser&&this.pitchDetector),harmonicConfig:this.harmonicConfig,volumeHistoryConfig:this.volumeHistoryConfig}}initializeVolumeHistory(){const e=this.volumeHistoryConfig.historyLength;this.volumeHistoryConfig.useTypedArray?this.volumeHistory=new Float32Array(e):this.volumeHistory=new Array(e).fill(0)}addToVolumeHistory(e){this.volumeHistory instanceof Float32Array?(this.volumeHistory.copyWithin(0,1),this.volumeHistory[this.volumeHistory.length-1]=e):(this.volumeHistory.push(e),this.volumeHistory.length>this.volumeHistoryConfig.historyLength&&this.volumeHistory.shift())}calculateVolumeAverage(){if(this.volumeHistory instanceof Float32Array){let e=0;for(let t=0;t<this.volumeHistory.length;t++)e+=this.volumeHistory[t];return e/this.volumeHistory.length}else return this.volumeHistory.reduce((e,t)=>e+t,0)/this.volumeHistory.length}updateHarmonicConfig(e){var t;this.harmonicConfig={...this.harmonicConfig,...e},this.resetHarmonicHistory(),typeof process<"u"&&((t=process.env)==null?void 0:t.NODE_ENV)==="development"&&console.log("🔧 [PitchDetector] Harmonic correction config updated:",this.harmonicConfig)}updateVolumeHistoryConfig(e){var t;this.volumeHistoryConfig={...this.volumeHistoryConfig,...e},this.initializeVolumeHistory(),typeof process<"u"&&((t=process.env)==null?void 0:t.NODE_ENV)==="development"&&console.log("📊 [PitchDetector] Volume history config updated:",this.volumeHistoryConfig)}}class it{constructor(e,t={}){this.highpassFilter=null,this.lowpassFilter=null,this.notchFilter=null,this.isConnected=!1,this.inputNode=null,this.outputNode=null,this.audioContext=e,this.config={highpassFreq:80,lowpassFreq:800,notchFreq:60,highpassQ:.7,lowpassQ:.7,notchQ:10,useFilters:!0,...t},this.createFilterChain()}createFilterChain(){if(!this.config.useFilters){console.log("🔇 [NoiseFilter] Filters disabled - bypassing filter chain");return}try{this.highpassFilter=this.audioContext.createBiquadFilter(),this.highpassFilter.type="highpass",this.highpassFilter.frequency.setValueAtTime(this.config.highpassFreq,this.audioContext.currentTime),this.highpassFilter.Q.setValueAtTime(this.config.highpassQ,this.audioContext.currentTime),this.lowpassFilter=this.audioContext.createBiquadFilter(),this.lowpassFilter.type="lowpass",this.lowpassFilter.frequency.setValueAtTime(this.config.lowpassFreq,this.audioContext.currentTime),this.lowpassFilter.Q.setValueAtTime(this.config.lowpassQ,this.audioContext.currentTime),this.notchFilter=this.audioContext.createBiquadFilter(),this.notchFilter.type="notch",this.notchFilter.frequency.setValueAtTime(this.config.notchFreq,this.audioContext.currentTime),this.notchFilter.Q.setValueAtTime(this.config.notchQ,this.audioContext.currentTime),console.log("✅ [NoiseFilter] 3-stage filter chain created",{highpass:`${this.config.highpassFreq}Hz (Q=${this.config.highpassQ})`,lowpass:`${this.config.lowpassFreq}Hz (Q=${this.config.lowpassQ})`,notch:`${this.config.notchFreq}Hz (Q=${this.config.notchQ})`})}catch(e){const t=new W("ノイズフィルターチェーンの初期化に失敗しました。オーディオシステムのサポート状況を確認してください。",{operation:"createFilterChain",originalError:e.message,filterConfig:this.config,audioContextState:this.audioContext.state,sampleRate:this.audioContext.sampleRate});throw x.logError(t,"NoiseFilter initialization"),console.error("❌ [NoiseFilter] Failed to create filter chain:",t.toJSON()),t}}connect(e,t){if(!this.config.useFilters)return t&&e.connect(t),e;if(!this.highpassFilter||!this.lowpassFilter||!this.notchFilter){const s=new D("ノイズフィルターが正しく初期化されていません。コンストラクタでuseFilters: trueで初期化してください。",G.AUDIO_CONTEXT_ERROR,{operation:"connect",useFilters:this.config.useFilters,hasHighpassFilter:!!this.highpassFilter,hasLowpassFilter:!!this.lowpassFilter,hasNotchFilter:!!this.notchFilter});throw x.logError(s,"NoiseFilter connection"),s}try{return this.disconnect(),this.inputNode=e,this.outputNode=t||null,e.connect(this.highpassFilter),this.highpassFilter.connect(this.lowpassFilter),this.lowpassFilter.connect(this.notchFilter),t&&this.notchFilter.connect(t),this.isConnected=!0,console.log("🔗 [NoiseFilter] Filter chain connected"),this.notchFilter}catch(s){const i=new W("ノイズフィルターの接続に失敗しました。オーディオノードの接続状態を確認してください。",{operation:"connect",originalError:s.message,hasInputNode:!!this.inputNode,hasOutputNode:!!this.outputNode,isConnected:this.isConnected,filterConfig:this.config});throw x.logError(i,"NoiseFilter audio connection"),console.error("❌ [NoiseFilter] Connection failed:",i.toJSON()),i}}disconnect(){try{this.highpassFilter&&this.highpassFilter.disconnect(),this.lowpassFilter&&this.lowpassFilter.disconnect(),this.notchFilter&&this.notchFilter.disconnect(),this.isConnected=!1,this.inputNode=null,this.outputNode=null,console.log("🔌 [NoiseFilter] Filter chain disconnected")}catch(e){console.warn("⚠️ [NoiseFilter] Disconnect warning:",e)}}updateFrequencies(e){const t=this.audioContext.currentTime;try{e.highpassFreq!==void 0&&this.highpassFilter&&(this.highpassFilter.frequency.setValueAtTime(e.highpassFreq,t),this.config.highpassFreq=e.highpassFreq),e.lowpassFreq!==void 0&&this.lowpassFilter&&(this.lowpassFilter.frequency.setValueAtTime(e.lowpassFreq,t),this.config.lowpassFreq=e.lowpassFreq),e.notchFreq!==void 0&&this.notchFilter&&(this.notchFilter.frequency.setValueAtTime(e.notchFreq,t),this.config.notchFreq=e.notchFreq),e.highpassQ!==void 0&&this.highpassFilter&&(this.highpassFilter.Q.setValueAtTime(e.highpassQ,t),this.config.highpassQ=e.highpassQ),e.lowpassQ!==void 0&&this.lowpassFilter&&(this.lowpassFilter.Q.setValueAtTime(e.lowpassQ,t),this.config.lowpassQ=e.lowpassQ),e.notchQ!==void 0&&this.notchFilter&&(this.notchFilter.Q.setValueAtTime(e.notchQ,t),this.config.notchQ=e.notchQ),console.log("🔧 [NoiseFilter] Filter parameters updated:",e)}catch(s){const i=new D("フィルターパラメータの更新に失敗しました。指定した値が範囲外であるか、フィルターが無効になっている可能性があります。",G.INVALID_SAMPLE_RATE,{operation:"updateFrequencies",originalError:s.message,requestedParams:e,currentConfig:this.config,audioContextTime:this.audioContext.currentTime});throw x.logError(i,"NoiseFilter parameter update"),console.error("❌ [NoiseFilter] Parameter update failed:",i.toJSON()),i}}setEnabled(e){if(e!==this.config.useFilters){if(this.config.useFilters=e,this.isConnected&&this.inputNode){const t=this.outputNode;this.disconnect(),e&&(this.highpassFilter||this.createFilterChain()),this.connect(this.inputNode,t||void 0)}console.log(`🔘 [NoiseFilter] Filters ${e?"enabled":"disabled"}`)}}getFilterResponse(e){if(!this.config.useFilters||!this.highpassFilter||!this.lowpassFilter||!this.notchFilter)return{magnitude:1,phase:0};try{const t=new Float32Array([e]),s=new Float32Array(1),i=new Float32Array(1);this.highpassFilter.getFrequencyResponse(t,s,i);const n=s[0];this.lowpassFilter.getFrequencyResponse(t,s,i);const o=s[0];this.notchFilter.getFrequencyResponse(t,s,i);const r=s[0];return{magnitude:n*o*r,phase:i[0]}}catch(t){const s=new D("フィルター応答の計算に失敗しました。デフォルト値を返します。",G.PROCESSING_TIMEOUT,{operation:"getFilterResponse",frequency:e,originalError:t.message,useFilters:this.config.useFilters});return x.logError(s,"Filter response calculation"),console.warn("⚠️ [NoiseFilter] Filter response calculation failed:",s.toJSON()),{magnitude:1,phase:0}}}getConfig(){return{...this.config}}getStatus(){return{isConnected:this.isConnected,useFilters:this.config.useFilters,hasFilters:!!(this.highpassFilter&&this.lowpassFilter&&this.notchFilter),filterTypes:this.config.useFilters?["highpass","lowpass","notch"]:[],frequencies:{highpass:this.config.highpassFreq,lowpass:this.config.lowpassFreq,notch:this.config.notchFreq},qFactors:{highpass:this.config.highpassQ,lowpass:this.config.lowpassQ,notch:this.config.notchQ}}}getOutputNode(){return!this.config.useFilters||!this.notchFilter?this.inputNode||null:this.notchFilter}destroy(){console.log("🗑️ [NoiseFilter] Destroying filter chain"),this.disconnect(),this.highpassFilter=null,this.lowpassFilter=null,this.notchFilter=null,console.log("✅ [NoiseFilter] Cleanup complete")}static getPresetConfig(e){switch(e){case"voice":return{highpassFreq:80,lowpassFreq:800,notchFreq:60,highpassQ:.7,lowpassQ:.7,notchQ:10,useFilters:!0};case"instrument":return{highpassFreq:40,lowpassFreq:2e3,notchFreq:60,highpassQ:.5,lowpassQ:.5,notchQ:8,useFilters:!0};case"wide":return{highpassFreq:20,lowpassFreq:5e3,notchFreq:60,highpassQ:.3,lowpassQ:.3,notchQ:5,useFilters:!0};case"minimal":return{highpassFreq:60,lowpassFreq:8e3,notchFreq:60,highpassQ:.1,lowpassQ:.1,notchQ:3,useFilters:!0};default:return{useFilters:!1}}}}var he=(l=>(l[l.DEBUG=0]="DEBUG",l[l.INFO=1]="INFO",l[l.WARN=2]="WARN",l[l.ERROR=3]="ERROR",l[l.SILENT=4]="SILENT",l))(he||{});class re{constructor(e=1,t="",s={}){this.listeners=[],this.level=e,this.prefix=t,this.context=s}setLevel(e){this.level=e}addListener(e){this.listeners.push(e)}removeListener(e){const t=this.listeners.indexOf(e);t!==-1&&this.listeners.splice(t,1)}child(e,t={}){const s=this.prefix?`${this.prefix}:${e}`:e,i={...this.context,...t},n=new re(this.level,s,i);return n.addListener(o=>{this.listeners.forEach(r=>r(o))}),n}debug(e,t){this.log(0,e,t)}info(e,t){this.log(1,e,t)}warn(e,t){this.log(2,e,t)}error(e,t,s){const i=t?{errorName:t.name,errorMessage:t.message,stack:t.stack,...s}:s;this.log(3,e,i)}log(e,t,s){if(e<this.level)return;const i={level:e,message:t,context:{...this.context,...s},timestamp:Date.now(),prefix:this.prefix};this.logToConsole(i),this.listeners.forEach(n=>{try{n(i)}catch(o){console.error("Logger listener error:",o)}})}logToConsole(e){const t=new Date(e.timestamp).toISOString(),s=he[e.level],i=e.prefix?`[${e.prefix}]`:"",n=`${t} ${s} ${i} ${e.message}`,o=this.getConsoleMethod(e.level);e.context&&Object.keys(e.context).length>0?o(n,e.context):o(n)}getConsoleMethod(e){switch(e){case 0:return console.debug;case 1:return console.info;case 2:return console.warn;case 3:return console.error;default:return console.log}}getLevel(){return this.level}isLevelEnabled(e){return e>=this.level}}const ue=new re(1,"PitchPro"),st=(l,e)=>ue.debug(l,e),nt=(l,e)=>ue.info(l,e),ot=(l,e)=>ue.warn(l,e),rt=(l,e,t)=>ue.error(l,e,t);class Re{constructor(e,t={}){if(this.refCount=0,this.isActive=!1,this.lastHealthCheck=null,this.healthCheckInterval=null,this.idleCheckInterval=null,this.visibilityCheckInterval=null,this.lastActivityTime=Date.now(),this.isPageVisible=!0,this.isUserActive=!0,this.autoRecoveryAttempts=0,this.eventListeners=new Map,this.callbacks={},this.audioManager=e,this.config={healthCheckIntervalMs:t.healthCheckIntervalMs??5e3,idleTimeoutMs:t.idleTimeoutMs??3e5,autoRecoveryDelayMs:t.autoRecoveryDelayMs??2e3,maxIdleTimeBeforeRelease:t.maxIdleTimeBeforeRelease??6e5,maxAutoRecoveryAttempts:t.maxAutoRecoveryAttempts??3,logLevel:t.logLevel??he.INFO,enableDetailedLogging:t.enableDetailedLogging??!1},this.logger=new re(this.config.logLevel,"MicrophoneLifecycleManager",{component:"MicrophoneLifecycleManager",enableDetailedLogging:this.config.enableDetailedLogging}),typeof window>"u"){this.logger.info("SSR environment detected - skipping initialization");return}this.logger.debug("Initializing MicrophoneLifecycleManager",{config:this.config}),this.setupEventListeners()}setCallbacks(e){this.callbacks={...this.callbacks,...e}}removeAllTrackedEventListeners(){this.logger.debug("Removing all tracked event listeners",{count:this.eventListeners.size}),this.eventListeners.forEach(({target:e,listener:t,eventName:s},i)=>{try{e.removeEventListener(s,t)}catch(n){this.logger.warn("Failed to remove event listener",{eventName:s,key:i,error:n.message})}}),this.eventListeners.clear(),this.logger.debug("All event listeners removed")}async acquire(){var e,t,s,i;this.refCount++,console.log(`🎤 [MicrophoneLifecycleManager] Acquiring resources (refCount: ${this.refCount})`);try{if(!this.isActive){const o=await this.audioManager.initialize();return this.isActive=!0,this.lastActivityTime=Date.now(),this.autoRecoveryAttempts=0,this.startHealthMonitoring(),this.startIdleMonitoring(),this.startVisibilityMonitoring(),(t=(e=this.callbacks).onStateChange)==null||t.call(e,"active"),console.log("🟢 [MicrophoneLifecycleManager] Microphone activated"),o}return this.updateActivity(),await this.audioManager.initialize()}catch(n){throw console.error("❌ [MicrophoneLifecycleManager] Failed to acquire resources:",n),this.refCount=Math.max(0,this.refCount-1),(i=(s=this.callbacks).onError)==null||i.call(s,n),n}}release(){var e,t;this.refCount=Math.max(0,this.refCount-1),console.log(`📉 [MicrophoneLifecycleManager] Releasing resources (refCount: ${this.refCount})`),this.refCount<=0&&(this.stopAllMonitoring(),this.audioManager.release(),this.isActive=!1,(t=(e=this.callbacks).onStateChange)==null||t.call(e,"inactive"),console.log("🔴 [MicrophoneLifecycleManager] Microphone deactivated"))}forceRelease(){var e,t;console.log("🚨 [MicrophoneLifecycleManager] Force release - cleaning up all resources"),this.refCount=0,this.stopAllMonitoring(),this.audioManager.forceCleanup(),this.isActive=!1,(t=(e=this.callbacks).onStateChange)==null||t.call(e,"inactive")}setupEventListeners(){const e=()=>{this.isPageVisible=!document.hidden,this.handleVisibilityChange()},t=()=>{this.updateActivity()},s=()=>{this.forceRelease()},i=()=>{this.isPageVisible=!0,this.handleVisibilityChange()},n=()=>{this.isPageVisible=!1,this.handleVisibilityChange()};document.addEventListener("visibilitychange",e),document.addEventListener("mousemove",t),document.addEventListener("keydown",t),document.addEventListener("click",t),document.addEventListener("scroll",t),document.addEventListener("touchstart",t),window.addEventListener("beforeunload",s),window.addEventListener("unload",s),window.addEventListener("focus",i),window.addEventListener("blur",n),this.eventListeners.set("visibilitychange",{target:document,listener:e,eventName:"visibilitychange"}),this.eventListeners.set("mousemove",{target:document,listener:t,eventName:"mousemove"}),this.eventListeners.set("keydown",{target:document,listener:t,eventName:"keydown"}),this.eventListeners.set("click",{target:document,listener:t,eventName:"click"}),this.eventListeners.set("scroll",{target:document,listener:t,eventName:"scroll"}),this.eventListeners.set("touchstart",{target:document,listener:t,eventName:"touchstart"}),this.eventListeners.set("beforeunload",{target:window,listener:s,eventName:"beforeunload"}),this.eventListeners.set("unload",{target:window,listener:s,eventName:"unload"}),this.eventListeners.set("focus",{target:window,listener:i,eventName:"focus"}),this.eventListeners.set("blur",{target:window,listener:n,eventName:"blur"}),console.log("👂 [MicrophoneLifecycleManager] Event listeners setup complete")}handleVisibilityChange(){this.isActive&&(this.isPageVisible?(console.log("👁️ [MicrophoneLifecycleManager] Page became visible - resuming monitoring"),this.updateActivity(),setTimeout(()=>{this.performHealthCheck()},1e3)):(console.log("🙈 [MicrophoneLifecycleManager] Page became hidden - reducing monitoring frequency"),setTimeout(()=>{!this.isPageVisible&&this.isActive&&Date.now()-this.lastActivityTime>this.config.maxIdleTimeBeforeRelease&&(console.log("⏰ [MicrophoneLifecycleManager] Long inactivity detected - releasing resources"),this.forceRelease())},this.config.maxIdleTimeBeforeRelease)))}updateActivity(){this.lastActivityTime=Date.now(),this.isUserActive=!0}startHealthMonitoring(){this.healthCheckInterval&&clearInterval(this.healthCheckInterval),this.healthCheckInterval=window.setInterval(()=>{this.performHealthCheck()},this.config.healthCheckIntervalMs),console.log(`💓 [MicrophoneLifecycleManager] Health monitoring started (${this.config.healthCheckIntervalMs}ms interval)`)}startIdleMonitoring(){this.idleCheckInterval&&clearInterval(this.idleCheckInterval),this.idleCheckInterval=window.setInterval(()=>{this.checkIdleTimeout()},3e4),console.log("😴 [MicrophoneLifecycleManager] Idle monitoring started")}startVisibilityMonitoring(){this.visibilityCheckInterval&&clearInterval(this.visibilityCheckInterval),this.visibilityCheckInterval=window.setInterval(()=>{this.isPageVisible&&this.isActive&&this.performHealthCheck()},1e4),console.log("👁️ [MicrophoneLifecycleManager] Visibility monitoring started")}async performHealthCheck(){var e,t,s,i;if(this.isActive)try{const n=this.audioManager.checkMediaStreamHealth();if(this.lastHealthCheck=n,n.healthy)this.autoRecoveryAttempts>0&&(this.logger.info("Microphone health restored, resetting recovery attempts",{previousAttempts:this.autoRecoveryAttempts,healthStatus:n}),this.autoRecoveryAttempts=0);else if(this.logger.warn("Unhealthy microphone state detected",{healthStatus:n}),this.autoRecoveryAttempts<this.config.maxAutoRecoveryAttempts)this.autoRecoveryAttempts++,this.logger.warn("Attempting automatic recovery",{attempt:this.autoRecoveryAttempts,maxAttempts:this.config.maxAutoRecoveryAttempts,healthStatus:n}),setTimeout(async()=>{var o,r;try{await this.audioManager.initialize(),this.logger.info("Automatic recovery successful",{attempt:this.autoRecoveryAttempts,totalAttempts:this.autoRecoveryAttempts}),this.autoRecoveryAttempts=0,this.dispatchCustomEvent("pitchpro:lifecycle:autoRecoverySuccess",{})}catch(a){this.logger.error("Automatic recovery failed",a,{attempt:this.autoRecoveryAttempts,maxAttempts:this.config.maxAutoRecoveryAttempts}),(r=(o=this.callbacks).onError)==null||r.call(o,a),this.dispatchCustomEvent("pitchpro:lifecycle:autoRecoveryFailed",{error:a})}},this.config.autoRecoveryDelayMs);else{const o=new xe(`Microphone health check failed after ${this.autoRecoveryAttempts} recovery attempts. Monitoring stopped to prevent infinite error loop.`,n,this.autoRecoveryAttempts,{operation:"performHealthCheck",maxAttemptsReached:!0,monitoringStopped:!0});this.logger.error("Maximum recovery attempts reached - stopping health checks",o,{attempts:this.autoRecoveryAttempts,maxAttempts:this.config.maxAutoRecoveryAttempts,healthStatus:n}),this.stopAllMonitoring(),this.isActive=!1,(t=(e=this.callbacks).onError)==null||t.call(e,o),this.dispatchCustomEvent("pitchpro:lifecycle:maxRecoveryAttemptsReached",{attempts:this.autoRecoveryAttempts,lastHealthStatus:n})}}catch(n){this.logger.error("Health check failed",n,{operation:"performHealthCheck",isActive:this.isActive,attempts:this.autoRecoveryAttempts}),(i=(s=this.callbacks).onError)==null||i.call(s,n)}}checkIdleTimeout(){if(!this.isActive)return;const e=Date.now()-this.lastActivityTime;e>this.config.idleTimeoutMs&&this.isUserActive&&(console.log("😴 [MicrophoneLifecycleManager] User idle detected"),this.isUserActive=!1),e>this.config.maxIdleTimeBeforeRelease&&(console.log("⏰ [MicrophoneLifecycleManager] Extreme idle detected - auto-releasing resources"),this.forceRelease())}stopAllMonitoring(){this.healthCheckInterval&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null),this.idleCheckInterval&&(clearInterval(this.idleCheckInterval),this.idleCheckInterval=null),this.visibilityCheckInterval&&(clearInterval(this.visibilityCheckInterval),this.visibilityCheckInterval=null),console.log("⏹️ [MicrophoneLifecycleManager] All monitoring stopped")}dispatchCustomEvent(e,t){if(typeof window>"u")return;const s=new CustomEvent(e,{detail:t});window.dispatchEvent(s)}getStatus(){return{refCount:this.refCount,isActive:this.isActive,isPageVisible:this.isPageVisible,isUserActive:this.isUserActive,lastActivityTime:this.lastActivityTime,timeSinceActivity:Date.now()-this.lastActivityTime,autoRecoveryAttempts:this.autoRecoveryAttempts,lastHealthCheck:this.lastHealthCheck,audioManagerStatus:this.audioManager.getStatus()}}updateConfig(e){this.config={...this.config,...e},this.isActive&&(this.stopAllMonitoring(),this.startHealthMonitoring(),this.startIdleMonitoring(),this.startVisibilityMonitoring()),console.log("🔧 [MicrophoneLifecycleManager] Configuration updated:",e)}resetRecoveryAttempts(){const e=this.autoRecoveryAttempts;this.autoRecoveryAttempts=0,this.logger.info("Recovery attempts reset manually",{previousAttempts:e,refCount:this.refCount,wasActive:this.isActive,hasMonitoring:!!this.healthCheckInterval}),!this.healthCheckInterval&&this.refCount>0&&(this.logger.info("Restarting monitoring after manual reset",{refCount:this.refCount,reason:"Manual recovery reset with active references"}),this.isActive=!0,this.startHealthMonitoring(),this.startIdleMonitoring(),this.startVisibilityMonitoring(),this.dispatchCustomEvent("pitchpro:lifecycle:monitoringRestarted",{reason:"Manual recovery reset",refCount:this.refCount}))}destroy(){this.logger.info("Destroying MicrophoneLifecycleManager",{refCount:this.refCount,isActive:this.isActive,autoRecoveryAttempts:this.autoRecoveryAttempts,listenerCount:this.eventListeners.size}),this.stopAllMonitoring(),this.forceRelease(),this.removeAllTrackedEventListeners(),this.isActive=!1,this.refCount=0,this.autoRecoveryAttempts=0,this.logger.info("MicrophoneLifecycleManager cleanup complete")}}class Pe{constructor(){if(this.container=null,this.notifications=new Map,this.notificationCounter=0,this.defaultDuration=5e3,this.maxNotifications=0,this.cssClasses={container:"pitchpro-notifications",notification:"pitchpro-notification",title:"pitchpro-notification-title",message:"pitchpro-notification-message",details:"pitchpro-notification-details",solution:"pitchpro-notification-solution",closeButton:"pitchpro-notification-close",error:"pitchpro-notification-error",warning:"pitchpro-notification-warning",success:"pitchpro-notification-success",info:"pitchpro-notification-info",high:"pitchpro-notification-priority-high",medium:"pitchpro-notification-priority-medium",low:"pitchpro-notification-priority-low"},typeof window>"u"){console.log("🔇 [ErrorNotificationSystem] SSR environment detected - skipping initialization");return}this.initializeContainer(),this.injectCSS()}initializeContainer(){let e=document.querySelector(`.${this.cssClasses.container}`);e?(this.container=e,console.log("📋 [ErrorNotificationSystem] Using existing notification container")):(this.container=document.createElement("div"),this.container.className=this.cssClasses.container,this.container.setAttribute("role","alert"),this.container.setAttribute("aria-live","polite"),document.body.appendChild(this.container),console.log("📋 [ErrorNotificationSystem] Notification container created"))}injectCSS(){if(document.querySelector("#pitchpro-notifications-styles"))return;const e=`
      .${this.cssClasses.container} {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 10000;
        max-width: 400px;
        pointer-events: none;
      }

      .${this.cssClasses.notification} {
        background: white;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        margin-bottom: 12px;
        padding: 16px;
        pointer-events: auto;
        position: relative;
        animation: slideIn 0.3s ease-out;
        transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
      }

      .${this.cssClasses.notification}.removing {
        opacity: 0;
        transform: translateX(100%);
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateX(100%);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      .${this.cssClasses.notification}.${this.cssClasses.error} {
        border-left: 4px solid #ef4444;
      }

      .${this.cssClasses.notification}.${this.cssClasses.warning} {
        border-left: 4px solid #f59e0b;
      }

      .${this.cssClasses.notification}.${this.cssClasses.success} {
        border-left: 4px solid #10b981;
      }

      .${this.cssClasses.notification}.${this.cssClasses.info} {
        border-left: 4px solid #3b82f6;
      }

      .${this.cssClasses.title} {
        font-weight: 600;
        font-size: 14px;
        color: #1f2937;
        margin-bottom: 4px;
        padding-right: 24px;
      }

      .${this.cssClasses.message} {
        font-size: 13px;
        color: #4b5563;
        margin-bottom: 8px;
        line-height: 1.4;
      }

      .${this.cssClasses.details} {
        font-size: 12px;
        color: #6b7280;
        margin-bottom: 8px;
        padding-left: 12px;
        border-left: 2px solid #e5e7eb;
      }

      .${this.cssClasses.details} li {
        margin-bottom: 2px;
      }

      .${this.cssClasses.solution} {
        font-size: 12px;
        color: #059669;
        background: #ecfdf5;
        border: 1px solid #a7f3d0;
        border-radius: 4px;
        padding: 8px;
        margin-top: 8px;
      }

      .${this.cssClasses.closeButton} {
        position: absolute;
        top: 12px;
        right: 12px;
        background: none;
        border: none;
        font-size: 18px;
        color: #9ca3af;
        cursor: pointer;
        padding: 0;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .${this.cssClasses.closeButton}:hover {
        color: #6b7280;
      }

      .${this.cssClasses.notification}.${this.cssClasses.high} {
        border-width: 2px;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      }

      @media (max-width: 640px) {
        .${this.cssClasses.container} {
          top: 10px;
          left: 10px;
          right: 10px;
          max-width: none;
        }
      }
    `,t=document.createElement("style");t.id="pitchpro-notifications-styles",t.textContent=e,document.head.appendChild(t)}show(e){if(!this.container)return console.warn("⚠️ [ErrorNotificationSystem] Container not available - cannot show notification"),"";const t=`notification-${++this.notificationCounter}`,s=this.createNotificationElement(t,e);if(this.notifications.size>=this.maxNotifications){const i=Array.from(this.notifications.keys())[0];this.remove(i)}if(this.container.appendChild(s),this.notifications.set(t,s),e.autoHide!==!1){const i=e.duration||this.defaultDuration;setTimeout(()=>{this.remove(t)},i)}return console.log(`📢 [ErrorNotificationSystem] Notification shown: ${e.type} - ${e.title}`),t}createNotificationElement(e,t){const s=document.createElement("div");s.className=[this.cssClasses.notification,this.cssClasses[t.type],t.priority?this.cssClasses[t.priority]:""].filter(Boolean).join(" "),s["data-notification-id"]=e;const i=document.createElement("div");i.className=this.cssClasses.title,i.textContent=t.title,s.appendChild(i);const n=document.createElement("div");if(n.className=this.cssClasses.message,n.textContent=t.message,s.appendChild(n),t.details&&t.details.length>0){const r=document.createElement("div");r.className=this.cssClasses.details;const a=document.createElement("ul");a.style.margin="0",a.style.paddingLeft="16px",t.details.forEach(c=>{const h=document.createElement("li");h.textContent=c,a.appendChild(h)}),r.appendChild(a),s.appendChild(r)}if(t.solution){const r=document.createElement("div");r.className=this.cssClasses.solution,r.textContent=t.solution,s.appendChild(r)}const o=document.createElement("button");return o.className=this.cssClasses.closeButton,o.innerHTML="×",o.setAttribute("aria-label","Close notification"),o.addEventListener("click",()=>{this.remove(e)}),s.appendChild(o),s}remove(e){const t=this.notifications.get(e);t&&(t.classList.add("removing"),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t),this.notifications.delete(e)},300),console.log(`🗑️ [ErrorNotificationSystem] Notification removed: ${e}`))}clearAll(){Array.from(this.notifications.keys()).forEach(t=>this.remove(t)),console.log("🧹 [ErrorNotificationSystem] All notifications cleared")}showError(e,t,s={}){return this.show({type:"error",title:e,message:t,priority:"high",autoHide:!1,...s})}showWarning(e,t,s={}){return this.show({type:"warning",title:e,message:t,priority:"medium",duration:8e3,...s})}showSuccess(e,t,s={}){return this.show({type:"success",title:e,message:t,priority:"low",duration:3e3,...s})}showInfo(e,t,s={}){return this.show({type:"info",title:e,message:t,priority:"low",...s})}showMicrophoneError(e,t){return this.showError("マイクロフォンエラー",`マイクの初期化に失敗しました: ${e.message}`,{details:t?[`発生箇所: ${t}`,`エラー詳細: ${e.name}`]:[`エラー詳細: ${e.name}`],solution:"マイクの設定を確認し、ブラウザにマイクアクセスを許可してください。",priority:"high"})}showAudioContextError(e){return this.showError("オーディオシステムエラー",`音声処理システムの初期化に失敗しました: ${e.message}`,{details:["ブラウザがWeb Audio APIに対応していない可能性があります","または、音声デバイスに問題が発生しています"],solution:"ブラウザを最新版に更新するか、別のブラウザで試してください。",priority:"high"})}showLoadingError(e,t){return this.showError("読み込みエラー",`${e}の読み込みに失敗しました: ${t.message}`,{details:["ネットワーク接続を確認してください","ブラウザのキャッシュをクリアしてみてください"],solution:"ページを再読み込みするか、しばらく待ってから再度お試しください。",priority:"medium"})}getNotificationCount(){return this.notifications.size}getNotificationIds(){return Array.from(this.notifications.keys())}hasNotification(e){return this.notifications.has(e)}updateConfig(e){e.defaultDuration!==void 0&&(this.defaultDuration=e.defaultDuration),e.maxNotifications!==void 0&&(this.maxNotifications=e.maxNotifications),console.log("🔧 [ErrorNotificationSystem] Configuration updated:",e)}destroy(){console.log("🗑️ [ErrorNotificationSystem] Destroying notification system"),this.clearAll(),this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container);const e=document.querySelector("#pitchpro-notifications-styles");e&&e.parentNode&&e.parentNode.removeChild(e),this.container=null,this.notifications.clear(),console.log("✅ [ErrorNotificationSystem] Cleanup complete")}}class _e{constructor(e={}){var t,s,i,n,o,r,a,c,h,m,d;this.currentState="uninitialized",this.isPermissionGranted=!1,this.lastError=null,this.eventCallbacks={},this.deviceSpecs=null,this.config={audioManager:{sampleRate:((t=e.audioManager)==null?void 0:t.sampleRate)??44100,echoCancellation:((s=e.audioManager)==null?void 0:s.echoCancellation)??!1,noiseSuppression:((i=e.audioManager)==null?void 0:i.noiseSuppression)??!1,autoGainControl:((n=e.audioManager)==null?void 0:n.autoGainControl)??!1},lifecycle:e.lifecycle??{},audioConstraints:{echoCancellation:((o=e.audioConstraints)==null?void 0:o.echoCancellation)??!1,noiseSuppression:((r=e.audioConstraints)==null?void 0:r.noiseSuppression)??!1,autoGainControl:((a=e.audioConstraints)==null?void 0:a.autoGainControl)??!1},notifications:{enabled:((c=e.notifications)==null?void 0:c.enabled)??!0,position:((h=e.notifications)==null?void 0:h.position)??"top-right"},logging:{level:((m=e.logging)==null?void 0:m.level)??he.INFO,prefix:((d=e.logging)==null?void 0:d.prefix)??"MicrophoneController"}},this.logger=new re(this.config.logging.level,this.config.logging.prefix,{component:"MicrophoneController"}),this.logger.debug("Initializing MicrophoneController",{config:this.config}),this.audioManager=new we(this.config.audioManager),this.lifecycleManager=new Re(this.audioManager,this.config.lifecycle),this.errorSystem=this.config.notifications.enabled?new Pe:null,this.setupEventHandlers(),this.detectDevice()}setCallbacks(e){this.eventCallbacks={...this.eventCallbacks,...e}}resetRecoveryAttempts(){this.logger.info("Resetting recovery attempts via public API");try{this.lifecycleManager.resetRecoveryAttempts(),this.logger.info("Recovery attempts reset successfully")}catch(e){throw this.logger.error("Failed to reset recovery attempts",e),e}}isActive(){return this.currentState==="active"}isReady(){return this.currentState==="ready"||this.currentState==="active"}isInitialized(){return this.currentState!=="uninitialized"}setupEventHandlers(){this.lifecycleManager.setCallbacks({onStateChange:e=>{this.updateState(e==="active"?"active":"ready")},onError:e=>{this.handleError(e,"lifecycle")}})}detectDevice(){var e,t;this.deviceSpecs=this.audioManager.getPlatformSpecs(),console.log("📱 [MicrophoneController] Device detected:",this.deviceSpecs),(t=(e=this.eventCallbacks).onDeviceChange)==null||t.call(e,this.deviceSpecs),this.dispatchCustomEvent("pitchpro:deviceDetected",{specs:this.deviceSpecs})}async initialize(){var e,t,s,i;try{this.updateState("initializing"),console.log("🎤 [MicrophoneController] Starting initialization");const n=await this.lifecycleManager.acquire();return this.isPermissionGranted=!0,this.updateState("ready"),this.lastError=null,(t=(e=this.eventCallbacks).onPermissionChange)==null||t.call(e,!0),this.dispatchCustomEvent("pitchpro:microphoneGranted",{stream:n.mediaStream}),console.log("✅ [MicrophoneController] Initialization complete"),n}catch(n){throw this.logger.error("Initialization failed",n,{operation:"initialize",currentState:this.currentState}),this.isPermissionGranted=!1,this.handleError(n,"initialization"),(i=(s=this.eventCallbacks).onPermissionChange)==null||i.call(s,!1),this.dispatchCustomEvent("pitchpro:microphoneDenied",{error:n}),n}}async requestPermission(){try{return await this.initialize(),!0}catch{return!1}}async checkPermissionStatus(){if(typeof navigator>"u"||!navigator.mediaDevices)return"denied";try{return(await navigator.permissions.query({name:"microphone"})).state}catch{try{return(await navigator.mediaDevices.getUserMedia({audio:this.config.audioConstraints})).getTracks().forEach(t=>t.stop()),"granted"}catch{return"denied"}}}stop(){console.log("🛑 [MicrophoneController] Stopping microphone"),this.lifecycleManager.release(),this.updateState("ready"),this.dispatchCustomEvent("pitchpro:microphoneStopped",{}),console.log("✅ [MicrophoneController] Microphone stopped")}forceStop(){console.log("🚨 [MicrophoneController] Force stopping microphone"),this.lifecycleManager.forceRelease(),this.updateState("uninitialized"),this.isPermissionGranted=!1,console.log("✅ [MicrophoneController] Force stop complete")}setSensitivity(e){var i,n;const t=this.audioManager.getSensitivity();this.audioManager.setSensitivity(e);const s=this.audioManager.getSensitivity();t!==s&&(console.log(`🔧 [MicrophoneController] Sensitivity changed: ${t}x → ${s}x`),(n=(i=this.eventCallbacks).onSensitivityChange)==null||n.call(i,s),this.dispatchCustomEvent("pitchpro:sensitivityChanged",{sensitivity:s}))}getSensitivity(){return this.audioManager.getSensitivity()}getDeviceSpecs(){return this.deviceSpecs}getState(){return this.currentState}hasPermission(){return this.isPermissionGranted}getStatus(){return{state:this.currentState,isPermissionGranted:this.isPermissionGranted,isActive:this.isActive(),isReady:this.isReady(),sensitivity:this.getSensitivity(),deviceSpecs:this.deviceSpecs,lastError:this.lastError,audioManagerStatus:this.audioManager.getStatus(),lifecycleStatus:this.lifecycleManager.getStatus()}}checkHealth(){return this.audioManager.checkMediaStreamHealth()}async testMicrophone(e=2e3){const t=Date.now();try{!this.isReady()&&!this.isActive()&&await this.initialize();const s=this.audioManager.createAnalyser("microphone-test",{fftSize:1024,smoothingTimeConstant:.8});let i=0,n=null;const o=t+e;await new Promise(h=>{const m=()=>{if(Date.now()>=o){h();return}const d=s.fftSize,u=new Float32Array(d);s.getFloatTimeDomainData(u);let f=0;for(let y=0;y<d;y++)f+=Math.abs(u[y]);const v=Math.sqrt(f/d)*100;if(v>i&&(i=v),v>5){let y=0,S=0;for(let b=1;b<d/2;b++){const p=Math.abs(u[b]);p>S&&(S=p,y=b)}y>0&&(n=y*44100/d)}requestAnimationFrame(m)};m()}),this.audioManager.removeAnalyser("microphone-test");const r=Date.now()-t,a=i>1,c=n?n.toFixed(0):"none";return console.log(`🧪 [MicrophoneController] Microphone test complete: volume=${i.toFixed(2)}, frequency=${c}, duration=${r}ms`),{success:a,volume:i,frequency:n,duration:r}}catch(s){const i=Date.now()-t,n=this._createStructuredError(s,"microphone_test");return x.logError(n,"Microphone functionality test"),console.error("❌ [MicrophoneController] Microphone test failed:",n.toJSON()),{success:!1,volume:0,frequency:null,duration:i,error:s}}}updateState(e){var t,s;if(this.currentState!==e){const i=this.currentState;this.currentState=e,console.log(`🔄 [MicrophoneController] State changed: ${i} → ${e}`),(s=(t=this.eventCallbacks).onStateChange)==null||s.call(t,e)}}handleError(e,t){var i,n;const s=e instanceof D?e:this._createStructuredError(e,t);x.logError(s,`MicrophoneController ${t}`),console.error(`❌ [MicrophoneController] Error in ${t}:`,s.toJSON()),this.lastError=e,this.updateState("error"),this.errorSystem&&(t==="initialization"||t==="lifecycle"?this.errorSystem.showMicrophoneError(e,t):this.errorSystem.showError("マイクエラー",`${t}でエラーが発生しました: ${e.message}`,{priority:"medium"})),(n=(i=this.eventCallbacks).onError)==null||n.call(i,e)}dispatchCustomEvent(e,t){if(typeof window>"u")return;const s=new CustomEvent(e,{detail:t});window.dispatchEvent(s)}addEventListener(e,t){typeof window>"u"||window.addEventListener(e,t)}removeEventListener(e,t){typeof window>"u"||window.removeEventListener(e,t)}destroy(){var e;console.log("🗑️ [MicrophoneController] Destroying controller"),this.forceStop(),this.lifecycleManager.destroy(),(e=this.errorSystem)==null||e.destroy(),this.eventCallbacks={},this.currentState="uninitialized",this.isPermissionGranted=!1,this.lastError=null,this.deviceSpecs=null,console.log("✅ [MicrophoneController] Cleanup complete")}_createStructuredError(e,t){return e.message.includes("Permission denied")||e.message.includes("NotAllowedError")||e.message.includes("permission")||e.message.includes("denied")?new Ee("マイクへのアクセス許可が拒否されました。ブラウザの設定でマイクアクセスを許可してください。",{operation:t,originalError:e.message,deviceSpecs:this.deviceSpecs,permissionState:this.isPermissionGranted,controllerState:this.currentState,userAgent:typeof navigator<"u"?navigator.userAgent:"unknown"}):e.message.includes("AudioContext")||e.message.includes("audio")||e.message.includes("context")||e.message.includes("initialization")?new W("オーディオシステムの初期化に失敗しました。デバイスの音響設定を確認するか、ブラウザを再起動してください。",{operation:t,originalError:e.message,controllerState:this.currentState,audioManagerStatus:this.audioManager.getStatus(),deviceSpecs:this.deviceSpecs}):new D(`${t}中に予期しないエラーが発生しました: ${e.message}`,G.MICROPHONE_ACCESS_DENIED,{operation:t,originalError:e.message,stack:e.stack,currentState:{controllerState:this.currentState,isPermissionGranted:this.isPermissionGranted,isActive:this.isActive(),isReady:this.isReady(),deviceSpecs:this.deviceSpecs}})}}const C=class C{static frequencyToMidi(e){return e<=0?0:Math.round(12*Math.log2(e/C.A4_FREQUENCY)+C.A4_MIDI_NUMBER)}static midiToFrequency(e){return C.A4_FREQUENCY*Math.pow(2,(e-C.A4_MIDI_NUMBER)/12)}static frequencyToNote(e,t=!1){if(e<=0)return{name:"--",octave:0,midi:0,frequency:0};const s=C.frequencyToMidi(e),i=t?C.FLAT_NOTE_NAMES:C.NOTE_NAMES,n=(s-12)%12,o=Math.floor((s-12)/12);return{name:i[n]+o,octave:o,midi:s,frequency:C.midiToFrequency(s)}}static frequencyToCents(e){if(e<=0)return 0;const t=12*Math.log2(e/C.A4_FREQUENCY)+C.A4_MIDI_NUMBER,s=Math.round(t),i=(t-s)*100;return Math.round(i)}static centsToRatio(e){return Math.pow(2,e/1200)}static ratioToCents(e){return e<=0?0:Math.round(1200*Math.log2(e))}static getClosestNoteFrequency(e){if(e<=0)return 0;const t=C.frequencyToMidi(e);return C.midiToFrequency(t)}static getInterval(e,t){if(e<=0||t<=0)return 0;const s=C.frequencyToMidi(e),i=C.frequencyToMidi(t);return Math.abs(i-s)}static getSignedInterval(e,t){if(e<=0||t<=0)return 0;const s=C.frequencyToMidi(e);return C.frequencyToMidi(t)-s}static getIntervalInfo(e){const t={0:"Perfect Unison",1:"Minor Second",2:"Major Second",3:"Minor Third",4:"Major Third",5:"Perfect Fourth",6:"Tritone",7:"Perfect Fifth",8:"Minor Sixth",9:"Major Sixth",10:"Minor Seventh",11:"Major Seventh",12:"Perfect Octave"},s=(e%12+12)%12,i=Math.floor(e/12),n=t[s]||"Unknown";return{name:i>0?`${n} + ${i} octave(s)`:n,semitones:e,cents:e*100,ratio:Math.pow(2,e/12)}}static isInVocalRange(e){return e>=80&&e<=1100}static isInPianoRange(e){return e>=27.5&&e<=4186}static getInstrumentRange(e){return{piano:{min:27.5,max:4186},guitar:{min:82.4,max:1397},violin:{min:196,max:3520},cello:{min:65.4,max:1397},voice_bass:{min:87.3,max:349},voice_tenor:{min:131,max:523},voice_alto:{min:175,max:698},voice_soprano:{min:262,max:1047}}[e]||null}static generateChromaticScale(e,t=1){const s=[];for(let i=0;i<12*t;i++){const n=e*Math.pow(2,i/12);s.push(n)}return s}static generateMajorScale(e){return[0,2,4,5,7,9,11,12].map(s=>e*Math.pow(2,s/12))}static generateMinorScale(e){return[0,2,3,5,7,8,10,12].map(s=>e*Math.pow(2,s/12))}static findHarmonics(e,t=8){const s=[];for(let i=1;i<=t;i++)s.push(e*i);return s}static isHarmonic(e,t,s=.05){if(t<=0||e<=0)return{isHarmonic:!1,harmonicNumber:null,exactFrequency:null};const i=e/t,n=Math.round(i);return n>=1&&Math.abs(i-n)<=s?{isHarmonic:!0,harmonicNumber:n,exactFrequency:t*n}:{isHarmonic:!1,harmonicNumber:null,exactFrequency:null}}static calculateFundamental(e,t){return t<=0||e<=0?0:e/t}static frequencyToScientificPitch(e){return C.frequencyToNote(e).name}static scientificPitchToFrequency(e){const t=e.match(/^([A-G][#b]?)(-?\d+)$/);if(!t)return 0;const[,s,i]=t,n=parseInt(i,10);let o=0;const r=s[0],a=s.slice(1);o={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[r]||0,a==="#"?o+=1:a==="b"&&(o-=1);const h=(n+1)*12+o;return C.midiToFrequency(h)}static formatFrequency(e,t=1){return e===0?"0 Hz":e<.1?"<0.1 Hz":e>=1e4?`${Math.round(e/1e3)}k Hz`:`${e.toFixed(t)} Hz`}static formatCents(e){return e===0?"0¢":`${e>0?"+":""}${e}¢`}};C.A4_FREQUENCY=440,C.A4_MIDI_NUMBER=69,C.NOTE_NAMES=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],C.FLAT_NOTE_NAMES=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],C.INTERVALS={unison:0,minorSecond:1,majorSecond:2,minorThird:3,majorThird:4,perfectFourth:5,tritone:6,perfectFifth:7,minorSixth:8,majorSixth:9,minorSeventh:10,majorSeventh:11,octave:12};let N=C;const Q=class Q{constructor(e={}){this.pitchDetector=null,this.micController=null,this.currentState="uninitialized",this.callbacks={},this.deviceSpecs=null,this.deviceSettings=null,this.uiUpdateTimer=null,this.isUpdatingSelectors=!1,this.uiElements={},this.lastError=null,this.isInitialized=!1,this.noteResetTimer=null,this.config={volumeBarSelector:e.volumeBarSelector||"#volume-bar",volumeTextSelector:e.volumeTextSelector||"#volume-text",frequencySelector:e.frequencySelector||"#frequency-display",noteSelector:e.noteSelector||"#note-display",clarityThreshold:e.clarityThreshold??.4,minVolumeAbsolute:e.minVolumeAbsolute??.003,fftSize:e.fftSize??4096,smoothing:e.smoothing??.1,deviceOptimization:e.deviceOptimization??!0,uiUpdateInterval:e.uiUpdateInterval??50,autoUpdateUI:e.autoUpdateUI??!0,debug:e.debug??!1,logPrefix:e.logPrefix??"🎵 AudioDetection"},this.audioManager=new we({sampleRate:44100,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1}),this.config.deviceOptimization&&this.detectAndOptimizeDevice(),this.debugLog("AudioDetectionComponent created with config:",this.config)}delay(e){return new Promise(t=>setTimeout(t,e))}async initialize(){var e;if(this.isInitialized){this.debugLog("Already initialized");return}try{this.updateState("initializing"),this.debugLog("Starting initialization..."),this.micController=new _e({audioManager:{sampleRate:44100,echoCancellation:!1,autoGainControl:!1},lifecycle:{maxAutoRecoveryAttempts:3,healthCheckIntervalMs:1e3},notifications:{enabled:this.config.debug}}),this.micController.setCallbacks({onStateChange:t=>{this.debugLog("MicrophoneController state:",t)},onError:t=>{this.handleError(t,"microphone_controller")},onDeviceChange:t=>{var s,i;this.deviceSpecs=t,(i=(s=this.callbacks).onDeviceDetected)==null||i.call(s,t)}}),await this.micController.initialize(),this.pitchDetector=new Ne(this.audioManager,{clarityThreshold:this.config.clarityThreshold,minVolumeAbsolute:this.config.minVolumeAbsolute,fftSize:this.config.fftSize,smoothing:((e=this.deviceSpecs)==null?void 0:e.smoothingFactor)??this.config.smoothing,deviceOptimization:this.config.deviceOptimization}),this.pitchDetector.setCallbacks({onPitchUpdate:t=>{this.handlePitchUpdate(t)},onError:t=>{this.handleError(t,"pitch_detector")},onStateChange:t=>{this.debugLog("PitchDetector state:",t)}}),await this.pitchDetector.initialize(),this.cacheUIElements(),this.deviceSettings&&this.micController&&(this.micController.setSensitivity(this.deviceSettings.sensitivityMultiplier),this.debugLog("Applied device-specific sensitivity:",this.deviceSettings.sensitivityMultiplier)),this.isInitialized=!0,this.updateState("ready"),this.debugLog("Initialization complete")}catch(t){const s=this.createStructuredError(t,"initialization");throw x.logError(s,"AudioDetectionComponent initialization"),this.lastError=s,this.updateState("error"),s}}setCallbacks(e){this.callbacks={...this.callbacks,...e},this.debugLog("Callbacks updated")}startDetection(){if(!this.isInitialized||!this.pitchDetector){const e=new D("AudioDetectionComponentが初期化されていません。initialize()メソッドを先に呼び出してください。",G.AUDIO_CONTEXT_ERROR,{operation:"startDetection",isInitialized:this.isInitialized,hasPitchDetector:!!this.pitchDetector,currentState:this.currentState});throw x.logError(e,"AudioDetection start"),this.handleError(e,"start_detection"),e}try{return this.pitchDetector.startDetection()?(this.updateState("detecting"),this.config.autoUpdateUI&&this.startUIUpdates(),this.debugLog("Detection started successfully"),!0):(this.debugLog("Failed to start detection"),!1)}catch(e){const t=this.createStructuredError(e,"start_detection");throw this.handleError(t,"start_detection"),t}}stopDetection(){try{this.pitchDetector&&this.pitchDetector.stopDetection(),this.stopUIUpdates(),this.updateState("stopped"),this.debugLog("Detection stopped")}catch(e){const t=this.createStructuredError(e,"stop_detection");this.handleError(t,"stop_detection")}}updateUI(e){var t,s;if(this.isUpdatingSelectors){this.debugLog("UI update skipped - selectors are being updated");return}try{if(this.uiElements.volumeBar&&this.config.volumeBarSelector){const i=document.querySelector(this.config.volumeBarSelector);if(i&&i===this.uiElements.volumeBar){const n=Math.min(100,e.volume*(((t=this.deviceSettings)==null?void 0:t.volumeMultiplier)??1));this.uiElements.volumeBar instanceof HTMLProgressElement?this.uiElements.volumeBar.value=n:this.uiElements.volumeBar.style.width=`${n}%`}}if(this.uiElements.volumeText&&this.config.volumeTextSelector){const i=document.querySelector(this.config.volumeTextSelector);if(i&&i===this.uiElements.volumeText){const n=Math.min(100,e.volume*(((s=this.deviceSettings)==null?void 0:s.volumeMultiplier)??1));this.uiElements.volumeText.textContent=`${n.toFixed(1)}%`}}if(this.uiElements.frequency&&this.config.frequencySelector){const i=document.querySelector(this.config.frequencySelector);i&&i===this.uiElements.frequency&&(e.frequency&&e.frequency>0?this.uiElements.frequency.textContent=N.formatFrequency(e.frequency):this.uiElements.frequency.textContent="0.0 Hz")}if(this.uiElements.note&&this.config.noteSelector&&this.config.noteSelector!=="#note-display"){const i=document.querySelector(this.config.noteSelector);if(i&&i===this.uiElements.note)if(e.frequency&&e.frequency>0){this.noteResetTimer&&(clearTimeout(this.noteResetTimer),this.noteResetTimer=null);const n=N.frequencyToNote(e.frequency);this.debugLog(`Updating note display: ${this.uiElements.note.id||"unknown-id"} with note: ${n.name} (selector: ${this.config.noteSelector})`),this.uiElements.note.textContent=n.name}else this.noteResetTimer||(this.noteResetTimer=window.setTimeout(()=>{this.uiElements.note&&(this.debugLog(`Resetting note display: ${this.uiElements.note.id||"unknown-id"} to "-" (delayed, selector: ${this.config.noteSelector})`),this.uiElements.note.textContent="-"),this.noteResetTimer=null},Q.NOTE_RESET_DELAY_MS));else this.debugLog(`Note element mismatch: cached element does not match current selector ${this.config.noteSelector} - skipping update to prevent cross-mode interference`)}else this.config.noteSelector?this.debugLog("Note element not found in uiElements.note - check selector caching"):this.debugLog("Note updates skipped - no noteSelector configured")}catch(i){this.debugLog("UI update error:",i)}}async updateSelectors(e){this.debugLog("Updating selectors:",e),this.isUpdatingSelectors=!0;const t=this.uiUpdateTimer!==null;t&&this.stopUIUpdates(),await this.delay(Q.SELECTOR_UPDATE_DELAY_MS),this.resetAllUIElements(),e.volumeBarSelector!==void 0&&(this.config.volumeBarSelector=e.volumeBarSelector),e.volumeTextSelector!==void 0&&(this.config.volumeTextSelector=e.volumeTextSelector),e.frequencySelector!==void 0&&(this.config.frequencySelector=e.frequencySelector),e.noteSelector!==void 0?this.config.noteSelector=e.noteSelector:(this.config.noteSelector="",this.debugLog("noteSelector cleared automatically to prevent cross-mode interference")),this.cacheUIElements(),await this.delay(Q.SELECTOR_UPDATE_DELAY_MS),this.resetAllUIElements(),this.isUpdatingSelectors=!1,t&&(await this.delay(Q.UI_RESTART_DELAY_MS),this.startUIUpdates()),this.debugLog("Selectors updated, all elements reset, and UI elements re-cached:",Object.keys(this.uiElements))}resetRecoveryAttempts(){this.debugLog("Resetting recovery attempts...");try{this.micController?(this.micController.resetRecoveryAttempts(),this.debugLog("Recovery attempts reset successfully")):this.debugLog("No microphone controller available to reset")}catch(e){throw this.debugLog("Error resetting recovery attempts:",e),e}}destroy(){this.debugLog("Destroying AudioDetectionComponent...");try{this.stopDetection(),this.noteResetTimer&&(clearTimeout(this.noteResetTimer),this.noteResetTimer=null),this.pitchDetector&&(this.pitchDetector.destroy(),this.pitchDetector=null),this.micController&&(this.micController.destroy(),this.micController=null),this.uiElements={},this.isInitialized=!1,this.currentState="uninitialized",this.callbacks={},this.lastError=null,this.debugLog("AudioDetectionComponent destroyed")}catch(e){console.error("Error during AudioDetectionComponent destruction:",e)}}getStatus(){var e,t;return{state:this.currentState,isInitialized:this.isInitialized,deviceSpecs:this.deviceSpecs,deviceSettings:this.deviceSettings,config:this.config,lastError:this.lastError,pitchDetectorStatus:(e=this.pitchDetector)==null?void 0:e.getStatus(),micControllerStatus:(t=this.micController)==null?void 0:t.getStatus()}}detectAndOptimizeDevice(){this.deviceSpecs=se.getDeviceSpecs();const e={PC:{volumeMultiplier:3,sensitivityMultiplier:2.5,minVolumeAbsolute:this.deviceSpecs.noiseGate*.25},iPhone:{volumeMultiplier:4.5,sensitivityMultiplier:3.5,minVolumeAbsolute:this.deviceSpecs.noiseGate*.27},iPad:{volumeMultiplier:7,sensitivityMultiplier:5,minVolumeAbsolute:this.deviceSpecs.noiseGate*.28}};this.deviceSettings=e[this.deviceSpecs.deviceType]||e.PC,this.config.minVolumeAbsolute=this.deviceSettings.minVolumeAbsolute,this.debugLog("Device optimization applied:",{device:this.deviceSpecs.deviceType,settings:this.deviceSettings})}cacheUIElements(){var e;this.config.volumeBarSelector&&(this.uiElements.volumeBar=document.querySelector(this.config.volumeBarSelector)||void 0),this.config.volumeTextSelector&&(this.uiElements.volumeText=document.querySelector(this.config.volumeTextSelector)||void 0),this.config.frequencySelector&&(this.uiElements.frequency=document.querySelector(this.config.frequencySelector)||void 0),this.config.noteSelector&&(this.uiElements.note=document.querySelector(this.config.noteSelector)||void 0,this.debugLog(`Note element cached: selector="${this.config.noteSelector}", found=${!!this.uiElements.note}, id="${((e=this.uiElements.note)==null?void 0:e.id)||"no-id"}"`)),this.debugLog("UI elements cached:",Object.keys(this.uiElements))}resetAllUIElements(){try{const e=["#mic-volume-bar","#mic-volume-text","#mic-frequency","#mic-frequency-display","#range-volume-bar","#range-volume-text","#range-frequency","#range-frequency-value","#range-frequency-display","#practice-volume-bar","#practice-volume-text","#practice-frequency","#practice-note","#freq-1","#freq-2","#freq-3","#freq-4","#freq-5","#frequency-1","#frequency-2","#frequency-3","#pitch-1","#pitch-2","#pitch-3",this.config.volumeBarSelector,this.config.volumeTextSelector,this.config.frequencySelector,this.config.noteSelector];document.querySelectorAll('[id*="freq"]:not(.frequency-group):not(.frequency-box), [id*="frequency"]:not(.frequency-group):not(.frequency-box), [id*="pitch"]:not(.frequency-group):not(.frequency-box)').forEach(s=>{const i=s.textContent||"";(i.includes("Hz")||i.match(/^\d+\.?\d*$/))&&(s.classList.contains("frequency-display")||s.id.includes("freq-"))&&(s.textContent="0.0 Hz")}),e.forEach(s=>{if(s){const i=document.querySelector(s);if(i){if(this.debugLog(`Processing selector: ${s}, element found: ${!!i}`),s.includes("volume-bar"))i instanceof HTMLProgressElement?i.value=0:i.style.width="0%";else if(s.includes("volume-text"))i.textContent="0.0%";else if(s.includes("frequency"))i.textContent="0.0 Hz",i.innerHTML="0.0 Hz",i.setAttribute("data-frequency","0"),i.style.display!=="none"&&(i.style.opacity="0.99",i.offsetHeight,i.style.opacity="");else if(s.includes("note")){const n=i.textContent,o=i.innerHTML;this.debugLog(`Resetting note element: ${s}, textContent: "${n}", innerHTML: "${o}"`),i.textContent="-",i.innerHTML="-",i.style.opacity="0.99",i.offsetHeight,i.style.opacity="",this.debugLog(`Note reset complete: ${s}, new textContent: "${i.textContent}", new innerHTML: "${i.innerHTML}"`)}}}}),this.debugLog("All UI elements reset to initial state")}catch(e){this.debugLog("Error resetting UI elements:",e)}}handlePitchUpdate(e){var t,s,i,n;(s=(t=this.callbacks).onPitchUpdate)==null||s.call(t,e),(n=(i=this.callbacks).onVolumeUpdate)==null||n.call(i,e.volume)}startUIUpdates(){this.uiUpdateTimer&&clearInterval(this.uiUpdateTimer),this.uiUpdateTimer=window.setInterval(()=>{if(this.pitchDetector&&this.currentState==="detecting"){const e=this.pitchDetector.getLatestResult();e?this.updateUI(e):this.updateUI({frequency:0,note:"-",octave:0,volume:0,clarity:0})}},this.config.uiUpdateInterval)}stopUIUpdates(){this.uiUpdateTimer&&(clearInterval(this.uiUpdateTimer),this.uiUpdateTimer=null)}updateState(e){var t,s;if(this.currentState!==e){const i=this.currentState;this.currentState=e,this.debugLog(`State changed: ${i} → ${e}`),(s=(t=this.callbacks).onStateChange)==null||s.call(t,e)}}handleError(e,t){var i,n;const s=e instanceof D?e:this.createStructuredError(e,t);this.lastError=s,this.updateState("error"),(n=(i=this.callbacks).onError)==null||n.call(i,s),this.debugLog("Error handled:",s.toJSON())}createStructuredError(e,t){return e.message.includes("Permission denied")||e.message.includes("NotAllowedError")||e.message.includes("permission")?new Ee("マイクへのアクセス許可が拒否されました。ブラウザの設定でマイクアクセスを許可してください。",{operation:t,originalError:e.message,deviceSpecs:this.deviceSpecs,componentState:this.currentState}):e.message.includes("AudioContext")||e.message.includes("audio")||e.message.includes("initialization")?new W("オーディオシステムの初期化に失敗しました。デバイスの音響設定を確認するか、ブラウザを再起動してください。",{operation:t,originalError:e.message,componentState:this.currentState,deviceSpecs:this.deviceSpecs}):new D(`${t}中に予期しないエラーが発生しました: ${e.message}`,G.PITCH_DETECTION_ERROR,{operation:t,originalError:e.message,stack:e.stack,componentState:this.currentState,isInitialized:this.isInitialized})}debugLog(e,...t){this.config.debug&&console.log(`${this.config.logPrefix} ${e}`,...t)}};Q.NOTE_RESET_DELAY_MS=300,Q.SELECTOR_UPDATE_DELAY_MS=50,Q.UI_RESTART_DELAY_MS=200;let Ae=Q;class at{constructor(e={}){this.historyBuffer=[],this.config={historyWindowMs:2e3,minConfidenceThreshold:.6,harmonicToleranceCents:30,maxHarmonicNumber:8,stabilityWeight:.7,volumeWeight:.3},this.config={...this.config,...e}}correctFrequency(e,t=1){const s=Date.now();this.cleanHistory(s),this.addToHistory(e,t,s);const i=this.analyzeHarmonics(e);return i.confidence>=this.config.minConfidenceThreshold?{correctedFreq:i.correctedFrequency,confidence:i.confidence,correctionApplied:Math.abs(i.correctedFrequency-e)>1}:{correctedFreq:e,confidence:i.confidence,correctionApplied:!1}}analyzeHarmonics(e){if(this.historyBuffer.length<3)return{correctedFrequency:e,confidence:.1};const t=this.historyBuffer.slice(-10).map(n=>n.frequency),s=this.findFundamentalCandidates(e);let i={frequency:e,confidence:.1,harmonicNumber:1};for(const n of s){const o=this.calculateHarmonicConfidence(n.fundamental,n.harmonicNumber,t);o>i.confidence&&(i={frequency:n.fundamental,confidence:o,harmonicNumber:n.harmonicNumber})}return i.harmonicNumber>1&&i.confidence>this.config.minConfidenceThreshold?{correctedFrequency:i.frequency,confidence:i.confidence,harmonicNumber:i.harmonicNumber,fundamentalCandidate:i.frequency}:{correctedFrequency:e,confidence:i.confidence}}findFundamentalCandidates(e){const t=[];for(let s=2;s<=this.config.maxHarmonicNumber;s++){const i=e/s;if(i<60)continue;const n=i*s,o=Math.abs(1200*Math.log2(e/n));if(o<=this.config.harmonicToleranceCents){const r=1-o/this.config.harmonicToleranceCents;t.push({fundamental:i,harmonicNumber:s,likelihood:r})}}return t.push({fundamental:e,harmonicNumber:1,likelihood:.5}),t.sort((s,i)=>i.likelihood-s.likelihood)}calculateHarmonicConfidence(e,t,s){if(s.length<3)return .1;let i=0,n=0;for(const a of s){let c=Math.round(a/e);c<1&&(c=1);const h=e*c,m=Math.abs(1200*Math.log2(a/h));if(m<=this.config.harmonicToleranceCents*2){const d=1-m/(this.config.harmonicToleranceCents*2);i+=d,n++}}if(n===0)return .1;const o=i/n,r=Math.min(n/s.length,1);return Math.min(o*this.config.stabilityWeight+r*(1-this.config.stabilityWeight),1)}addToHistory(e,t,s){const i=Math.min(t,1);let n=.5;if(this.historyBuffer.length>0){const r=this.historyBuffer[this.historyBuffer.length-1].frequency,a=Math.max(e,r)/Math.min(e,r);n=Math.max(0,1-(a-1)*5)}const o=i*this.config.volumeWeight+n*(1-this.config.volumeWeight);this.historyBuffer.push({frequency:e,confidence:o,timestamp:s,volume:t}),this.historyBuffer.length>50&&this.historyBuffer.shift()}cleanHistory(e){const t=e-this.config.historyWindowMs;this.historyBuffer=this.historyBuffer.filter(s=>s.timestamp>t)}resetHistory(){this.historyBuffer=[]}getAnalysisStats(){if(this.historyBuffer.length===0)return{historyLength:0,averageConfidence:0,frequencyRange:null,stabilityScore:0};const e=this.historyBuffer.map(h=>h.frequency),t=this.historyBuffer.map(h=>h.confidence),s=t.reduce((h,m)=>h+m,0)/t.length,i=Math.min(...e),n=Math.max(...e),o=e.reduce((h,m)=>h+m,0)/e.length,r=e.reduce((h,m)=>h+Math.pow(m-o,2),0)/e.length,a=Math.sqrt(r)/o,c=Math.max(0,1-a);return{historyLength:this.historyBuffer.length,averageConfidence:s,frequencyRange:{min:i,max:n},stabilityScore:c}}updateConfig(e){this.config={...this.config,...e}}}const te={EXCELLENT:"excellent",GOOD:"good",FAIR:"fair",POOR:"poor"};class ct{constructor(e={}){this.analysisBuffer=[],this.config={analysisWindowMs:3e3,stabilityThresholdCents:20,vibratoMinRate:4.5,vibratoMaxRate:7.5,vibratoMinDepthCents:50,breathinessThreshold:.3,minAnalysisTime:1e3},this.config={...this.config,...e}}analyzeVoice(e,t,s,i){const n=Date.now();this.addToBuffer(e,t,s,n),this.cleanBuffer(n);const o=this.calculateStability(),r=this.detectVibrato(),a=i?this.analyzeBreathiness(i):null,c=this.analyzeConsistency(),h=this.calculateOverallQuality(o,r,a,c),m=this.generateRecommendations(h,o,r,a,c);return{quality:h,stability:o,recommendations:m}}calculateStability(){if(this.analysisBuffer.length<10)return .5;const t=this.analysisBuffer.map(a=>a.frequency).filter(a=>a>0);if(t.length<5)return .3;const s=t.reduce((a,c)=>a+c,0)/t.length,i=t.reduce((a,c)=>a+Math.pow(c-s,2),0)/t.length,r=Math.sqrt(i)/s*1200;return Math.max(0,Math.min(1,1-r/100))}detectVibrato(){if(this.analysisBuffer.length<30)return{detected:!1,rate:null,depth:null,regularity:null};const e=this.analysisBuffer.map(d=>d.frequency).filter(d=>d>0);if(e.length<20)return{detected:!1,rate:null,depth:null,regularity:null};const t=this.smoothFrequencies(e,3),s=this.findExtrema(t);if(s.length<4)return{detected:!1,rate:null,depth:null,regularity:null};const i=(this.analysisBuffer[this.analysisBuffer.length-1].timestamp-this.analysisBuffer[0].timestamp)/1e3,o=s.length/2/i,r=[];for(let d=0;d<s.length-1;d++){const u=t[s[d].index],f=t[s[d+1].index];if(u>0&&f>0){const g=Math.abs(1200*Math.log2(u/f));r.push(g)}}const a=r.length>0?r.reduce((d,u)=>d+u,0)/r.length:0,c=[];for(let d=0;d<s.length-2;d+=2){const u=s[d+2].index-s[d].index;c.push(u)}let h=0;if(c.length>2){const d=c.reduce((f,g)=>f+g,0)/c.length,u=c.reduce((f,g)=>f+Math.pow(g-d,2),0)/c.length;h=Math.max(0,1-Math.sqrt(u)/d)}return{detected:o>=this.config.vibratoMinRate&&o<=this.config.vibratoMaxRate&&a>=this.config.vibratoMinDepthCents,rate:o,depth:a,regularity:h}}analyzeBreathiness(e){const t=Math.floor(e.length*.1),s=e.slice(Math.floor(e.length*.7)),i=e.slice(0,t*2).reduce((r,a)=>r+a*a,0),n=s.reduce((r,a)=>r+a*a,0);if(i===0)return 1;const o=n/i;return Math.min(1,o)}analyzeConsistency(){if(this.analysisBuffer.length<10)return .5;const e=this.analysisBuffer.map(n=>n.volume),t=this.analysisBuffer.map(n=>n.clarity),s=this.calculateConsistencyScore(e),i=this.calculateConsistencyScore(t);return(s+i)/2}calculateConsistencyScore(e){if(e.length<3)return .5;const t=e.reduce((n,o)=>n+o,0)/e.length,s=e.reduce((n,o)=>n+Math.pow(o-t,2),0)/e.length,i=Math.sqrt(s)/(t||1);return Math.max(0,Math.min(1,1-i))}calculateOverallQuality(e,t,s,i){const n={stability:.4,consistency:.3,breathiness:.2,vibrato:.1};let o=e*n.stability+i*n.consistency;return s!==null?o+=(1-Math.min(s,1))*n.breathiness:o+=.7*n.breathiness,t.detected&&t.regularity>.7?o+=.9*n.vibrato:t.detected?o+=.6*n.vibrato:o+=.5*n.vibrato,o>=.85?te.EXCELLENT:o>=.7?te.GOOD:o>=.5?te.FAIR:te.POOR}generateRecommendations(e,t,s,i,n){const o=[];return t<.5?(o.push("音程の安定性を向上させるため、ゆっくりとした発声練習を行ってください"),o.push("腹式呼吸を意識して、息の流れを一定に保つ練習をしてください")):t<.7&&o.push("音程の微調整練習で、より正確なピッチコントロールを目指しましょう"),n<.5&&(o.push("音量と音質の一貫性を保つため、定期的な発声練習を継続してください"),o.push("録音を聞き返して、自分の声の特徴を把握しましょう")),i!==null&&i>.6&&(o.push("声の息漏れが気になります。発声時の喉の締まりを意識してください"),o.push("ハミング練習で、クリアな声質を目指しましょう")),s.detected?s.regularity<.5?o.push("ビブラートの規則性を改善するため、メトロノームに合わせた練習をしてください"):s.rate>7.5&&o.push("ビブラートの速度が速すぎます。よりゆったりとしたビブラートを練習してください"):(e===te.GOOD||e===te.EXCELLENT)&&o.push("美しいビブラートの習得に挑戦してみましょう"),e===te.POOR?(o.push("基礎的な発声練習から始めることをお勧めします"),o.push("専門的な指導を受けることを検討してください")):e===te.EXCELLENT&&o.push("素晴らしい声質です。この状態を維持する練習を続けてください"),o}smoothFrequencies(e,t){const s=[];for(let i=0;i<e.length;i++){let n=0,o=0;const r=Math.max(0,i-Math.floor(t/2)),a=Math.min(e.length,i+Math.floor(t/2)+1);for(let c=r;c<a;c++)n+=e[c],o++;s.push(n/o)}return s}findExtrema(e){const t=[];for(let s=1;s<e.length-1;s++){const i=e[s-1],n=e[s],o=e[s+1];n>i&&n>o?t.push({index:s,value:n,type:"peak"}):n<i&&n<o&&t.push({index:s,value:n,type:"valley"})}return t}addToBuffer(e,t,s,i){this.analysisBuffer.push({frequency:e,volume:t,clarity:s,timestamp:i}),this.analysisBuffer.length>200&&this.analysisBuffer.shift()}cleanBuffer(e){const t=e-this.config.analysisWindowMs;this.analysisBuffer=this.analysisBuffer.filter(s=>s.timestamp>t)}reset(){this.analysisBuffer=[]}getBufferStats(){if(this.analysisBuffer.length===0)return{entryCount:0,timeSpanMs:0,averageVolume:0,averageClarity:0};const e=this.analysisBuffer.map(i=>i.volume),t=this.analysisBuffer.map(i=>i.clarity),s=this.analysisBuffer[this.analysisBuffer.length-1].timestamp-this.analysisBuffer[0].timestamp;return{entryCount:this.analysisBuffer.length,timeSpanMs:s,averageVolume:e.reduce((i,n)=>i+n,0)/e.length,averageClarity:t.reduce((i,n)=>i+n,0)/t.length}}}class lt{constructor(){this.calibrationData=null,this.isCalibrated=!1,this.calibrationInProgress=!1,this.deviceSpecs=se.getDeviceSpecs()}async calibrate(e,t){if(this.calibrationInProgress)throw new Error("Calibration already in progress");this.calibrationInProgress=!0;try{console.log("🎛️ [CalibrationSystem] Starting device calibration");const s=await this.measureBackgroundNoise(e,t),i=await this.calibrateVolumeLevels(e,t),n=await this.measureFrequencyResponse(e,t),o=this.calculateOptimalSettings(s,i,n);return this.calibrationData={volumeOffset:i.offset,frequencyResponse:n,noiseProfile:s,optimalSettings:o},this.isCalibrated=!0,this.calibrationInProgress=!1,console.log("✅ [CalibrationSystem] Calibration completed successfully"),{success:!0,calibrationData:this.calibrationData,recommendedSettings:o}}catch(s){return console.error("❌ [CalibrationSystem] Calibration failed:",s),this.calibrationInProgress=!1,{success:!1,calibrationData:null,recommendedSettings:this.getDefaultSettings(),error:s}}}async measureBackgroundNoise(e,t,s=2e3){return new Promise(i=>{const n=e.createAnalyser();n.fftSize=2048;const o=e.createMediaStreamSource(t);o.connect(n);const r=n.frequencyBinCount,a=new Float32Array(r),c=[],h=Date.now(),m=()=>{if(Date.now()-h>=s){const d={};for(let u=0;u<r;u++){const f=u*e.sampleRate/n.fftSize;let g=0;for(const v of c)g+=v[u];d[Math.round(f)]=g/c.length}o.disconnect(),i(d);return}n.getFloatFrequencyData(a),c.push(new Float32Array(a)),setTimeout(m,100)};m()})}async calibrateVolumeLevels(e,t,s=3e3){return new Promise(i=>{const n=e.createAnalyser();n.fftSize=1024;const o=e.createMediaStreamSource(t);o.connect(n);const r=n.fftSize,a=new Float32Array(r),c=[],h=Date.now(),m=()=>{if(Date.now()-h>=s){c.sort((b,p)=>b-p);const f=c[0]||0,g=c[c.length-1]||1,S=.3-(c[Math.floor(c.length/2)]||.5);o.disconnect(),i({offset:S,range:{min:f,max:g}});return}n.getFloatTimeDomainData(a);let d=0;for(let f=0;f<r;f++)d+=a[f]*a[f];const u=Math.sqrt(d/r);c.push(u),setTimeout(m,50)};m()})}async measureFrequencyResponse(e,t,s=5e3){return new Promise(i=>{const n=e.createAnalyser();n.fftSize=4096;const o=e.createMediaStreamSource(t);o.connect(n);const r=n.frequencyBinCount,a=new Float32Array(r),c={},h=Date.now(),m=()=>{if(Date.now()-h>=s){const d={};Object.keys(c).forEach(u=>{const f=parseInt(u),g=c[f],v=g.reduce((y,S)=>y+S,0)/g.length;d[f]=v}),o.disconnect(),i(d);return}n.getFloatFrequencyData(a);for(let d=0;d<r;d++){const u=Math.round(d*e.sampleRate/n.fftSize);u>=80&&u<=1e3&&(c[u]||(c[u]=[]),c[u].push(a[d]))}setTimeout(m,100)};m()})}calculateOptimalSettings(e,t,s){const i=this.getDefaultSettings(),n=Math.max(.5,Math.min(2,1-t.offset)),o=i.sensitivity*n,a=Object.keys(e).map(p=>parseInt(p)).filter(p=>p>=100&&p<=800).map(p=>e[p]),c=a.length>0?a.reduce((p,A)=>p+A,0)/a.length:-60,h=Math.max(-20,c+10),m=Math.max(i.noiseGate,Math.abs(h)/1e3),u=Object.keys(s).map(p=>parseInt(p)).sort((p,A)=>p-A).map(p=>s[p]),f=u.slice(0,Math.floor(u.length*.3)),g=u.slice(Math.floor(u.length*.3),Math.floor(u.length*.7)),v=u.slice(Math.floor(u.length*.7)),y=f.reduce((p,A)=>p+A,0)/f.length,S=g.reduce((p,A)=>p+A,0)/g.length,b=v.reduce((p,A)=>p+A,0)/v.length;return{sensitivity:Math.round(o*10)/10,noiseGate:Math.round(m*1e3)/1e3,volumeOffset:t.offset,filterSettings:{highpassFreq:y<S-5?100:80,lowpassFreq:b>S+3?600:800,notchFreq:60,highpassQ:.7,lowpassQ:.7,notchQ:10},deviceAdjustments:{lowFreqCompensation:Math.max(.8,Math.min(1.5,S/(y||-60))),highFreqCompensation:Math.max(.8,Math.min(1.2,S/(b||-60)))}}}getDefaultSettings(){return{sensitivity:this.deviceSpecs.sensitivity,noiseGate:this.deviceSpecs.noiseGate,volumeOffset:0,filterSettings:{highpassFreq:80,lowpassFreq:800,notchFreq:60,highpassQ:.7,lowpassQ:.7,notchQ:10}}}applyCalibration(e){if(!this.isCalibrated||!this.calibrationData)return console.warn("⚠️ [CalibrationSystem] No calibration data available"),!1;try{const t=this.calibrationData.optimalSettings;return e.setSensitivity&&e.setSensitivity(t.sensitivity),e.setNoiseGate&&e.setNoiseGate(t.noiseGate),e.updateFilterSettings&&e.updateFilterSettings(t.filterSettings),console.log("✅ [CalibrationSystem] Calibration applied successfully"),!0}catch(t){return console.error("❌ [CalibrationSystem] Failed to apply calibration:",t),!1}}getCalibrationStatus(){return{isCalibrated:this.isCalibrated,inProgress:this.calibrationInProgress,deviceSpecs:this.deviceSpecs,calibrationData:this.calibrationData}}reset(){this.isCalibrated=!1,this.calibrationInProgress=!1,this.calibrationData=null,console.log("🔄 [CalibrationSystem] Calibration reset")}saveCalibration(){if(!this.isCalibrated||!this.calibrationData)return!1;try{const e=`pitchpro_calibration_${this.deviceSpecs.deviceType}`,t={deviceSpecs:this.deviceSpecs,calibrationData:this.calibrationData,timestamp:Date.now()};return localStorage.setItem(e,JSON.stringify(t)),console.log("💾 [CalibrationSystem] Calibration saved"),!0}catch(e){return console.error("❌ [CalibrationSystem] Failed to save calibration:",e),!1}}loadCalibration(){try{const e=`pitchpro_calibration_${this.deviceSpecs.deviceType}`,t=localStorage.getItem(e);if(!t)return!1;const s=JSON.parse(t),i=7*24*60*60*1e3;return Date.now()-s.timestamp>i?(console.log("⏰ [CalibrationSystem] Saved calibration is too old, ignoring"),!1):s.deviceSpecs.deviceType!==this.deviceSpecs.deviceType?(console.log("📱 [CalibrationSystem] Device type mismatch, ignoring saved calibration"),!1):(this.calibrationData=s.calibrationData,this.isCalibrated=!0,console.log("📂 [CalibrationSystem] Calibration loaded successfully"),!0)}catch(e){return console.error("❌ [CalibrationSystem] Failed to load calibration:",e),!1}}}const I=class I{static generateScale(e,t="major"){const s=I.SCALE_PATTERNS[t];if(!s)throw new Error(`Unknown scale type: ${t}`);return s.map(i=>{const n=e*Math.pow(2,i/12);return N.frequencyToNote(n)})}static generateChord(e,t="major"){const s=I.CHORD_PATTERNS[t];if(!s)throw new Error(`Unknown chord type: ${t}`);return s.map(i=>{const n=e*Math.pow(2,i/12);return N.frequencyToNote(n)})}static identifyScale(e){if(e.length<3)return[];const t=e.sort((o,r)=>o-r),s=t[0],i=t.map(o=>Math.round(12*Math.log2(o/s))),n=[];return Object.entries(I.SCALE_PATTERNS).forEach(([o,r])=>{for(let a=0;a<12;a++){const c=r.map(u=>(u+a)%12).sort((u,f)=>u-f),h=i.map(u=>u%12).sort((u,f)=>u-f);let m=0;h.forEach(u=>{c.includes(u)&&m++});const d=m/Math.max(h.length,c.length);if(d>.5){const u=s*Math.pow(2,-a/12);n.push({scale:o,confidence:d,root:N.frequencyToNote(u)})}}}),n.sort((o,r)=>r.confidence-o.confidence).slice(0,5)}static identifyChord(e){if(e.length<2)return[];const t=e.sort((i,n)=>i-n),s=[];return Object.entries(I.CHORD_PATTERNS).forEach(([i,n])=>{for(let o=0;o<n.length;o++){const r=[...n.slice(o),...n.slice(0,o).map(a=>a+12)];t.forEach((a,c)=>{const h=t.map(f=>Math.round(12*Math.log2(f/a)));let m=0;const d=new Set(r);h.forEach(f=>{const g=f%12;(d.has(g)||d.has(g+12))&&m++});const u=m/Math.max(h.length,n.length);if(u>.6){const f=o===0?a:a*Math.pow(2,-n[o]/12);s.push({chord:i,confidence:u,root:N.frequencyToNote(f),inversion:o>0?o:void 0})}})}}),s.sort((i,n)=>n.confidence-i.confidence).slice(0,3)}static getKeySignature(e,t="major"){const s=["F","C","G","D","A","E","B"],i=["B","E","A","D","G","C","F"],n={C:{sharps:0,flats:0},G:{sharps:1,flats:0},D:{sharps:2,flats:0},A:{sharps:3,flats:0},E:{sharps:4,flats:0},B:{sharps:5,flats:0},"F#":{sharps:6,flats:0},"C#":{sharps:7,flats:0},F:{sharps:0,flats:1},Bb:{sharps:0,flats:2},Eb:{sharps:0,flats:3},Ab:{sharps:0,flats:4},Db:{sharps:0,flats:5},Gb:{sharps:0,flats:6},Cb:{sharps:0,flats:7}};let o=n[e];if(!o&&t==="minor"){const h={A:"C",E:"G",B:"D","F#":"A","C#":"E","G#":"B","D#":"F#","A#":"C#",D:"F",G:"Bb",C:"Eb",F:"Ab",Bb:"Db",Eb:"Gb",Ab:"Cb"}[e];h&&(o=n[h])}if(!o)return{sharps:[],flats:[],accidentalCount:0};const r=s.slice(0,o.sharps).map(c=>c+"#"),a=i.slice(0,o.flats).map(c=>c+"b");return{sharps:r,flats:a,accidentalCount:o.sharps||o.flats}}static getHarmonicSeries(e,t=16){const s=[];for(let i=1;i<=t;i++){const n=e*i;s.push(N.frequencyToNote(n))}return s}static getJustIntonationRatios(){return{unison:{ratio:1/1,cents:0},minorSecond:{ratio:16/15,cents:112},majorSecond:{ratio:9/8,cents:204},minorThird:{ratio:6/5,cents:316},majorThird:{ratio:5/4,cents:386},perfectFourth:{ratio:4/3,cents:498},tritone:{ratio:45/32,cents:590},perfectFifth:{ratio:3/2,cents:702},minorSixth:{ratio:8/5,cents:814},majorSixth:{ratio:5/3,cents:884},minorSeventh:{ratio:16/9,cents:996},majorSeventh:{ratio:15/8,cents:1088},octave:{ratio:2/1,cents:1200}}}static equalTemperamentToJustIntonation(e){const t=e*100,s=I.getJustIntonationRatios();let i,n=1/0;return Object.entries(s).forEach(([r,{cents:a}])=>{const c=Math.abs(t-a);c<n&&(n=c,i=r)}),{ratio:Math.pow(2,e/12),cents:t,closestJustInterval:i,centsDeviation:i?n:void 0}}static analyzeMelody(e){if(e.length<2)return[];const t=[];for(let s=1;s<e.length;s++){const i=e[s-1],n=e[s],o=N.frequencyToNote(i),r=N.frequencyToNote(n),a=N.getSignedInterval(i,n),c=N.getIntervalInfo(Math.abs(a)),h=a>0?"up":a<0?"down":"same";t.push({fromNote:o,toNote:r,interval:c,direction:h})}return t}static generateChordProgression(e,t="major",s=[1,4,5,1]){const i=N.scientificPitchToFrequency(e+"4");if(i===0)throw new Error(`Invalid key: ${e}`);const n=I.generateScale(i,t==="minor"?"naturalMinor":"major"),o=[];return s.forEach(r=>{const a=n[(r-1)%n.length],c=t==="major"?I.getMajorScaleChordType(r):I.getMinorScaleChordType(r),h=I.generateChord(a.frequency,c);o.push(h)}),o}static getMajorScaleChordType(e){return["major","minor","minor","major","major","minor","diminished"][(e-1)%7]}static getMinorScaleChordType(e){return["minor","diminished","major","minor","minor","major","major"][(e-1)%7]}};I.SCALE_PATTERNS={major:[0,2,4,5,7,9,11],naturalMinor:[0,2,3,5,7,8,10],harmonicMinor:[0,2,3,5,7,8,11],melodicMinor:[0,2,3,5,7,9,11],dorian:[0,2,3,5,7,9,10],phrygian:[0,1,3,5,7,8,10],lydian:[0,2,4,6,7,9,11],mixolydian:[0,2,4,5,7,9,10],locrian:[0,1,3,5,6,8,10],pentatonicMajor:[0,2,4,7,9],pentatonicMinor:[0,3,5,7,10],blues:[0,3,5,6,7,10],chromatic:[0,1,2,3,4,5,6,7,8,9,10,11]},I.CHORD_PATTERNS={major:[0,4,7],minor:[0,3,7],diminished:[0,3,6],augmented:[0,4,8],sus2:[0,2,7],sus4:[0,5,7],major7:[0,4,7,11],minor7:[0,3,7,10],dominant7:[0,4,7,10],majorMaj7:[0,4,7,11],halfDiminished7:[0,3,6,10],diminished7:[0,3,6,9],add9:[0,4,7,14],major9:[0,4,7,11,14],minor9:[0,3,7,10,14]},I.CIRCLE_OF_FIFTHS=["C","G","D","A","E","B","F#","C#","Ab","Eb","Bb","F"],I.INTERVAL_NAMES={0:"Perfect Unison",1:"Minor Second",2:"Major Second",3:"Minor Third",4:"Major Third",5:"Perfect Fourth",6:"Tritone",7:"Perfect Fifth",8:"Minor Sixth",9:"Major Sixth",10:"Minor Seventh",11:"Major Seventh",12:"Perfect Octave"};let Me=I;const ht="1.1.8",ut=new Date().toISOString(),dt={pitchDetector:{fftSize:4096,smoothing:.1,clarityThreshold:.4,minVolumeAbsolute:.003},audioManager:{sampleRate:44100,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1},noiseFilter:{highpassFreq:80,lowpassFreq:800,notchFreq:60,Q:.7}};exports.AudioDetectionComponent=Ae;exports.AudioManager=we;exports.BUILD_DATE=ut;exports.CalibrationSystem=lt;exports.DEFAULT_CONFIG=dt;exports.DeviceDetection=se;exports.ErrorNotificationSystem=Pe;exports.FrequencyUtils=N;exports.HarmonicCorrection=at;exports.LogLevel=he;exports.Logger=re;exports.MicrophoneController=_e;exports.MicrophoneHealthError=xe;exports.MicrophoneLifecycleManager=Re;exports.MusicTheory=Me;exports.NoiseFilter=it;exports.PitchDetector=Ne;exports.VERSION=ht;exports.VoiceAnalyzer=ct;exports.debug=st;exports.defaultLogger=ue;exports.error=rt;exports.info=nt;exports.warn=ot;
//# sourceMappingURL=index.js.map
