(function(v,E){typeof exports=="object"&&typeof module<"u"?E(exports):typeof define=="function"&&define.amd?define(["exports"],E):(v=typeof globalThis<"u"?globalThis:v||self,E(v.PitchPro={}))})(this,function(v){"use strict";var dt=Object.defineProperty;var mt=(v,E,N)=>E in v?dt(v,E,{enumerable:!0,configurable:!0,writable:!0,value:N}):v[E]=N;var P=(v,E,N)=>mt(v,typeof E!="symbol"?E+"":E,N);const w=class w{static getDeviceSpecs(){if(w.cachedSpecs)return w.cachedSpecs;if(typeof window>"u"||typeof navigator>"u")return w.getDefaultSpecs();const e=navigator.userAgent,t=w.analyzeUserAgent(e);return w.cachedSpecs=t,console.log("📱 [DeviceDetection] Device analysis:",{userAgent:e.substring(0,100)+"...",deviceType:t.deviceType,isIOS:t.isIOS,sensitivity:t.sensitivity,divisor:t.divisor}),t}static analyzeUserAgent(e){const t=/iPhone/.test(e),i=/iPad/.test(e),s=/Macintosh/.test(e)&&"ontouchend"in document,n=/iPad|iPhone|iPod/.test(e),o=/iPad|iPhone|iPod/.test(navigator.platform||""),r=t||i||s||n||o;let a="PC";t?a="iPhone":i||s?a="iPad":r&&(a=w.detectIOSDeviceType());const c=w.getDeviceOptimizations(a,r);return{deviceType:a,isIOS:r,sensitivity:c.sensitivity,noiseGate:c.noiseGate,volumeMultiplier:c.volumeMultiplier,smoothingFactor:c.smoothingFactor,divisor:6,gainCompensation:1,noiseThreshold:7}}static detectIOSDeviceType(){const e=window.screen.width,t=window.screen.height,i=Math.max(e,t),s=Math.min(e,t);return i>=768||i>=700&&s>=500?"iPad":"iPhone"}static getDeviceOptimizations(e,t){switch(e){case"iPad":return{sensitivity:4,noiseGate:.025,volumeMultiplier:17,smoothingFactor:.25};case"iPhone":return{sensitivity:3.5,noiseGate:.02,volumeMultiplier:9.5,smoothingFactor:.25};case"PC":default:return{sensitivity:1.7,noiseGate:.06,volumeMultiplier:3,smoothingFactor:.25}}}static getDefaultSpecs(){return{deviceType:"PC",isIOS:!1,sensitivity:1.7,noiseGate:.018,volumeMultiplier:3,smoothingFactor:.25,divisor:6,gainCompensation:1,noiseThreshold:7}}static supportsWebAudio(){return typeof window<"u"&&(typeof window.AudioContext<"u"||typeof window.webkitAudioContext<"u")}static supportsMediaDevices(){return typeof navigator<"u"&&typeof navigator.mediaDevices<"u"&&typeof navigator.mediaDevices.getUserMedia<"u"}static supportsMediaRecorder(){return typeof window<"u"&&typeof window.MediaRecorder<"u"}static getDeviceCapabilities(){return{deviceSpecs:w.getDeviceSpecs(),webAudioSupport:w.supportsWebAudio(),mediaDevicesSupport:w.supportsMediaDevices(),mediaRecorderSupport:w.supportsMediaRecorder(),touchSupport:"ontouchend"in document,userAgent:typeof navigator<"u"?navigator.userAgent:"Unknown",screenSize:typeof window<"u"?{width:window.screen.width,height:window.screen.height,pixelRatio:window.devicePixelRatio}:null,language:typeof navigator<"u"?navigator.language:"Unknown",platform:typeof navigator<"u"&&navigator.platform||"Unknown"}}static isMobile(){return w.getDeviceSpecs().isIOS||/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test((navigator==null?void 0:navigator.userAgent)||"")}static isTablet(){if(w.getDeviceSpecs().deviceType==="iPad")return!0;const t=(navigator==null?void 0:navigator.userAgent)||"";return/Android/i.test(t)&&!/Mobile/i.test(t)}static isDesktop(){return!w.isMobile()&&!w.isTablet()}static getOptimalAudioConstraints(){const e=w.getDeviceSpecs(),t={audio:{echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1,sampleRate:44100,channelCount:1,sampleSize:16,deviceId:{ideal:"default"}}};return e.isIOS&&t.audio&&typeof t.audio=="object"&&(t.audio={...t.audio,googAutoGainControl:!1,googNoiseSuppression:!1,googEchoCancellation:!1,googHighpassFilter:!1,googTypingNoiseDetection:!1,googBeamforming:!1,mozAutoGainControl:!1,mozNoiseSuppression:!1}),t}static clearCache(){w.cachedSpecs=null}static getDebugInfo(){return{...w.getDeviceCapabilities(),detectionMethods:{userAgentIPhone:/iPhone/.test((navigator==null?void 0:navigator.userAgent)||""),userAgentIPad:/iPad/.test((navigator==null?void 0:navigator.userAgent)||""),userAgentMacintosh:/Macintosh/.test((navigator==null?void 0:navigator.userAgent)||""),touchSupport:"ontouchend"in document,navigatorPlatform:(navigator==null?void 0:navigator.platform)||"Unknown",screenAspectRatio:typeof window<"u"?(window.screen.width/window.screen.height).toFixed(2):"Unknown"}}}};w.cachedSpecs=null;let E=w;var N=(h=>(h.AUDIO_CONTEXT_ERROR="AUDIO_CONTEXT_ERROR",h.MICROPHONE_ACCESS_DENIED="MICROPHONE_ACCESS_DENIED",h.PITCH_DETECTION_ERROR="PITCH_DETECTION_ERROR",h.BUFFER_OVERFLOW="BUFFER_OVERFLOW",h.INVALID_SAMPLE_RATE="INVALID_SAMPLE_RATE",h.DEVICE_NOT_SUPPORTED="DEVICE_NOT_SUPPORTED",h.PROCESSING_TIMEOUT="PROCESSING_TIMEOUT",h))(N||{});class T extends Error{constructor(e,t,i){super(e),this.name="PitchProError",this.code=t,this.timestamp=new Date,this.context=i,Error.captureStackTrace&&Error.captureStackTrace(this,T)}toJSON(){return{name:this.name,message:this.message,code:this.code,timestamp:this.timestamp,context:this.context,stack:this.stack}}}class q extends T{constructor(e,t){super(e,"AUDIO_CONTEXT_ERROR",t),this.name="AudioContextError"}}class ge extends T{constructor(e,t){super(e,"MICROPHONE_ACCESS_DENIED",t),this.name="MicrophoneAccessError"}}class Fe extends T{constructor(e,t,i,s){super(e,"MICROPHONE_ACCESS_DENIED",{healthStatus:t,recoveryAttempts:i,timestamp:Date.now(),...s}),this.name="MicrophoneHealthError"}getHealthStatus(){var e;return(e=this.context)==null?void 0:e.healthStatus}getRecoveryAttempts(){var e;return(e=this.context)==null?void 0:e.recoveryAttempts}}class De extends T{constructor(e,t){super(e,"PITCH_DETECTION_ERROR",t),this.name="PitchDetectionError"}}function Ie(h){return["BUFFER_OVERFLOW","PROCESSING_TIMEOUT","PITCH_DETECTION_ERROR"].includes(h.code)}class I{static getUserFriendlyMessage(e){switch(e.code){case"MICROPHONE_ACCESS_DENIED":return{title:"マイクアクセスが拒否されました",message:"ピッチ検出を行うには、マイクへのアクセス許可が必要です。",actions:["ブラウザのアドレスバーにあるマイクアイコンをクリック","「このサイトでマイクを許可する」を選択","ページを再読み込みしてもう一度試す","プライベートブラウジングモードを無効にする（Safariの場合）"],severity:"high",canRetry:!0};case"AUDIO_CONTEXT_ERROR":return{title:"オーディオシステムエラー",message:"オーディオの初期化に失敗しました。デバイスの音響設定を確認してください。",actions:["他のアプリケーションでマイクが使用中でないか確認","ブラウザを再起動してもう一度試す","システムの音響設定でマイクが有効になっているか確認","外部マイクを使用している場合は接続を確認"],severity:"high",canRetry:!0};case"PITCH_DETECTION_ERROR":return{title:"ピッチ検出エラー",message:"音程の検出中に一時的な問題が発生しました。",actions:["マイクに向かって明確に歌ってみる","周囲のノイズを減らす","感度設定を調整する","数秒待ってからもう一度試す"],severity:"medium",canRetry:!0};case"BUFFER_OVERFLOW":return{title:"バッファオーバーフロー",message:"オーディオデータの処理が追いついていません。",actions:["他のタブやアプリケーションを閉じる","ブラウザのハードウェアアクセラレーションを有効にする","より高性能なデバイスを使用する","ページを再読み込みする"],severity:"medium",canRetry:!0};case"PROCESSING_TIMEOUT":return{title:"処理タイムアウト",message:"オーディオ処理の応答時間が長すぎます。",actions:["デバイスの負荷を減らす（他のアプリを閉じる）","ネットワーク接続を確認する","ブラウザを再起動する","しばらく待ってからもう一度試す"],severity:"medium",canRetry:!0};case"INVALID_SAMPLE_RATE":return{title:"サンプリングレート不適合",message:"お使いのデバイスのサンプリングレートがサポートされていません。",actions:["システムの音響設定で44.1kHz または 48kHzに設定","外部オーディオインターフェースの設定を確認","デバイスドライバを更新","別のマイクを試す"],severity:"high",canRetry:!1};case"DEVICE_NOT_SUPPORTED":return{title:"デバイス非対応",message:"お使いのデバイスまたはブラウザはサポートされていません。",actions:["Chrome、Firefox、Safari の最新版を使用","より新しいデバイスを使用","ブラウザの互換性情報を確認","技術サポートにお問い合わせ"],severity:"critical",canRetry:!1};default:return{title:"予期しないエラー",message:"システムで予期しない問題が発生しました。",actions:["ページを再読み込み","ブラウザを再起動","しばらく時間をおいて再試行","問題が続く場合はサポートへ連絡"],severity:"medium",canRetry:!0}}}static getTechnicalDetails(e){return{errorCode:e.code,timestamp:e.timestamp.toISOString(),context:e.context||{},stackTrace:e.stack,diagnosticInfo:{userAgent:typeof navigator<"u"?navigator.userAgent:"unknown",timestamp:Date.now(),url:typeof window<"u"?window.location.href:"unknown",isRecoverable:Ie(e)}}}static logError(e,t){const i=this.getUserFriendlyMessage(e),s=this.getTechnicalDetails(e);console.group(`🚨 [PitchPro Error] ${i.title}`),console.log("👤 User Message:",i.message),console.log("📋 Suggested Actions:",i.actions),console.log("⚠️ Severity:",i.severity),console.log("🔄 Can Retry:",i.canRetry),console.log("🔧 Error Code:",s.errorCode),console.log("⏰ Timestamp:",s.timestamp),t&&console.log("📍 Context:",t),s.context&&Object.keys(s.context).length>0&&console.log("🔍 Additional Context:",s.context),s.stackTrace&&console.log("📜 Stack Trace:",s.stackTrace),console.groupEnd()}static getRecoveryStrategy(e,t){const i=this.getUserFriendlyMessage(e),s=i.actions.slice(0,2),n=i.actions.slice(2);let o=[];return t==="iPhone"||t==="iPad"?o=["感度を高めに設定（7.0x推奨）","Safari使用を推奨","iOS 14以上で使用","低電力モードを無効にする"]:t==="Android"?o=["Chrome使用を推奨","バックグラウンドアプリを制限","省電力モードを無効にする","マイク権限を常に許可に設定"]:o=["安定したネットワーク環境で使用","ブラウザを最新版に更新","ハードウェアアクセラレーションを有効化","外部ノイズの少ない環境で使用"],{immediate:s,fallback:n,preventive:o}}}class pe{constructor(e={}){this.audioContext=null,this.mediaStream=null,this.sourceNode=null,this.gainNode=null,this.analysers=new Map,this.filters=new Map,this.refCount=0,this.initPromise=null,this.isInitialized=!1,this.lastError=null,this.gainMonitorInterval=null,this.isMuted=!1,console.log("🔍 [DIAGNOSTIC] AudioManager constructor - input config:",e),this.config={sampleRate:44100,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1,latency:.1,...e},console.log("🔍 [DIAGNOSTIC] AudioManager constructor - final config:",this.config),console.log("🔍 [DIAGNOSTIC] autoGainControl value after merge:",this.config.autoGainControl),this.currentSensitivity=this._getDefaultSensitivity()}_getDefaultSensitivity(){const e=E.getDeviceSpecs();return console.log(`🔧 [AudioManager] ${e.deviceType} detected - setting default sensitivity ${e.sensitivity}x`),e.sensitivity}async initialize(){var e,t,i;if(this.initPromise)return this.initPromise;if(this.isInitialized&&this.audioContext&&this.mediaStream){const s=this.checkMediaStreamHealth();if(s.healthy)return this.refCount++,{audioContext:this.audioContext,mediaStream:this.mediaStream,sourceNode:this.sourceNode};console.warn("⚠️ [AudioManager] Unhealthy MediaStream detected - force re-initialization:",s),console.log("🔄 [AudioManager] Unhealthy MediaStream details:",{mediaStreamActive:(e=this.mediaStream)==null?void 0:e.active,trackCount:(t=this.mediaStream)==null?void 0:t.getTracks().length,trackStates:(i=this.mediaStream)==null?void 0:i.getTracks().map(n=>({kind:n.kind,readyState:n.readyState,enabled:n.enabled,muted:n.muted}))}),this._cleanup(),this.isInitialized=!1,this.refCount=0,await new Promise(n=>setTimeout(n,100)),console.log("🔄 [AudioManager] Cleanup complete - starting re-initialization")}this.initPromise=this._doInitialize();try{const s=await this.initPromise;return this.initPromise=null,s}catch(s){throw this.initPromise=null,s}}async _doInitialize(){try{if(console.log("🎤 [AudioManager] Starting initialization"),this.audioContext||(this.audioContext=new(window.AudioContext||window.webkitAudioContext),console.log("✅ [AudioManager] AudioContext creation complete")),this.audioContext.state==="suspended"&&(await this.audioContext.resume(),console.log("✅ [AudioManager] AudioContext resume complete")),!this.mediaStream){const e=this.getPlatformSpecs();console.log(`🔍 [AudioManager] Device detection: ${e.deviceType}`,navigator.userAgent),console.log(`🔍 [AudioManager] Touch support: ${"ontouchend"in document}`),console.log("🔍 [DIAGNOSTIC] Device specs from getPlatformSpecs():",e),console.log("🔍 [DIAGNOSTIC] Current this.config before constraints creation:",this.config);const t={audio:{echoCancellation:this.config.echoCancellation,noiseSuppression:this.config.noiseSuppression,autoGainControl:this.config.autoGainControl,...window.chrome&&{googAutoGainControl:!1,googNoiseSuppression:this.config.noiseSuppression,googEchoCancellation:this.config.echoCancellation,googHighpassFilter:!1,googTypingNoiseDetection:this.config.noiseSuppression,googBeamforming:this.config.noiseSuppression},...navigator.userAgent.includes("Firefox")&&{mozAutoGainControl:!1,mozNoiseSuppression:this.config.noiseSuppression},sampleRate:this.config.sampleRate,channelCount:this.config.channelCount,sampleSize:16,deviceId:{ideal:"default"}}};console.log("🎤 [AudioManager] Getting MediaStream with noiseSuppression settings:",{noiseSuppression:this.config.noiseSuppression,constraints:t}),this.mediaStream=await navigator.mediaDevices.getUserMedia(t),console.log("✅ [AudioManager] MediaStream acquisition complete");const i=this.mediaStream.getAudioTracks()[0];if(i&&typeof i.getConstraints=="function"&&typeof i.getSettings=="function")try{const s=i.getConstraints(),n=i.getSettings();console.log("🔍 [DIAGNOSTIC] Requested noiseSuppression:",this.config.noiseSuppression),console.log("🔍 [DIAGNOSTIC] Actually applied constraints:",s),console.log("🔍 [DIAGNOSTIC] Actual MediaStream settings:",n),n.noiseSuppression!==this.config.noiseSuppression?(console.warn("⚠️ [DIAGNOSTIC] noiseSuppression setting mismatch!"),console.warn(`⚠️ [DIAGNOSTIC] Requested: ${this.config.noiseSuppression}, Applied: ${n.noiseSuppression}`)):console.log("✅ [DIAGNOSTIC] noiseSuppression successfully applied by browser"),n.autoGainControl===!0?(console.warn("⚠️ [DIAGNOSTIC] CRITICAL: Browser ignored autoGainControl: false setting!"),console.warn("⚠️ [DIAGNOSTIC] This explains the gain drift issues - browser is automatically adjusting gain")):console.log("✅ [DIAGNOSTIC] autoGainControl successfully disabled by browser")}catch{console.log("ℹ️ [DIAGNOSTIC] MediaTrack constraint inspection not available in this environment")}else console.log("ℹ️ [DIAGNOSTIC] MediaTrack constraint inspection not supported in this environment")}if(!this.sourceNode){this.sourceNode=this.audioContext.createMediaStreamSource(this.mediaStream),console.log("✅ [AudioManager] SourceNode creation complete");const e=this.mediaStream.getTracks();console.log("🎤 [AudioManager] MediaStream tracks:",e.map(t=>({kind:t.kind,label:t.label,enabled:t.enabled,readyState:t.readyState,muted:t.muted})))}return this.gainNode||(this.gainNode=this.audioContext.createGain(),this.gainNode.gain.setValueAtTime(this.currentSensitivity,this.audioContext.currentTime),this.sourceNode.connect(this.gainNode),console.log(`✅ [AudioManager] GainNode creation complete (sensitivity: ${this.currentSensitivity}x)`)),this.isInitialized=!0,this.refCount++,this.lastError=null,console.log(`🎤 [AudioManager] Initialization complete (refCount: ${this.refCount})`),{audioContext:this.audioContext,mediaStream:this.mediaStream,sourceNode:this.sourceNode}}catch(e){const t=this._createStructuredError(e,"initialization");throw I.logError(t,"AudioManager initialization"),this.lastError=t,this.isInitialized=!1,this._cleanup(),t}}createAnalyser(e,t={}){if(!this.isInitialized||!this.audioContext||!this.sourceNode){const l=new q("AudioManagerが初期化されていません。initialize()メソッドを最初に呼び出してください。",{operation:"createAnalyser",analyserId:e,currentState:{isInitialized:this.isInitialized,hasAudioContext:!!this.audioContext,hasSourceNode:!!this.sourceNode}});throw I.logError(l,"Analyser creation"),l}this.removeAnalyser(e);const{fftSize:i=2048,smoothingTimeConstant:s=.8,minDecibels:n=-90,maxDecibels:o=-10,useFilters:r=!0}=t,a=this.audioContext.createAnalyser();a.fftSize=Math.min(i,2048),a.smoothingTimeConstant=Math.max(s,.7),a.minDecibels=Math.max(n,-80),a.maxDecibels=Math.min(o,-10);let c=this.gainNode||this.sourceNode;if(r){const l=this._createFilterChain();this.filters.set(e,l),c.connect(l.highpass),l.highpass.connect(l.lowpass),l.lowpass.connect(l.notch),l.notch.connect(a),console.log(`🔧 [AudioManager] Filtered Analyser created: ${e}`)}else c.connect(a),console.log(`🔧 [AudioManager] Raw signal Analyser created: ${e}`);return this.analysers.set(e,a),a}_createFilterChain(){if(!this.audioContext){const s=new q("AudioContextが利用できません。ブラウザでオーディオ機能が無効になっているか、デバイスがサポートされていません。",{operation:"_createFilterChain",audioContextState:"null"});throw I.logError(s,"Filter chain creation"),s}const e=this.audioContext.createBiquadFilter();e.type="highpass",e.frequency.setValueAtTime(50,this.audioContext.currentTime),e.Q.setValueAtTime(.7,this.audioContext.currentTime);const t=this.audioContext.createBiquadFilter();t.type="lowpass",t.frequency.setValueAtTime(800,this.audioContext.currentTime),t.Q.setValueAtTime(.7,this.audioContext.currentTime);const i=this.audioContext.createBiquadFilter();return i.type="notch",i.frequency.setValueAtTime(50,this.audioContext.currentTime),i.Q.setValueAtTime(10,this.audioContext.currentTime),{highpass:e,lowpass:t,notch:i}}removeAnalyser(e){if(this.analysers.has(e)&&(this.analysers.get(e).disconnect(),this.analysers.delete(e),console.log(`🗑️ [AudioManager] Analyser removed: ${e}`)),this.filters.has(e)){const t=this.filters.get(e);t.highpass.disconnect(),t.lowpass.disconnect(),t.notch.disconnect(),this.filters.delete(e),console.log(`🗑️ [AudioManager] Filter chain removed: ${e}`)}}async _verifyGainChange(e,t=200,i=20){const s=Date.now();for(;Date.now()-s<t;){if(this.gainNode&&Math.abs(this.gainNode.gain.value-e)<=.1)return!0;await new Promise(n=>setTimeout(n,i))}return!1}setSensitivity(e){var i;const t=Math.max(.1,Math.min(10,e));this.gainNode?(this.gainNode.gain.setValueAtTime(t,((i=this.audioContext)==null?void 0:i.currentTime)||0),this.currentSensitivity=t,(async()=>{var n;if(await this._verifyGainChange(t))console.log(`✅ [AudioManager] Gain setting verified: ${(n=this.gainNode)==null?void 0:n.gain.value.toFixed(1)}x (expected: ${t.toFixed(1)}x)`);else if(this.gainNode){const o=this.gainNode.gain.value;console.warn("⚠️ [AudioManager] ゲイン検証失敗 (機能継続):",{期待値:`${t}x`,実際値:`${o}x`,差分:Math.abs(o-t).toFixed(2),理由:"ブラウザのautoGainControl制御による制限",影響:"音量計算には影響なし（動的SCALING_FACTOR使用）",状態:"正常動作中"})}})(),console.log(`🎤 [AudioManager] Microphone sensitivity updated: ${t.toFixed(1)}x`)):(this.currentSensitivity=t,console.log(`🎤 [AudioManager] Microphone sensitivity set (awaiting initialization): ${t.toFixed(1)}x`))}getSensitivity(){return this.currentSensitivity}mute(){if(!this.mediaStream){console.warn("⚠️ [AudioManager] Cannot mute, MediaStream is not available.");return}this.mediaStream.getAudioTracks().forEach(e=>{e.enabled=!1}),this.isMuted=!0,console.log("🔇 [AudioManager] Microphone muted.")}unmute(){if(!this.mediaStream){console.warn("⚠️ [AudioManager] Cannot unmute, MediaStream is not available.");return}this.mediaStream.getAudioTracks().forEach(e=>{e.enabled=!0}),this.isMuted=!1,console.log("🔊 [AudioManager] Microphone unmuted.")}getIsMuted(){return this.isMuted}stopGainMonitoring(){this.gainMonitorInterval&&(clearInterval(this.gainMonitorInterval),this.gainMonitorInterval=null)}getPlatformSpecs(){const e=E.getDeviceSpecs();return{...e,sensitivity:this.currentSensitivity||e.sensitivity}}release(e=[]){e.forEach(t=>this.removeAnalyser(t)),this.refCount=Math.max(0,this.refCount-1),console.log(`📉 [AudioManager] Reference count decremented: ${this.refCount}`),this.refCount<=0&&(console.log("🧹 [AudioManager] Starting full resource cleanup"),this._cleanup())}forceCleanup(){console.log("🚨 [AudioManager] Force cleanup executed"),this._cleanup()}_cleanup(){var e;console.log("🧹 [AudioManager] Starting cleanup"),this.stopGainMonitoring();for(const t of this.analysers.keys())this.removeAnalyser(t);if(this.mediaStream){const t=this.mediaStream.getTracks();console.log(`🛑 [AudioManager] Stopping MediaStream: ${t.length} tracks`),t.forEach((i,s)=>{try{i.readyState!=="ended"?(i.stop(),console.log(`🛑 [AudioManager] Track ${s} stop complete`)):console.log(`⚠️ [AudioManager] Track ${s} already ended`)}catch(n){const o=new T(`メディアトラック ${s} の停止中にエラーが発生しました: ${n.message}`,N.AUDIO_CONTEXT_ERROR,{operation:"track_cleanup",trackIndex:s,originalError:n.message,trackState:i.readyState});I.logError(o,"Media track cleanup")}}),this.mediaStream=null}if(this.audioContext&&this.audioContext.state!=="closed"){try{this.audioContext.close(),console.log("🛑 [AudioManager] AudioContext close complete")}catch(t){const i=new q(`AudioContextの終了中にエラーが発生しました: ${t.message}`,{operation:"audioContext_cleanup",contextState:(e=this.audioContext)==null?void 0:e.state,originalError:t.message});I.logError(i,"AudioContext cleanup")}this.audioContext=null}this.gainNode&&(this.gainNode.disconnect(),this.gainNode=null),this.sourceNode&&(this.sourceNode.disconnect(),this.sourceNode=null),this.isInitialized=!1,this.refCount=0,this.initPromise=null,this.currentSensitivity=this._getDefaultSensitivity(),console.log("✅ [AudioManager] Cleanup complete")}_createStructuredError(e,t){var i,s;return e.message.includes("Permission denied")||e.message.includes("NotAllowedError")||e.message.includes("permission")?new ge("マイクへのアクセス許可が拒否されました。ブラウザの設定でマイクアクセスを許可してください。",{operation:t,originalError:e.message,deviceSpecs:this.getPlatformSpecs(),userAgent:typeof navigator<"u"?navigator.userAgent:"unknown"}):e.message.includes("AudioContext")||e.message.includes("audio")||e.message.includes("context")?new q("オーディオシステムの初期化に失敗しました。デバイスの音響設定を確認するか、ブラウザを再起動してください。",{operation:t,originalError:e.message,audioContextState:((i=this.audioContext)==null?void 0:i.state)||"none",sampleRate:((s=this.audioContext)==null?void 0:s.sampleRate)||"unknown",deviceSpecs:this.getPlatformSpecs()}):new T(`${t}中に予期しないエラーが発生しました: ${e.message}`,N.AUDIO_CONTEXT_ERROR,{operation:t,originalError:e.message,stack:e.stack,currentState:{isInitialized:this.isInitialized,refCount:this.refCount,hasResources:!!(this.audioContext&&this.mediaStream&&this.sourceNode)}})}getStatus(){var e,t;return{isInitialized:this.isInitialized,refCount:this.refCount,audioContextState:((e=this.audioContext)==null?void 0:e.state)||"none",mediaStreamActive:((t=this.mediaStream)==null?void 0:t.active)||!1,activeAnalysers:Array.from(this.analysers.keys()),activeFilters:Array.from(this.filters.keys()),lastError:this.lastError,currentSensitivity:this.currentSensitivity}}checkMediaStreamHealth(){var s,n,o,r,a,c,l,m;if(!this.mediaStream)return{mediaStreamActive:!1,audioContextState:((s=this.audioContext)==null?void 0:s.state)||"none",trackStates:[],healthy:!1};if(!this.mediaStream.active)return{mediaStreamActive:!1,audioContextState:((n=this.audioContext)==null?void 0:n.state)||"none",trackStates:[],healthy:!1};const e=this.mediaStream.getTracks();if(e.length===0)return{mediaStreamActive:this.mediaStream.active,audioContextState:((o=this.audioContext)==null?void 0:o.state)||"none",trackStates:[],healthy:!1};const t=e.find(u=>u.kind==="audio");if(!t)return{mediaStreamActive:this.mediaStream.active,audioContextState:((r=this.audioContext)==null?void 0:r.state)||"none",trackStates:e.map(u=>({kind:u.kind,enabled:u.enabled,readyState:u.readyState,muted:u.muted})),healthy:!1};const i=e.map(u=>({kind:u.kind,enabled:u.enabled,readyState:u.readyState,muted:u.muted}));return t.readyState==="ended"?{mediaStreamActive:this.mediaStream.active,audioContextState:((a=this.audioContext)==null?void 0:a.state)||"none",trackStates:i,healthy:!1}:t.muted?{mediaStreamActive:this.mediaStream.active,audioContextState:((c=this.audioContext)==null?void 0:c.state)||"none",trackStates:i,healthy:!1}:this.mediaStream.active&&t.readyState!=="live"?{mediaStreamActive:this.mediaStream.active,audioContextState:((l=this.audioContext)==null?void 0:l.state)||"none",trackStates:i,healthy:!1}:{mediaStreamActive:this.mediaStream.active,audioContextState:((m=this.audioContext)==null?void 0:m.state)||"none",trackStates:i,healthy:!0,refCount:this.refCount}}}function ke(h){return h&&h.__esModule&&Object.prototype.hasOwnProperty.call(h,"default")?h.default:h}function x(h){if(this.size=h|0,this.size<=1||this.size&this.size-1)throw new Error("FFT size must be a power of two and bigger than 1");this._csize=h<<1;for(var e=new Array(this.size*2),t=0;t<e.length;t+=2){const a=Math.PI*t/this.size;e[t]=Math.cos(a),e[t+1]=-Math.sin(a)}this.table=e;for(var i=0,s=1;this.size>s;s<<=1)i++;this._width=i%2===0?i-1:i,this._bitrev=new Array(1<<this._width);for(var n=0;n<this._bitrev.length;n++){this._bitrev[n]=0;for(var o=0;o<this._width;o+=2){var r=this._width-o-2;this._bitrev[n]|=(n>>>o&3)<<r}}this._out=null,this._data=null,this._inv=0}var Oe=x;x.prototype.fromComplexArray=function(e,t){for(var i=t||new Array(e.length>>>1),s=0;s<e.length;s+=2)i[s>>>1]=e[s];return i},x.prototype.createComplexArray=function(){const e=new Array(this._csize);for(var t=0;t<e.length;t++)e[t]=0;return e},x.prototype.toComplexArray=function(e,t){for(var i=t||this.createComplexArray(),s=0;s<i.length;s+=2)i[s]=e[s>>>1],i[s+1]=0;return i},x.prototype.completeSpectrum=function(e){for(var t=this._csize,i=t>>>1,s=2;s<i;s+=2)e[t-s]=e[s],e[t-s+1]=-e[s+1]},x.prototype.transform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._transform4(),this._out=null,this._data=null},x.prototype.realTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=0,this._realTransform4(),this._out=null,this._data=null},x.prototype.inverseTransform=function(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._out=e,this._data=t,this._inv=1,this._transform4();for(var i=0;i<e.length;i++)e[i]/=this.size;this._out=null,this._data=null},x.prototype._transform4=function(){var e=this._out,t=this._csize,i=this._width,s=1<<i,n=t/s<<1,o,r,a=this._bitrev;if(n===4)for(o=0,r=0;o<t;o+=n,r++){const p=a[r];this._singleTransform2(o,p,s)}else for(o=0,r=0;o<t;o+=n,r++){const p=a[r];this._singleTransform4(o,p,s)}var c=this._inv?-1:1,l=this.table;for(s>>=2;s>=2;s>>=2){n=t/s<<1;var m=n>>>2;for(o=0;o<t;o+=n)for(var u=o+m,d=o,f=0;d<u;d+=2,f+=s){const p=d,S=p+m,y=S+m,C=y+m,A=e[p],g=e[p+1],M=e[S],R=e[S+1],O=e[y],z=e[y+1],L=e[C],U=e[C+1],B=A,$=g,H=l[f],V=c*l[f+1],G=M*H-R*V,j=M*V+R*H,te=l[2*f],ie=c*l[2*f+1],se=O*te-z*ie,ne=O*ie+z*te,oe=l[3*f],re=c*l[3*f+1],ae=L*oe-U*re,ce=L*re+U*oe,le=B+se,W=$+ne,J=B-se,he=$-ne,ue=G+ae,X=j+ce,Y=c*(G-ae),de=c*(j-ce),me=le+ue,Se=W+X,Ce=le-ue,Me=W-X,be=J+de,Ae=he-Y,we=J-de,Ee=he+Y;e[p]=me,e[p+1]=Se,e[S]=be,e[S+1]=Ae,e[y]=Ce,e[y+1]=Me,e[C]=we,e[C+1]=Ee}}},x.prototype._singleTransform2=function(e,t,i){const s=this._out,n=this._data,o=n[t],r=n[t+1],a=n[t+i],c=n[t+i+1],l=o+a,m=r+c,u=o-a,d=r-c;s[e]=l,s[e+1]=m,s[e+2]=u,s[e+3]=d},x.prototype._singleTransform4=function(e,t,i){const s=this._out,n=this._data,o=this._inv?-1:1,r=i*2,a=i*3,c=n[t],l=n[t+1],m=n[t+i],u=n[t+i+1],d=n[t+r],f=n[t+r+1],p=n[t+a],S=n[t+a+1],y=c+d,C=l+f,A=c-d,g=l-f,M=m+p,R=u+S,O=o*(m-p),z=o*(u-S),L=y+M,U=C+R,B=A+z,$=g-O,H=y-M,V=C-R,G=A-z,j=g+O;s[e]=L,s[e+1]=U,s[e+2]=B,s[e+3]=$,s[e+4]=H,s[e+5]=V,s[e+6]=G,s[e+7]=j},x.prototype._realTransform4=function(){var e=this._out,t=this._csize,i=this._width,s=1<<i,n=t/s<<1,o,r,a=this._bitrev;if(n===4)for(o=0,r=0;o<t;o+=n,r++){const Te=a[r];this._singleRealTransform2(o,Te>>>1,s>>>1)}else for(o=0,r=0;o<t;o+=n,r++){const Te=a[r];this._singleRealTransform4(o,Te>>>1,s>>>1)}var c=this._inv?-1:1,l=this.table;for(s>>=2;s>=2;s>>=2){n=t/s<<1;var m=n>>>1,u=m>>>1,d=u>>>1;for(o=0;o<t;o+=n)for(var f=0,p=0;f<=d;f+=2,p+=s){var S=o+f,y=S+u,C=y+u,A=C+u,g=e[S],M=e[S+1],R=e[y],O=e[y+1],z=e[C],L=e[C+1],U=e[A],B=e[A+1],$=g,H=M,V=l[p],G=c*l[p+1],j=R*V-O*G,te=R*G+O*V,ie=l[2*p],se=c*l[2*p+1],ne=z*ie-L*se,oe=z*se+L*ie,re=l[3*p],ae=c*l[3*p+1],ce=U*re-B*ae,le=U*ae+B*re,W=$+ne,J=H+oe,he=$-ne,ue=H-oe,X=j+ce,Y=te+le,de=c*(j-ce),me=c*(te-le),Se=W+X,Ce=J+Y,Me=he+me,be=ue-de;if(e[S]=Se,e[S+1]=Ce,e[y]=Me,e[y+1]=be,f===0){var Ae=W-X,we=J-Y;e[C]=Ae,e[C+1]=we;continue}if(f!==d){var Ee=he,tt=-ue,it=W,st=-J,nt=-c*me,ot=-c*de,rt=-c*Y,at=-c*X,ct=Ee+nt,lt=tt+ot,ht=it+at,ut=st-rt,qe=o+u-f,_e=o+m-f;e[qe]=ct,e[qe+1]=lt,e[_e]=ht,e[_e+1]=ut}}}},x.prototype._singleRealTransform2=function(e,t,i){const s=this._out,n=this._data,o=n[t],r=n[t+i],a=o+r,c=o-r;s[e]=a,s[e+1]=0,s[e+2]=c,s[e+3]=0},x.prototype._singleRealTransform4=function(e,t,i){const s=this._out,n=this._data,o=this._inv?-1:1,r=i*2,a=i*3,c=n[t],l=n[t+i],m=n[t+r],u=n[t+a],d=c+m,f=c-m,p=l+u,S=o*(l-u),y=d+p,C=f,A=-S,g=d-p,M=f,R=S;s[e]=y,s[e+1]=0,s[e+2]=C,s[e+3]=A,s[e+4]=g,s[e+5]=0,s[e+6]=M,s[e+7]=R};const ze=ke(Oe);class K{constructor(e,t){P(this,"_inputLength");P(this,"_fft");P(this,"_bufferSupplier");P(this,"_paddedInputBuffer");P(this,"_transformBuffer");P(this,"_inverseBuffer");if(e<1)throw new Error("Input length must be at least one");this._inputLength=e,this._fft=new ze($e(2*e)),this._bufferSupplier=t,this._paddedInputBuffer=this._bufferSupplier(this._fft.size),this._transformBuffer=this._bufferSupplier(2*this._fft.size),this._inverseBuffer=this._bufferSupplier(2*this._fft.size)}static forFloat32Array(e){return new K(e,t=>new Float32Array(t))}static forFloat64Array(e){return new K(e,t=>new Float64Array(t))}static forNumberArray(e){return new K(e,t=>Array(t))}get inputLength(){return this._inputLength}autocorrelate(e,t=this._bufferSupplier(e.length)){if(e.length!==this._inputLength)throw new Error(`Input must have length ${this._inputLength} but had length ${e.length}`);for(let s=0;s<e.length;s++)this._paddedInputBuffer[s]=e[s];for(let s=e.length;s<this._paddedInputBuffer.length;s++)this._paddedInputBuffer[s]=0;this._fft.realTransform(this._transformBuffer,this._paddedInputBuffer),this._fft.completeSpectrum(this._transformBuffer);const i=this._transformBuffer;for(let s=0;s<i.length;s+=2)i[s]=i[s]*i[s]+i[s+1]*i[s+1],i[s+1]=0;this._fft.inverseTransform(this._inverseBuffer,this._transformBuffer);for(let s=0;s<e.length;s++)t[s]=this._inverseBuffer[2*s];return t}}function Le(h){const e=[];let t=!1,i=-1/0,s=-1;for(let n=1;n<h.length-1;n++)h[n-1]<=0&&h[n]>0?(t=!0,s=n,i=h[n]):h[n-1]>0&&h[n]<=0?(t=!1,s!==-1&&e.push(s)):t&&h[n]>i&&(i=h[n],s=n);return e}function Ue(h,e){const[t,i,s]=[h-1,h,h+1],[n,o,r]=[e[t],e[i],e[s]],a=n/2-o+r/2,c=-(n/2)*(i+s)+o*(t+s)-r/2*(t+i),l=n*i*s/2-o*t*s+r*t*i/2,m=-c/(2*a),u=a*m*m+c*m+l;return[m,u]}let Be=class fe{constructor(e,t){P(this,"_autocorrelator");P(this,"_nsdfBuffer");P(this,"_clarityThreshold",.9);P(this,"_minVolumeAbsolute",0);P(this,"_maxInputAmplitude",1);this._autocorrelator=new K(e,t),this._nsdfBuffer=t(e)}static forFloat32Array(e){return new fe(e,t=>new Float32Array(t))}static forFloat64Array(e){return new fe(e,t=>new Float64Array(t))}static forNumberArray(e){return new fe(e,t=>Array(t))}get inputLength(){return this._autocorrelator.inputLength}set clarityThreshold(e){if(!Number.isFinite(e)||e<=0||e>1)throw new Error("clarityThreshold must be a number in the range (0, 1]");this._clarityThreshold=e}set minVolumeAbsolute(e){if(!Number.isFinite(e)||e<0||e>this._maxInputAmplitude)throw new Error(`minVolumeAbsolute must be a number in the range [0, ${this._maxInputAmplitude}]`);this._minVolumeAbsolute=e}set minVolumeDecibels(e){if(!Number.isFinite(e)||e>0)throw new Error("minVolumeDecibels must be a number <= 0");this._minVolumeAbsolute=this._maxInputAmplitude*10**(e/10)}set maxInputAmplitude(e){if(!Number.isFinite(e)||e<=0)throw new Error("maxInputAmplitude must be a number > 0");this._maxInputAmplitude=e}findPitch(e,t){if(this._belowMinimumVolume(e))return[0,0];this._nsdf(e);const i=Le(this._nsdfBuffer);if(i.length===0)return[0,0];const s=Math.max(...i.map(a=>this._nsdfBuffer[a])),n=i.find(a=>this._nsdfBuffer[a]>=this._clarityThreshold*s),[o,r]=Ue(n,this._nsdfBuffer);return[t/o,Math.min(r,1)]}_belowMinimumVolume(e){if(this._minVolumeAbsolute===0)return!1;let t=0;for(let i=0;i<e.length;i++)t+=e[i]**2;return Math.sqrt(t/e.length)<this._minVolumeAbsolute}_nsdf(e){this._autocorrelator.autocorrelate(e,this._nsdfBuffer);let t=2*this._nsdfBuffer[0],i;for(i=0;i<this._nsdfBuffer.length&&t>0;i++)this._nsdfBuffer[i]=2*this._nsdfBuffer[i]/t,t-=e[i]**2+e[e.length-i-1]**2;for(;i<this._nsdfBuffer.length;i++)this._nsdfBuffer[i]=0}};function $e(h){return h--,h|=h>>1,h|=h>>2,h|=h>>4,h|=h>>8,h|=h>>16,h++,h}class He{constructor(e=45){this.lastFrameTime=0,this.nextFrameTime=0,this.frameDrops=0,this.MIN_FPS=30,this.MAX_FPS=60,this.OPTIMAL_FPS=45,this.targetFPS=Math.max(this.MIN_FPS,Math.min(e,this.MAX_FPS)),this.frameInterval=1e3/this.targetFPS}shouldProcess(){const e=performance.now();return this.nextFrameTime===0?(this.nextFrameTime=e+this.frameInterval,this.lastFrameTime=e,!0):e>=this.nextFrameTime?(e-this.lastFrameTime>this.frameInterval*1.5&&(this.frameDrops++,this.adjustFrameRate()),this.nextFrameTime=e+this.frameInterval,this.lastFrameTime=e,!0):!1}adjustFrameRate(){if(this.frameDrops>5&&this.targetFPS>this.MIN_FPS){this.targetFPS=Math.max(this.MIN_FPS,this.targetFPS-5),this.frameInterval=1e3/this.targetFPS,this.frameDrops=0;const e=performance.now();this.nextFrameTime=e+this.frameInterval,console.log(`Adjusted FPS to ${this.targetFPS} due to high load`)}}recoverPerformance(){if(this.frameDrops===0&&this.targetFPS<this.OPTIMAL_FPS){this.targetFPS=Math.min(this.OPTIMAL_FPS,this.targetFPS+5),this.frameInterval=1e3/this.targetFPS;const e=performance.now();this.nextFrameTime=e+this.frameInterval}}reset(){this.lastFrameTime=0,this.nextFrameTime=0,this.frameDrops=0,this.targetFPS=this.OPTIMAL_FPS,this.frameInterval=1e3/this.targetFPS}getStats(){return{currentFPS:this.targetFPS,frameDrops:this.frameDrops,latency:this.frameInterval}}}class xe{constructor(e,t={}){this.pitchDetector=null,this.analyser=null,this.rawAnalyser=null,this.animationFrame=null,this.componentState="uninitialized",this.isInitialized=!1,this.isDetecting=!1,this.lastError=null,this.analyserIds=[],this.currentVolume=0,this.rawVolume=0,this.currentFrequency=0,this.detectedNote="--",this.detectedOctave=null,this.pitchClarity=0,this.previousFrequency=0,this.harmonicHistory=[],this.disableHarmonicCorrection=!1,this.callbacks={},this.deviceSpecs=null,this.silenceStartTime=null,this.silenceWarningTimer=null,this.silenceTimeoutTimer=null,this.isSilent=!1,this.hasWarned=!1,this.audioManager=e,this.config={fftSize:4096,smoothing:.9,clarityThreshold:.4,minVolumeAbsolute:t.minVolumeAbsolute??.015,noiseGate:.02,deviceOptimization:!0,...t},this.harmonicConfig={enabled:!0,confidenceThreshold:.7,historyWindow:1e3,frequencyThreshold:.1,...t.harmonicCorrection},this.volumeHistoryConfig={historyLength:10,useTypedArray:!0,...t.volumeHistory},this.disableHarmonicCorrection=!this.harmonicConfig.enabled,this.silenceDetectionConfig={enabled:!1,warningThreshold:15e3,timeoutThreshold:3e4,minVolumeThreshold:.01,...t.silenceDetection},this.frameRateLimiter=new He(45)}setCallbacks(e){this.callbacks={...this.callbacks,...e}}async initialize(){var e,t,i,s,n;try{this.componentState="initializing",this.lastError=null,await this.audioManager.initialize(),this.deviceSpecs=this.audioManager.getPlatformSpecs();const o=`pitch-detector-filtered-${Date.now()}`;this.analyser=this.audioManager.createAnalyser(o,{fftSize:this.config.fftSize,smoothingTimeConstant:this.config.smoothing,minDecibels:-90,maxDecibels:-10,useFilters:!0}),this.analyserIds.push(o);const r=`pitch-detector-raw-${Date.now()}`;this.rawAnalyser=this.audioManager.createAnalyser(r,{fftSize:this.config.fftSize,smoothingTimeConstant:this.config.smoothing,minDecibels:-90,maxDecibels:-10,useFilters:!1}),this.analyserIds.push(r),this.pitchDetector=Be.forFloat32Array(this.analyser.fftSize),typeof process<"u"&&((e=process.env)==null?void 0:e.NODE_ENV)==="development"&&console.log(`[Debug] Pitchyインスタンス作成: ${!!this.pitchDetector}, FFTサイズ: ${this.analyser.fftSize}`),this.componentState="ready",this.isInitialized=!0,(i=(t=this.callbacks).onStateChange)==null||i.call(t,this.componentState)}catch(o){const r=o instanceof T?o:new q("PitchDetector initialization failed",{originalError:o instanceof Error?o.message:String(o),audioContextState:this.audioManager.getStatus().audioContextState,deviceSpecs:this.deviceSpecs});throw console.error("❌ [PitchDetector] Initialization error:",r.toJSON()),this.componentState="error",this.lastError=r,this.isInitialized=!1,(n=(s=this.callbacks).onError)==null||n.call(s,r),o}}startDetection(){var e,t,i,s,n,o;if(this.componentState!=="ready"){const r=new Error(`Cannot start detection: component state is ${this.componentState}`);return(t=(e=this.callbacks).onError)==null||t.call(e,r),!1}if(!this.analyser||!this.pitchDetector){const r=new De("ピッチ検出に必要なコンポーネントが初期化されていません。initialize()メソッドを先に呼び出してください。",{operation:"startDetection",hasAnalyser:!!this.analyser,hasPitchDetector:!!this.pitchDetector,componentState:this.componentState,isInitialized:this.isInitialized});return I.logError(r,"Pitch detection startup"),this.componentState="error",(s=(i=this.callbacks).onError)==null||s.call(i,r),!1}return this.componentState="detecting",this.isDetecting=!0,(o=(n=this.callbacks).onStateChange)==null||o.call(n,this.componentState),this.detectPitch(),!0}stopDetection(){var e,t;this.isDetecting=!1,this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null),this.frameRateLimiter.reset(),this.resetSilenceTracking(),this.componentState==="detecting"&&this.isInitialized&&(this.componentState="ready",(t=(e=this.callbacks).onStateChange)==null||t.call(e,this.componentState))}detectPitch(){var S,y,C,A;const e=performance.now();if(!this.frameRateLimiter.shouldProcess()){this.animationFrame=requestAnimationFrame(()=>this.detectPitch());return}if(!this.isDetecting||!this.analyser||!this.rawAnalyser||!this.pitchDetector||!this.deviceSpecs)return;const t=this.analyser.fftSize,i=new Float32Array(t),s=new Float32Array(this.rawAnalyser.fftSize);this.analyser.getFloatTimeDomainData(i),this.rawAnalyser.getFloatTimeDomainData(s);let n=0;for(let g=0;g<t;g++)n+=Math.abs(i[g]);const r=Math.sqrt(n/t);this.currentVolume=r,this.rawVolume=r;const a=((S=this.analyser.context)==null?void 0:S.sampleRate)||44100;let c=0,l=0;try{const g=this.pitchDetector.findPitch(i,a);c=g[0]||0,l=g[1]||0}catch(g){const M=new De("Pitch detection algorithm failed",{bufferLength:i.length,sampleRate:a,volume:this.currentVolume,originalError:g instanceof Error?g.message:String(g)});if(console.warn("⚠️ [PitchDetector] Pitch detection error (recoverable):",M.toJSON()),Ie(M))c=0,l=0;else{(C=(y=this.callbacks).onError)==null||C.call(y,M);return}}const m=c>=30&&c<=1200;if(c&&l>this.config.clarityThreshold&&this.currentVolume>this.config.minVolumeAbsolute&&m){let g=c;if(!this.disableHarmonicCorrection){const R=Math.min(this.currentVolume/100,1);g=this.correctHarmonic(c,R)}this.currentFrequency=g;const M=this.frequencyToNoteAndOctave(this.currentFrequency);this.detectedNote=M.note,this.detectedOctave=M.octave,this.pitchClarity=l}else this.currentFrequency===0&&this.resetHarmonicHistory(),this.currentFrequency=0,this.detectedNote="--",this.detectedOctave=null,this.pitchClarity=0;this.processSilenceDetection(this.currentVolume);const u={frequency:this.currentFrequency,note:this.detectedNote,octave:this.detectedOctave||void 0,clarity:this.pitchClarity,volume:r,cents:this.currentFrequency>0?this.frequencyToCents(this.currentFrequency):void 0};this.processAudioData(u),this.updateVisuals(u);const f=performance.now()-e;this.frameRateLimiter.getStats().frameDrops===0&&this.frameRateLimiter.recoverPerformance(),typeof process<"u"&&((A=process.env)==null?void 0:A.NODE_ENV)==="development"&&f>16.67&&console.warn(`[PitchDetector] Frame processing took ${f.toFixed(2)}ms (>16.67ms threshold)`),this.animationFrame=requestAnimationFrame(()=>this.detectPitch())}correctHarmonic(e,t){var m,u;if(!this.harmonicConfig.enabled)return this.previousFrequency=e,e;const i=performance.now();if(this.harmonicHistory=this.harmonicHistory.filter(d=>i-d.timestamp<this.harmonicConfig.historyWindow),this.harmonicHistory.push({frequency:e,confidence:t,timestamp:i}),this.harmonicHistory.length<8)return this.previousFrequency=e,e;const s=this.harmonicHistory.reduce((d,f)=>d+f.frequency,0)/this.harmonicHistory.length,n=e*2,o=e/2,r=Math.abs(e-s),a=Math.abs(n-s),c=Math.abs(o-s);let l=e;return c<r&&c<a?(l=o,typeof process<"u"&&((m=process.env)==null||m.NODE_ENV)):a<r&&a<c&&(l=n,typeof process<"u"&&((u=process.env)==null||u.NODE_ENV)),this.previousFrequency=l,l}resetHarmonicHistory(){this.harmonicHistory=[],this.previousFrequency=0}frequencyToNoteAndOctave(e){const t=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];if(e<=0)return{note:"--",octave:null};const s=Math.round(12*Math.log2(e/440)),n=(s+9+120)%12,o=Math.floor((s+9)/12)+4;return{note:t[n],octave:o}}frequencyToCents(e){const i=12*Math.log2(e/440),s=Math.round(i),n=(i-s)*100;return Math.round(n)}processSilenceDetection(e){if(!this.silenceDetectionConfig.enabled)return;const t=Date.now(),i=this.silenceDetectionConfig.minVolumeThreshold||.01;e<i?this.isSilent||(this.isSilent=!0,this.silenceStartTime=t,this.hasWarned=!1,this.silenceDetectionConfig.warningThreshold&&(this.silenceWarningTimer=window.setTimeout(()=>{this.handleSilenceWarning()},this.silenceDetectionConfig.warningThreshold)),this.silenceDetectionConfig.timeoutThreshold&&(this.silenceTimeoutTimer=window.setTimeout(()=>{this.handleSilenceTimeout()},this.silenceDetectionConfig.timeoutThreshold))):this.isSilent&&(this.resetSilenceTracking(),this.silenceDetectionConfig.onSilenceRecovered&&this.silenceDetectionConfig.onSilenceRecovered())}handleSilenceWarning(){if(!this.hasWarned&&this.silenceStartTime){const e=Date.now()-this.silenceStartTime;this.hasWarned=!0,this.silenceDetectionConfig.onSilenceWarning&&this.silenceDetectionConfig.onSilenceWarning(e)}}handleSilenceTimeout(){this.silenceDetectionConfig.onSilenceTimeout&&this.silenceDetectionConfig.onSilenceTimeout(),this.stopDetection(),this.resetSilenceTracking()}resetSilenceTracking(){this.isSilent=!1,this.silenceStartTime=null,this.hasWarned=!1,this.silenceWarningTimer&&(clearTimeout(this.silenceWarningTimer),this.silenceWarningTimer=null),this.silenceTimeoutTimer&&(clearTimeout(this.silenceTimeoutTimer),this.silenceTimeoutTimer=null)}resetDisplayState(){this.currentVolume=0,this.rawVolume=0,this.currentFrequency=0,this.detectedNote="--",this.detectedOctave=null,this.pitchClarity=0,this.resetHarmonicHistory(),this.resetSilenceTracking(),this.forceUIUpdate()}forceUIUpdate(){try{["#volume-bar","#mic-volume-bar","#range-volume-bar","#practice-volume-bar",'[id*="volume-bar"]',".volume-bar"].forEach(n=>{const o=document.querySelector(n);o&&(o instanceof HTMLProgressElement?o.value=0:o.style.width="0%")}),["#volume-text","#mic-volume-text","#range-volume-text","#practice-volume-text",'[id*="volume-text"]',".volume-text"].forEach(n=>{const o=document.querySelector(n);o&&(o.textContent="0.0%")}),["#frequency","#mic-frequency","#range-frequency","#practice-frequency",'[id*="frequency"]',".frequency","#freq-1","#freq-2","#freq-3"].forEach(n=>{const o=document.querySelector(n);o&&(o.textContent="0.0 Hz")}),["#note","#note-display","#mic-note","#range-note","#practice-note",'[id*="note"]',".note",".note-display"].forEach(n=>{const o=document.querySelector(n);o&&(o.textContent="--")})}catch(e){console.warn("⚠️ [PitchDetector] Error in forceUIUpdate:",e.message)}}setHarmonicCorrectionEnabled(e){this.disableHarmonicCorrection=!e,e||this.resetHarmonicHistory()}setSilenceDetectionConfig(e){this.silenceDetectionConfig={...this.silenceDetectionConfig,...e},this.silenceDetectionConfig.enabled||this.resetSilenceTracking()}getSilenceStatus(){const e=this.silenceStartTime&&this.isSilent?Date.now()-this.silenceStartTime:null;return{isEnabled:this.silenceDetectionConfig.enabled||!1,isSilent:this.isSilent,silenceDuration:e,hasWarned:this.hasWarned}}getIsInitialized(){return this.isInitialized&&this.componentState==="ready"}getState(){return{componentState:this.componentState,isInitialized:this.isInitialized,isDetecting:this.isDetecting,lastError:this.lastError,hasRequiredComponents:!!(this.analyser&&this.pitchDetector)}}getCurrentResult(){return{frequency:this.currentFrequency,note:this.detectedNote,clarity:this.pitchClarity,volume:this.currentFrequency>0?this.rawVolume:0}}processAudioData(e){var t,i;(i=(t=this.callbacks).onPitchUpdate)==null||i.call(t,e)}updateVisuals(e){}getPerformanceStats(){return this.frameRateLimiter.getStats()}async reinitialize(){this.cleanup(),await new Promise(e=>setTimeout(e,100)),await this.initialize()}cleanup(){this.stopDetection(),this.analyserIds.length>0&&(this.audioManager.release(this.analyserIds),this.analyserIds=[]),this.componentState="uninitialized",this.isInitialized=!1,this.lastError=null,this.analyser=null,this.rawAnalyser=null,this.pitchDetector=null,this.resetHarmonicHistory()}getLatestResult(){return!this.isDetecting||this.componentState!=="detecting"?null:{frequency:this.currentFrequency,note:this.detectedNote,octave:this.detectedOctave??0,volume:this.currentVolume,rawVolume:this.rawVolume,clarity:this.pitchClarity,timestamp:Date.now()}}destroy(){this.stopDetection(),this.analyserIds.length>0&&(this.audioManager.release(this.analyserIds),this.analyserIds=[]),this.componentState="uninitialized",this.isInitialized=!1,this.lastError=null,this.analyser=null}getStatus(){var e;return{componentState:this.componentState,isInitialized:this.isInitialized,isDetecting:this.isDetecting,isRunning:this.isDetecting,currentVolume:this.currentVolume,rawVolume:this.rawVolume,currentFrequency:this.currentFrequency,detectedNote:this.detectedNote,detectedOctave:this.detectedOctave,currentClarity:this.pitchClarity,lastError:this.lastError,frameRateStatus:(e=this.frameRateLimiter)==null?void 0:e.getStats(),deviceSpecs:this.deviceSpecs,hasRequiredComponents:!!(this.analyser&&this.pitchDetector),harmonicConfig:this.harmonicConfig,volumeHistoryConfig:this.volumeHistoryConfig}}updateHarmonicConfig(e){var t;this.harmonicConfig={...this.harmonicConfig,...e},this.resetHarmonicHistory(),typeof process<"u"&&((t=process.env)==null||t.NODE_ENV)}}class Ve{constructor(e,t={}){this.highpassFilter=null,this.lowpassFilter=null,this.notchFilter=null,this.isConnected=!1,this.inputNode=null,this.outputNode=null,this.audioContext=e,this.config={highpassFreq:50,lowpassFreq:800,notchFreq:50,highpassQ:.7,lowpassQ:.7,notchQ:10,useFilters:!0,...t},this.createFilterChain()}createFilterChain(){if(!this.config.useFilters){console.log("🔇 [NoiseFilter] Filters disabled - bypassing filter chain");return}try{this.highpassFilter=this.audioContext.createBiquadFilter(),this.highpassFilter.type="highpass",this.highpassFilter.frequency.setValueAtTime(this.config.highpassFreq,this.audioContext.currentTime),this.highpassFilter.Q.setValueAtTime(this.config.highpassQ,this.audioContext.currentTime),this.lowpassFilter=this.audioContext.createBiquadFilter(),this.lowpassFilter.type="lowpass",this.lowpassFilter.frequency.setValueAtTime(this.config.lowpassFreq,this.audioContext.currentTime),this.lowpassFilter.Q.setValueAtTime(this.config.lowpassQ,this.audioContext.currentTime),this.notchFilter=this.audioContext.createBiquadFilter(),this.notchFilter.type="notch",this.notchFilter.frequency.setValueAtTime(this.config.notchFreq,this.audioContext.currentTime),this.notchFilter.Q.setValueAtTime(this.config.notchQ,this.audioContext.currentTime),console.log("✅ [NoiseFilter] 3-stage filter chain created",{highpass:`${this.config.highpassFreq}Hz (Q=${this.config.highpassQ})`,lowpass:`${this.config.lowpassFreq}Hz (Q=${this.config.lowpassQ})`,notch:`${this.config.notchFreq}Hz (Q=${this.config.notchQ})`})}catch(e){const t=new q("ノイズフィルターチェーンの初期化に失敗しました。オーディオシステムのサポート状況を確認してください。",{operation:"createFilterChain",originalError:e.message,filterConfig:this.config,audioContextState:this.audioContext.state,sampleRate:this.audioContext.sampleRate});throw I.logError(t,"NoiseFilter initialization"),console.error("❌ [NoiseFilter] Failed to create filter chain:",t.toJSON()),t}}connect(e,t){if(!this.config.useFilters)return t&&e.connect(t),e;if(!this.highpassFilter||!this.lowpassFilter||!this.notchFilter){const i=new T("ノイズフィルターが正しく初期化されていません。コンストラクタでuseFilters: trueで初期化してください。",N.AUDIO_CONTEXT_ERROR,{operation:"connect",useFilters:this.config.useFilters,hasHighpassFilter:!!this.highpassFilter,hasLowpassFilter:!!this.lowpassFilter,hasNotchFilter:!!this.notchFilter});throw I.logError(i,"NoiseFilter connection"),i}try{return this.disconnect(),this.inputNode=e,this.outputNode=t||null,e.connect(this.highpassFilter),this.highpassFilter.connect(this.lowpassFilter),this.lowpassFilter.connect(this.notchFilter),t&&this.notchFilter.connect(t),this.isConnected=!0,console.log("🔗 [NoiseFilter] Filter chain connected"),this.notchFilter}catch(i){const s=new q("ノイズフィルターの接続に失敗しました。オーディオノードの接続状態を確認してください。",{operation:"connect",originalError:i.message,hasInputNode:!!this.inputNode,hasOutputNode:!!this.outputNode,isConnected:this.isConnected,filterConfig:this.config});throw I.logError(s,"NoiseFilter audio connection"),console.error("❌ [NoiseFilter] Connection failed:",s.toJSON()),s}}disconnect(){try{this.highpassFilter&&this.highpassFilter.disconnect(),this.lowpassFilter&&this.lowpassFilter.disconnect(),this.notchFilter&&this.notchFilter.disconnect(),this.isConnected=!1,this.inputNode=null,this.outputNode=null,console.log("🔌 [NoiseFilter] Filter chain disconnected")}catch(e){console.warn("⚠️ [NoiseFilter] Disconnect warning:",e)}}updateFrequencies(e){const t=this.audioContext.currentTime;try{e.highpassFreq!==void 0&&this.highpassFilter&&(this.highpassFilter.frequency.setValueAtTime(e.highpassFreq,t),this.config.highpassFreq=e.highpassFreq),e.lowpassFreq!==void 0&&this.lowpassFilter&&(this.lowpassFilter.frequency.setValueAtTime(e.lowpassFreq,t),this.config.lowpassFreq=e.lowpassFreq),e.notchFreq!==void 0&&this.notchFilter&&(this.notchFilter.frequency.setValueAtTime(e.notchFreq,t),this.config.notchFreq=e.notchFreq),e.highpassQ!==void 0&&this.highpassFilter&&(this.highpassFilter.Q.setValueAtTime(e.highpassQ,t),this.config.highpassQ=e.highpassQ),e.lowpassQ!==void 0&&this.lowpassFilter&&(this.lowpassFilter.Q.setValueAtTime(e.lowpassQ,t),this.config.lowpassQ=e.lowpassQ),e.notchQ!==void 0&&this.notchFilter&&(this.notchFilter.Q.setValueAtTime(e.notchQ,t),this.config.notchQ=e.notchQ),console.log("🔧 [NoiseFilter] Filter parameters updated:",e)}catch(i){const s=new T("フィルターパラメータの更新に失敗しました。指定した値が範囲外であるか、フィルターが無効になっている可能性があります。",N.INVALID_SAMPLE_RATE,{operation:"updateFrequencies",originalError:i.message,requestedParams:e,currentConfig:this.config,audioContextTime:this.audioContext.currentTime});throw I.logError(s,"NoiseFilter parameter update"),console.error("❌ [NoiseFilter] Parameter update failed:",s.toJSON()),s}}setEnabled(e){if(e!==this.config.useFilters){if(this.config.useFilters=e,this.isConnected&&this.inputNode){const t=this.outputNode;this.disconnect(),e&&(this.highpassFilter||this.createFilterChain()),this.connect(this.inputNode,t||void 0)}console.log(`🔘 [NoiseFilter] Filters ${e?"enabled":"disabled"}`)}}getFilterResponse(e){if(!this.config.useFilters||!this.highpassFilter||!this.lowpassFilter||!this.notchFilter)return{magnitude:1,phase:0};try{const t=new Float32Array([e]),i=new Float32Array(1),s=new Float32Array(1);this.highpassFilter.getFrequencyResponse(t,i,s);const n=i[0];this.lowpassFilter.getFrequencyResponse(t,i,s);const o=i[0];this.notchFilter.getFrequencyResponse(t,i,s);const r=i[0];return{magnitude:n*o*r,phase:s[0]}}catch(t){const i=new T("フィルター応答の計算に失敗しました。デフォルト値を返します。",N.PROCESSING_TIMEOUT,{operation:"getFilterResponse",frequency:e,originalError:t.message,useFilters:this.config.useFilters});return I.logError(i,"Filter response calculation"),console.warn("⚠️ [NoiseFilter] Filter response calculation failed:",i.toJSON()),{magnitude:1,phase:0}}}getConfig(){return{...this.config}}getStatus(){return{isConnected:this.isConnected,useFilters:this.config.useFilters,hasFilters:!!(this.highpassFilter&&this.lowpassFilter&&this.notchFilter),filterTypes:this.config.useFilters?["highpass","lowpass","notch"]:[],frequencies:{highpass:this.config.highpassFreq,lowpass:this.config.lowpassFreq,notch:this.config.notchFreq},qFactors:{highpass:this.config.highpassQ,lowpass:this.config.lowpassQ,notch:this.config.notchQ}}}getOutputNode(){return!this.config.useFilters||!this.notchFilter?this.inputNode||null:this.notchFilter}destroy(){console.log("🗑️ [NoiseFilter] Destroying filter chain"),this.disconnect(),this.highpassFilter=null,this.lowpassFilter=null,this.notchFilter=null,console.log("✅ [NoiseFilter] Cleanup complete")}static getPresetConfig(e){switch(e){case"voice":return{highpassFreq:80,lowpassFreq:800,notchFreq:60,highpassQ:.7,lowpassQ:.7,notchQ:10,useFilters:!0};case"instrument":return{highpassFreq:40,lowpassFreq:2e3,notchFreq:60,highpassQ:.5,lowpassQ:.5,notchQ:8,useFilters:!0};case"wide":return{highpassFreq:20,lowpassFreq:5e3,notchFreq:60,highpassQ:.3,lowpassQ:.3,notchQ:5,useFilters:!0};case"minimal":return{highpassFreq:60,lowpassFreq:8e3,notchFreq:60,highpassQ:.1,lowpassQ:.1,notchQ:3,useFilters:!0};default:return{useFilters:!1}}}}var Z=(h=>(h[h.DEBUG=0]="DEBUG",h[h.INFO=1]="INFO",h[h.WARN=2]="WARN",h[h.ERROR=3]="ERROR",h[h.SILENT=4]="SILENT",h))(Z||{});class Q{constructor(e=1,t="",i={}){this.listeners=[],this.level=e,this.prefix=t,this.context=i}setLevel(e){this.level=e}addListener(e){this.listeners.push(e)}removeListener(e){const t=this.listeners.indexOf(e);t!==-1&&this.listeners.splice(t,1)}child(e,t={}){const i=this.prefix?`${this.prefix}:${e}`:e,s={...this.context,...t},n=new Q(this.level,i,s);return n.addListener(o=>{this.listeners.forEach(r=>r(o))}),n}debug(e,t){this.log(0,e,t)}info(e,t){this.log(1,e,t)}warn(e,t){this.log(2,e,t)}error(e,t,i){const s=t?{errorName:t.name,errorMessage:t.message,stack:t.stack,...i}:i;this.log(3,e,s)}log(e,t,i){if(e<this.level)return;const s={level:e,message:t,context:{...this.context,...i},timestamp:Date.now(),prefix:this.prefix};this.logToConsole(s),this.listeners.forEach(n=>{try{n(s)}catch(o){console.error("Logger listener error:",o)}})}logToConsole(e){const t=new Date(e.timestamp).toISOString(),i=Z[e.level],s=e.prefix?`[${e.prefix}]`:"",n=`${t} ${i} ${s} ${e.message}`,o=this.getConsoleMethod(e.level);e.context&&Object.keys(e.context).length>0?o(n,e.context):o(n)}getConsoleMethod(e){switch(e){case 0:return console.debug;case 1:return console.info;case 2:return console.warn;case 3:return console.error;default:return console.log}}getLevel(){return this.level}isLevelEnabled(e){return e>=this.level}}const ee=new Q(1,"PitchPro"),Ge=(h,e)=>ee.debug(h,e),je=(h,e)=>ee.info(h,e),Qe=(h,e)=>ee.warn(h,e),We=(h,e,t)=>ee.error(h,e,t);class Ne{constructor(e,t={}){if(this.refCount=0,this.isActive=!1,this.lastHealthCheck=null,this.healthCheckInterval=null,this.idleCheckInterval=null,this.visibilityCheckInterval=null,this.lastActivityTime=Date.now(),this.isPageVisible=!0,this.isUserActive=!0,this.autoRecoveryAttempts=0,this.eventListeners=new Map,this.callbacks={},this.audioManager=e,this.config={healthCheckIntervalMs:t.healthCheckIntervalMs??5e3,idleTimeoutMs:t.idleTimeoutMs??3e5,autoRecoveryDelayMs:t.autoRecoveryDelayMs??2e3,maxIdleTimeBeforeRelease:t.maxIdleTimeBeforeRelease??6e5,maxAutoRecoveryAttempts:t.maxAutoRecoveryAttempts??3,logLevel:t.logLevel??Z.INFO,enableDetailedLogging:t.enableDetailedLogging??!1},this.logger=new Q(this.config.logLevel,"MicrophoneLifecycleManager",{component:"MicrophoneLifecycleManager",enableDetailedLogging:this.config.enableDetailedLogging}),typeof window>"u"){this.logger.info("SSR environment detected - skipping initialization");return}this.logger.debug("Initializing MicrophoneLifecycleManager",{config:this.config}),this.setupEventListeners()}setCallbacks(e){this.callbacks={...this.callbacks,...e}}removeAllTrackedEventListeners(){this.logger.debug("Removing all tracked event listeners",{count:this.eventListeners.size}),this.eventListeners.forEach(({target:e,listener:t,eventName:i},s)=>{try{e.removeEventListener(i,t)}catch(n){this.logger.warn("Failed to remove event listener",{eventName:i,key:s,error:n.message})}}),this.eventListeners.clear(),this.logger.debug("All event listeners removed")}async acquire(){var e,t,i,s;this.refCount++,console.log(`🎤 [MicrophoneLifecycleManager] Acquiring resources (refCount: ${this.refCount})`);try{if(!this.isActive){const o=await this.audioManager.initialize();return this.isActive=!0,this.lastActivityTime=Date.now(),this.autoRecoveryAttempts=0,this.startHealthMonitoring(),this.startIdleMonitoring(),this.startVisibilityMonitoring(),(t=(e=this.callbacks).onStateChange)==null||t.call(e,"active"),console.log("🟢 [MicrophoneLifecycleManager] Microphone activated"),o}return this.updateActivity(),await this.audioManager.initialize()}catch(n){throw console.error("❌ [MicrophoneLifecycleManager] Failed to acquire resources:",n),this.refCount=Math.max(0,this.refCount-1),(s=(i=this.callbacks).onError)==null||s.call(i,n),n}}release(){var e,t;this.refCount=Math.max(0,this.refCount-1),console.log(`📉 [MicrophoneLifecycleManager] Releasing resources (refCount: ${this.refCount})`),this.refCount<=0&&(this.stopAllMonitoring(),this.audioManager.release(),this.isActive=!1,(t=(e=this.callbacks).onStateChange)==null||t.call(e,"inactive"),console.log("🔴 [MicrophoneLifecycleManager] Microphone deactivated"))}forceRelease(){var e,t;console.log("🚨 [MicrophoneLifecycleManager] Force release - cleaning up all resources"),this.refCount=0,this.stopAllMonitoring(),this.audioManager.forceCleanup(),this.isActive=!1,(t=(e=this.callbacks).onStateChange)==null||t.call(e,"inactive")}setupEventListeners(){const e=()=>{this.isPageVisible=!document.hidden,this.handleVisibilityChange()},t=()=>{this.updateActivity()},i=()=>{this.forceRelease()},s=()=>{this.isPageVisible=!0,this.handleVisibilityChange()},n=()=>{this.isPageVisible=!1,this.handleVisibilityChange()};document.addEventListener("visibilitychange",e),document.addEventListener("mousemove",t),document.addEventListener("keydown",t),document.addEventListener("click",t),document.addEventListener("scroll",t),document.addEventListener("touchstart",t),window.addEventListener("beforeunload",i),window.addEventListener("unload",i),window.addEventListener("focus",s),window.addEventListener("blur",n),this.eventListeners.set("visibilitychange",{target:document,listener:e,eventName:"visibilitychange"}),this.eventListeners.set("mousemove",{target:document,listener:t,eventName:"mousemove"}),this.eventListeners.set("keydown",{target:document,listener:t,eventName:"keydown"}),this.eventListeners.set("click",{target:document,listener:t,eventName:"click"}),this.eventListeners.set("scroll",{target:document,listener:t,eventName:"scroll"}),this.eventListeners.set("touchstart",{target:document,listener:t,eventName:"touchstart"}),this.eventListeners.set("beforeunload",{target:window,listener:i,eventName:"beforeunload"}),this.eventListeners.set("unload",{target:window,listener:i,eventName:"unload"}),this.eventListeners.set("focus",{target:window,listener:s,eventName:"focus"}),this.eventListeners.set("blur",{target:window,listener:n,eventName:"blur"}),console.log("👂 [MicrophoneLifecycleManager] Event listeners setup complete")}handleVisibilityChange(){this.isActive&&(this.isPageVisible?(console.log("👁️ [MicrophoneLifecycleManager] Page became visible - resuming monitoring"),this.updateActivity(),setTimeout(()=>{this.performHealthCheck()},1e3)):(console.log("🙈 [MicrophoneLifecycleManager] Page became hidden - reducing monitoring frequency"),setTimeout(()=>{!this.isPageVisible&&this.isActive&&Date.now()-this.lastActivityTime>this.config.maxIdleTimeBeforeRelease&&(console.log("⏰ [MicrophoneLifecycleManager] Long inactivity detected - releasing resources"),this.forceRelease())},this.config.maxIdleTimeBeforeRelease)))}updateActivity(){this.lastActivityTime=Date.now(),this.isUserActive=!0}startHealthMonitoring(){this.healthCheckInterval&&clearInterval(this.healthCheckInterval),this.healthCheckInterval=window.setInterval(()=>{this.performHealthCheck()},this.config.healthCheckIntervalMs),console.log(`💓 [MicrophoneLifecycleManager] Health monitoring started (${this.config.healthCheckIntervalMs}ms interval)`)}startIdleMonitoring(){this.idleCheckInterval&&clearInterval(this.idleCheckInterval),this.idleCheckInterval=window.setInterval(()=>{this.checkIdleTimeout()},3e4),console.log("😴 [MicrophoneLifecycleManager] Idle monitoring started")}startVisibilityMonitoring(){this.visibilityCheckInterval&&clearInterval(this.visibilityCheckInterval),this.visibilityCheckInterval=window.setInterval(()=>{this.isPageVisible&&this.isActive&&this.performHealthCheck()},1e4),console.log("👁️ [MicrophoneLifecycleManager] Visibility monitoring started")}async performHealthCheck(){var e,t,i,s;if(this.isActive)try{const n=this.audioManager.checkMediaStreamHealth();if(this.lastHealthCheck=n,n.healthy)this.autoRecoveryAttempts>0&&(this.logger.info("Microphone health restored, resetting recovery attempts",{previousAttempts:this.autoRecoveryAttempts,healthStatus:n}),this.autoRecoveryAttempts=0);else if(this.logger.warn("Unhealthy microphone state detected",{healthStatus:n}),this.autoRecoveryAttempts<this.config.maxAutoRecoveryAttempts)this.autoRecoveryAttempts++,this.logger.warn("Attempting automatic recovery",{attempt:this.autoRecoveryAttempts,maxAttempts:this.config.maxAutoRecoveryAttempts,healthStatus:n}),setTimeout(async()=>{var o,r;try{await this.audioManager.initialize(),this.logger.info("Automatic recovery successful",{attempt:this.autoRecoveryAttempts,totalAttempts:this.autoRecoveryAttempts}),this.autoRecoveryAttempts=0,this.dispatchCustomEvent("pitchpro:lifecycle:autoRecoverySuccess",{})}catch(a){this.logger.error("Automatic recovery failed",a,{attempt:this.autoRecoveryAttempts,maxAttempts:this.config.maxAutoRecoveryAttempts}),(r=(o=this.callbacks).onError)==null||r.call(o,a),this.dispatchCustomEvent("pitchpro:lifecycle:autoRecoveryFailed",{error:a})}},this.config.autoRecoveryDelayMs);else{const o=new Fe(`Microphone health check failed after ${this.autoRecoveryAttempts} recovery attempts. Monitoring stopped to prevent infinite error loop.`,n,this.autoRecoveryAttempts,{operation:"performHealthCheck",maxAttemptsReached:!0,monitoringStopped:!0});this.logger.error("Maximum recovery attempts reached - stopping health checks",o,{attempts:this.autoRecoveryAttempts,maxAttempts:this.config.maxAutoRecoveryAttempts,healthStatus:n}),this.stopAllMonitoring(),this.isActive=!1,(t=(e=this.callbacks).onError)==null||t.call(e,o),this.dispatchCustomEvent("pitchpro:lifecycle:maxRecoveryAttemptsReached",{attempts:this.autoRecoveryAttempts,lastHealthStatus:n})}}catch(n){this.logger.error("Health check failed",n,{operation:"performHealthCheck",isActive:this.isActive,attempts:this.autoRecoveryAttempts}),(s=(i=this.callbacks).onError)==null||s.call(i,n)}}checkIdleTimeout(){if(!this.isActive)return;const e=Date.now()-this.lastActivityTime;e>this.config.idleTimeoutMs&&this.isUserActive&&(console.log("😴 [MicrophoneLifecycleManager] User idle detected"),this.isUserActive=!1),e>this.config.maxIdleTimeBeforeRelease&&(console.log("⏰ [MicrophoneLifecycleManager] Extreme idle detected - auto-releasing resources"),this.forceRelease())}stopAllMonitoring(){this.healthCheckInterval&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null),this.idleCheckInterval&&(clearInterval(this.idleCheckInterval),this.idleCheckInterval=null),this.visibilityCheckInterval&&(clearInterval(this.visibilityCheckInterval),this.visibilityCheckInterval=null),console.log("⏹️ [MicrophoneLifecycleManager] All monitoring stopped")}dispatchCustomEvent(e,t){if(typeof window>"u")return;const i=new CustomEvent(e,{detail:t});window.dispatchEvent(i)}getStatus(){return{refCount:this.refCount,isActive:this.isActive,isPageVisible:this.isPageVisible,isUserActive:this.isUserActive,lastActivityTime:this.lastActivityTime,timeSinceActivity:Date.now()-this.lastActivityTime,autoRecoveryAttempts:this.autoRecoveryAttempts,lastHealthCheck:this.lastHealthCheck,audioManagerStatus:this.audioManager.getStatus()}}updateConfig(e){this.config={...this.config,...e},this.isActive&&(this.stopAllMonitoring(),this.startHealthMonitoring(),this.startIdleMonitoring(),this.startVisibilityMonitoring()),console.log("🔧 [MicrophoneLifecycleManager] Configuration updated:",e)}resetRecoveryAttempts(){const e=this.autoRecoveryAttempts;this.autoRecoveryAttempts=0,this.logger.info("Recovery attempts reset manually",{previousAttempts:e,refCount:this.refCount,wasActive:this.isActive,hasMonitoring:!!this.healthCheckInterval}),!this.healthCheckInterval&&this.refCount>0&&(this.logger.info("Restarting monitoring after manual reset",{refCount:this.refCount,reason:"Manual recovery reset with active references"}),this.isActive=!0,this.startHealthMonitoring(),this.startIdleMonitoring(),this.startVisibilityMonitoring(),this.dispatchCustomEvent("pitchpro:lifecycle:monitoringRestarted",{reason:"Manual recovery reset",refCount:this.refCount}))}destroy(){this.logger.info("Destroying MicrophoneLifecycleManager",{refCount:this.refCount,isActive:this.isActive,autoRecoveryAttempts:this.autoRecoveryAttempts,listenerCount:this.eventListeners.size}),this.stopAllMonitoring(),this.forceRelease(),this.removeAllTrackedEventListeners(),this.isActive=!1,this.refCount=0,this.autoRecoveryAttempts=0,this.logger.info("MicrophoneLifecycleManager cleanup complete")}}class Re{constructor(){if(this.container=null,this.notifications=new Map,this.notificationCounter=0,this.defaultDuration=5e3,this.maxNotifications=0,this.cssClasses={container:"pitchpro-notifications",notification:"pitchpro-notification",title:"pitchpro-notification-title",message:"pitchpro-notification-message",details:"pitchpro-notification-details",solution:"pitchpro-notification-solution",closeButton:"pitchpro-notification-close",error:"pitchpro-notification-error",warning:"pitchpro-notification-warning",success:"pitchpro-notification-success",info:"pitchpro-notification-info",high:"pitchpro-notification-priority-high",medium:"pitchpro-notification-priority-medium",low:"pitchpro-notification-priority-low"},typeof window>"u"){console.log("🔇 [ErrorNotificationSystem] SSR environment detected - skipping initialization");return}this.initializeContainer(),this.injectCSS()}initializeContainer(){let e=document.querySelector(`.${this.cssClasses.container}`);e?(this.container=e,console.log("📋 [ErrorNotificationSystem] Using existing notification container")):(this.container=document.createElement("div"),this.container.className=this.cssClasses.container,this.container.setAttribute("role","alert"),this.container.setAttribute("aria-live","polite"),document.body.appendChild(this.container),console.log("📋 [ErrorNotificationSystem] Notification container created"))}injectCSS(){if(document.querySelector("#pitchpro-notifications-styles"))return;const e=`
      .${this.cssClasses.container} {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 10000;
        max-width: 400px;
        pointer-events: none;
      }

      .${this.cssClasses.notification} {
        background: white;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        margin-bottom: 12px;
        padding: 16px;
        pointer-events: auto;
        position: relative;
        animation: slideIn 0.3s ease-out;
        transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
      }

      .${this.cssClasses.notification}.removing {
        opacity: 0;
        transform: translateX(100%);
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateX(100%);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      .${this.cssClasses.notification}.${this.cssClasses.error} {
        border-left: 4px solid #ef4444;
      }

      .${this.cssClasses.notification}.${this.cssClasses.warning} {
        border-left: 4px solid #f59e0b;
      }

      .${this.cssClasses.notification}.${this.cssClasses.success} {
        border-left: 4px solid #10b981;
      }

      .${this.cssClasses.notification}.${this.cssClasses.info} {
        border-left: 4px solid #3b82f6;
      }

      .${this.cssClasses.title} {
        font-weight: 600;
        font-size: 14px;
        color: #1f2937;
        margin-bottom: 4px;
        padding-right: 24px;
      }

      .${this.cssClasses.message} {
        font-size: 13px;
        color: #4b5563;
        margin-bottom: 8px;
        line-height: 1.4;
      }

      .${this.cssClasses.details} {
        font-size: 12px;
        color: #6b7280;
        margin-bottom: 8px;
        padding-left: 12px;
        border-left: 2px solid #e5e7eb;
      }

      .${this.cssClasses.details} li {
        margin-bottom: 2px;
      }

      .${this.cssClasses.solution} {
        font-size: 12px;
        color: #059669;
        background: #ecfdf5;
        border: 1px solid #a7f3d0;
        border-radius: 4px;
        padding: 8px;
        margin-top: 8px;
      }

      .${this.cssClasses.closeButton} {
        position: absolute;
        top: 12px;
        right: 12px;
        background: none;
        border: none;
        font-size: 18px;
        color: #9ca3af;
        cursor: pointer;
        padding: 0;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .${this.cssClasses.closeButton}:hover {
        color: #6b7280;
      }

      .${this.cssClasses.notification}.${this.cssClasses.high} {
        border-width: 2px;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      }

      @media (max-width: 640px) {
        .${this.cssClasses.container} {
          top: 10px;
          left: 10px;
          right: 10px;
          max-width: none;
        }
      }
    `,t=document.createElement("style");t.id="pitchpro-notifications-styles",t.textContent=e,document.head.appendChild(t)}show(e){if(!this.container)return console.warn("⚠️ [ErrorNotificationSystem] Container not available - cannot show notification"),"";const t=`notification-${++this.notificationCounter}`,i=this.createNotificationElement(t,e);if(this.notifications.size>=this.maxNotifications){const s=Array.from(this.notifications.keys())[0];this.remove(s)}if(this.container.appendChild(i),this.notifications.set(t,i),e.autoHide!==!1){const s=e.duration||this.defaultDuration;setTimeout(()=>{this.remove(t)},s)}return console.log(`📢 [ErrorNotificationSystem] Notification shown: ${e.type} - ${e.title}`),t}createNotificationElement(e,t){const i=document.createElement("div");i.className=[this.cssClasses.notification,this.cssClasses[t.type],t.priority?this.cssClasses[t.priority]:""].filter(Boolean).join(" "),i["data-notification-id"]=e;const s=document.createElement("div");s.className=this.cssClasses.title,s.textContent=t.title,i.appendChild(s);const n=document.createElement("div");if(n.className=this.cssClasses.message,n.textContent=t.message,i.appendChild(n),t.details&&t.details.length>0){const r=document.createElement("div");r.className=this.cssClasses.details;const a=document.createElement("ul");a.style.margin="0",a.style.paddingLeft="16px",t.details.forEach(c=>{const l=document.createElement("li");l.textContent=c,a.appendChild(l)}),r.appendChild(a),i.appendChild(r)}if(t.solution){const r=document.createElement("div");r.className=this.cssClasses.solution,r.textContent=t.solution,i.appendChild(r)}const o=document.createElement("button");return o.className=this.cssClasses.closeButton,o.innerHTML="×",o.setAttribute("aria-label","Close notification"),o.addEventListener("click",()=>{this.remove(e)}),i.appendChild(o),i}remove(e){const t=this.notifications.get(e);t&&(t.classList.add("removing"),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t),this.notifications.delete(e)},300),console.log(`🗑️ [ErrorNotificationSystem] Notification removed: ${e}`))}clearAll(){Array.from(this.notifications.keys()).forEach(t=>this.remove(t)),console.log("🧹 [ErrorNotificationSystem] All notifications cleared")}showError(e,t,i={}){return this.show({type:"error",title:e,message:t,priority:"high",autoHide:!1,...i})}showWarning(e,t,i={}){return this.show({type:"warning",title:e,message:t,priority:"medium",duration:8e3,...i})}showSuccess(e,t,i={}){return this.show({type:"success",title:e,message:t,priority:"low",duration:3e3,...i})}showInfo(e,t,i={}){return this.show({type:"info",title:e,message:t,priority:"low",...i})}showMicrophoneError(e,t){return this.showError("マイクロフォンエラー",`マイクの初期化に失敗しました: ${e.message}`,{details:t?[`発生箇所: ${t}`,`エラー詳細: ${e.name}`]:[`エラー詳細: ${e.name}`],solution:"マイクの設定を確認し、ブラウザにマイクアクセスを許可してください。",priority:"high"})}showAudioContextError(e){return this.showError("オーディオシステムエラー",`音声処理システムの初期化に失敗しました: ${e.message}`,{details:["ブラウザがWeb Audio APIに対応していない可能性があります","または、音声デバイスに問題が発生しています"],solution:"ブラウザを最新版に更新するか、別のブラウザで試してください。",priority:"high"})}showLoadingError(e,t){return this.showError("読み込みエラー",`${e}の読み込みに失敗しました: ${t.message}`,{details:["ネットワーク接続を確認してください","ブラウザのキャッシュをクリアしてみてください"],solution:"ページを再読み込みするか、しばらく待ってから再度お試しください。",priority:"medium"})}getNotificationCount(){return this.notifications.size}getNotificationIds(){return Array.from(this.notifications.keys())}hasNotification(e){return this.notifications.has(e)}updateConfig(e){e.defaultDuration!==void 0&&(this.defaultDuration=e.defaultDuration),e.maxNotifications!==void 0&&(this.maxNotifications=e.maxNotifications),console.log("🔧 [ErrorNotificationSystem] Configuration updated:",e)}destroy(){console.log("🗑️ [ErrorNotificationSystem] Destroying notification system"),this.clearAll(),this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container);const e=document.querySelector("#pitchpro-notifications-styles");e&&e.parentNode&&e.parentNode.removeChild(e),this.container=null,this.notifications.clear(),console.log("✅ [ErrorNotificationSystem] Cleanup complete")}}class Pe{constructor(e={}){var t,i,s,n,o,r,a,c,l,m,u;this.currentState="uninitialized",this.isPermissionGranted=!1,this.lastError=null,this.eventCallbacks={},this.deviceSpecs=null,this.pitchDetector=null,this.audioDetectionComponent=null,this.config={audioManager:{sampleRate:((t=e.audioManager)==null?void 0:t.sampleRate)??44100,echoCancellation:((i=e.audioManager)==null?void 0:i.echoCancellation)??!1,noiseSuppression:((s=e.audioManager)==null?void 0:s.noiseSuppression)??!1,autoGainControl:((n=e.audioManager)==null?void 0:n.autoGainControl)??!1},lifecycle:e.lifecycle??{},audioConstraints:{echoCancellation:((o=e.audioConstraints)==null?void 0:o.echoCancellation)??!1,noiseSuppression:((r=e.audioConstraints)==null?void 0:r.noiseSuppression)??!1,autoGainControl:((a=e.audioConstraints)==null?void 0:a.autoGainControl)??!1},notifications:{enabled:((c=e.notifications)==null?void 0:c.enabled)??!0,position:((l=e.notifications)==null?void 0:l.position)??"top-right"},logging:{level:((m=e.logging)==null?void 0:m.level)??Z.INFO,prefix:((u=e.logging)==null?void 0:u.prefix)??"MicrophoneController"}},this.logger=new Q(this.config.logging.level,this.config.logging.prefix,{component:"MicrophoneController"}),this.logger.debug("Initializing MicrophoneController",{config:this.config}),this.audioManager=new pe(this.config.audioManager),this.lifecycleManager=new Ne(this.audioManager,this.config.lifecycle),this.errorSystem=this.config.notifications.enabled?new Re:null,this.setupEventHandlers(),this.detectDevice()}setCallbacks(e){this.eventCallbacks={...this.eventCallbacks,...e}}resetRecoveryAttempts(){this.logger.info("Resetting recovery attempts via public API");try{this.lifecycleManager.resetRecoveryAttempts(),this.logger.info("Recovery attempts reset successfully")}catch(e){throw this.logger.error("Failed to reset recovery attempts",e),e}}isActive(){return this.currentState==="active"}isReady(){return this.currentState==="ready"||this.currentState==="active"}isInitialized(){return this.currentState!=="uninitialized"}setupEventHandlers(){this.lifecycleManager.setCallbacks({onStateChange:e=>{this.updateState(e==="active"?"active":"ready")},onError:e=>{this.handleError(e,"lifecycle")}})}detectDevice(){var e,t;this.deviceSpecs=this.audioManager.getPlatformSpecs(),console.log("📱 [MicrophoneController] Device detected:",this.deviceSpecs),(t=(e=this.eventCallbacks).onDeviceChange)==null||t.call(e,this.deviceSpecs),this.dispatchCustomEvent("pitchpro:deviceDetected",{specs:this.deviceSpecs})}async initialize(){var e,t,i,s;try{this.updateState("initializing"),console.log("🎤 [MicrophoneController] Starting initialization");const n=await this.lifecycleManager.acquire();return this.isPermissionGranted=!0,this.updateState("ready"),this.lastError=null,(t=(e=this.eventCallbacks).onPermissionChange)==null||t.call(e,!0),this.dispatchCustomEvent("pitchpro:microphoneGranted",{stream:n.mediaStream}),console.log("✅ [MicrophoneController] Initialization complete"),n}catch(n){throw this.logger.error("Initialization failed",n,{operation:"initialize",currentState:this.currentState}),this.isPermissionGranted=!1,this.handleError(n,"initialization"),(s=(i=this.eventCallbacks).onPermissionChange)==null||s.call(i,!1),this.dispatchCustomEvent("pitchpro:microphoneDenied",{error:n}),n}}async requestPermission(){try{return await this.initialize(),!0}catch{return!1}}async checkPermissionStatus(){if(typeof navigator>"u"||!navigator.mediaDevices)return"denied";try{return(await navigator.permissions.query({name:"microphone"})).state}catch{try{return(await navigator.mediaDevices.getUserMedia({audio:this.config.audioConstraints})).getTracks().forEach(t=>t.stop()),"granted"}catch{return"denied"}}}stop(){console.log("🛑 [MicrophoneController] Stopping microphone"),this.lifecycleManager.release(),this.updateState("ready"),this.dispatchCustomEvent("pitchpro:microphoneStopped",{}),console.log("✅ [MicrophoneController] Microphone stopped")}forceStop(){console.log("🚨 [MicrophoneController] Force stopping microphone"),this.lifecycleManager.forceRelease(),this.updateState("uninitialized"),this.isPermissionGranted=!1,console.log("✅ [MicrophoneController] Force stop complete")}setSensitivity(e){var s,n;const t=this.audioManager.getSensitivity();this.audioManager.setSensitivity(e);const i=this.audioManager.getSensitivity();t!==i&&(console.log(`🔧 [MicrophoneController] Sensitivity changed: ${t}x → ${i}x`),(n=(s=this.eventCallbacks).onSensitivityChange)==null||n.call(s,i),this.dispatchCustomEvent("pitchpro:sensitivityChanged",{sensitivity:i}))}getSensitivity(){return this.audioManager.getSensitivity()}mute(){this.logger.info("Muting microphone via controller"),this.audioManager.mute(),this.dispatchCustomEvent("pitchpro:microphoneMuted",{timestamp:Date.now(),controllerState:this.currentState})}unmute(){this.logger.info("Unmuting microphone via controller"),this.audioManager.unmute(),this.dispatchCustomEvent("pitchpro:microphoneUnmuted",{timestamp:Date.now(),controllerState:this.currentState})}toggleMute(){return this.audioManager.getIsMuted()?(this.unmute(),!1):(this.mute(),!0)}isMuted(){return this.audioManager.getIsMuted()}registerAudioDetectionComponent(e){this.audioDetectionComponent=e,this.logger.info("AudioDetectionComponent registered for UI control"),console.log("🎛️ [MicrophoneController] AudioDetectionComponent registered for UI management")}registerDetector(e){this.pitchDetector=e,this.logger.info("PitchDetector instance has been registered to the controller."),console.log("🎯 [MicrophoneController] PitchDetector registered for unified management")}start(){this.logger.info("Starting microphone and pitch detection systems..."),console.log("▶️ [MicrophoneController] Starting comprehensive system startup");try{this.unmute(),console.log("✅ [MicrophoneController] Microphone unmuted")}catch(e){return this.logger.error("Error during microphone unmute",e),console.warn("⚠️ [MicrophoneController] Microphone unmute failed:",e.message),!1}if(this.pitchDetector)try{return this.pitchDetector.startDetection()?(this.logger.info("PitchDetector detection started successfully"),console.log("✅ [MicrophoneController] Pitch detection started"),console.log("🎉 [MicrophoneController] System startup completed successfully"),!0):(this.logger.warn("PitchDetector failed to start detection"),console.warn("⚠️ [MicrophoneController] Pitch detection failed to start"),!1)}catch(e){return this.logger.error("Error during PitchDetector start",e),console.warn("⚠️ [MicrophoneController] PitchDetector start encountered error:",e.message),!1}else return this.logger.warn("No PitchDetector registered, cannot start detection"),console.log("⚠️ [MicrophoneController] No PitchDetector registered - skipping detection start"),console.log("ℹ️ [MicrophoneController] Only microphone unmuted, detection not available"),!1}reset(){if(this.logger.info("Performing full system reset..."),console.log("🔄 [MicrophoneController] Starting comprehensive system reset"),this.pitchDetector)try{this.pitchDetector.stopDetection(),console.log("✅ [MicrophoneController] PitchDetector stopped"),this.pitchDetector.resetDisplayState(),console.log("✅ [MicrophoneController] Display state reset")}catch(e){this.logger.error("Error during PitchDetector reset",e),console.warn("⚠️ [MicrophoneController] PitchDetector reset encountered error:",e.message)}else this.logger.warn("No PitchDetector registered, skipping detector reset."),console.log("⚠️ [MicrophoneController] No PitchDetector registered - skipping detection reset");if(this.audioDetectionComponent)try{typeof this.audioDetectionComponent.resetDisplayElements=="function"?(this.audioDetectionComponent.resetDisplayElements(),console.log("✅ [MicrophoneController] AudioDetectionComponent UI reset")):console.warn("⚠️ [MicrophoneController] AudioDetectionComponent does not have resetDisplayElements method")}catch(e){this.logger.error("Error during AudioDetectionComponent UI reset",e),console.warn("⚠️ [MicrophoneController] AudioDetectionComponent UI reset encountered error:",e.message)}else console.log("ℹ️ [MicrophoneController] No AudioDetectionComponent registered - skipping comprehensive UI reset");try{this.mute(),console.log("✅ [MicrophoneController] Microphone muted")}catch(e){this.logger.error("Error during microphone mute",e),console.warn("⚠️ [MicrophoneController] Microphone mute encountered error:",e.message)}try{this.resetRecoveryAttempts(),console.log("✅ [MicrophoneController] Recovery attempts reset")}catch(e){this.logger.error("Error during recovery reset",e),console.warn("⚠️ [MicrophoneController] Recovery reset encountered error:",e.message)}this.logger.info("System reset complete."),console.log("🎉 [MicrophoneController] Comprehensive system reset completed"),console.log("ℹ️ [MicrophoneController] Note: Muted state is normal and will not trigger health check errors")}getDeviceSpecs(){return this.deviceSpecs}getState(){return this.currentState}hasPermission(){return this.isPermissionGranted}getStatus(){return{state:this.currentState,isPermissionGranted:this.isPermissionGranted,isActive:this.isActive(),isReady:this.isReady(),sensitivity:this.getSensitivity(),deviceSpecs:this.deviceSpecs,lastError:this.lastError,audioManagerStatus:this.audioManager.getStatus(),lifecycleStatus:this.lifecycleManager.getStatus()}}checkHealth(){return this.audioManager.checkMediaStreamHealth()}async testMicrophone(e=2e3){const t=Date.now();try{!this.isReady()&&!this.isActive()&&await this.initialize();const i=this.audioManager.createAnalyser("microphone-test",{fftSize:1024,smoothingTimeConstant:.8});let s=0,n=null;const o=t+e;await new Promise(l=>{const m=()=>{if(Date.now()>=o){l();return}const u=i.fftSize,d=new Float32Array(u);i.getFloatTimeDomainData(d);let f=0;for(let y=0;y<u;y++)f+=Math.abs(d[y]);const S=Math.sqrt(f/u)*100;if(S>s&&(s=S),S>5){let y=0,C=0;for(let A=1;A<u/2;A++){const g=Math.abs(d[A]);g>C&&(C=g,y=A)}y>0&&(n=y*44100/u)}requestAnimationFrame(m)};m()}),this.audioManager.removeAnalyser("microphone-test");const r=Date.now()-t,a=s>1,c=n?n.toFixed(0):"none";return console.log(`🧪 [MicrophoneController] Microphone test complete: volume=${s.toFixed(2)}, frequency=${c}, duration=${r}ms`),{success:a,volume:s,frequency:n,duration:r}}catch(i){const s=Date.now()-t,n=this._createStructuredError(i,"microphone_test");return I.logError(n,"Microphone functionality test"),console.error("❌ [MicrophoneController] Microphone test failed:",n.toJSON()),{success:!1,volume:0,frequency:null,duration:s,error:i}}}updateState(e){var t,i;if(this.currentState!==e){const s=this.currentState;this.currentState=e,console.log(`🔄 [MicrophoneController] State changed: ${s} → ${e}`),(i=(t=this.eventCallbacks).onStateChange)==null||i.call(t,e)}}handleError(e,t){var s,n;const i=e instanceof T?e:this._createStructuredError(e,t);I.logError(i,`MicrophoneController ${t}`),console.error(`❌ [MicrophoneController] Error in ${t}:`,i.toJSON()),this.lastError=e,this.updateState("error"),this.errorSystem&&(t==="initialization"||t==="lifecycle"?this.errorSystem.showMicrophoneError(e,t):this.errorSystem.showError("マイクエラー",`${t}でエラーが発生しました: ${e.message}`,{priority:"medium"})),(n=(s=this.eventCallbacks).onError)==null||n.call(s,e)}dispatchCustomEvent(e,t){if(typeof window>"u")return;const i=new CustomEvent(e,{detail:t});window.dispatchEvent(i)}addEventListener(e,t){typeof window>"u"||window.addEventListener(e,t)}removeEventListener(e,t){typeof window>"u"||window.removeEventListener(e,t)}destroy(){var e;console.log("🗑️ [MicrophoneController] Destroying controller"),this.forceStop(),this.lifecycleManager.destroy(),(e=this.errorSystem)==null||e.destroy(),this.eventCallbacks={},this.currentState="uninitialized",this.isPermissionGranted=!1,this.lastError=null,this.deviceSpecs=null,console.log("✅ [MicrophoneController] Cleanup complete")}_createStructuredError(e,t){return e.message.includes("Permission denied")||e.message.includes("NotAllowedError")||e.message.includes("permission")||e.message.includes("denied")?new ge("マイクへのアクセス許可が拒否されました。ブラウザの設定でマイクアクセスを許可してください。",{operation:t,originalError:e.message,deviceSpecs:this.deviceSpecs,permissionState:this.isPermissionGranted,controllerState:this.currentState,userAgent:typeof navigator<"u"?navigator.userAgent:"unknown"}):e.message.includes("AudioContext")||e.message.includes("audio")||e.message.includes("context")||e.message.includes("initialization")?new q("オーディオシステムの初期化に失敗しました。デバイスの音響設定を確認するか、ブラウザを再起動してください。",{operation:t,originalError:e.message,controllerState:this.currentState,audioManagerStatus:this.audioManager.getStatus(),deviceSpecs:this.deviceSpecs}):new T(`${t}中に予期しないエラーが発生しました: ${e.message}`,N.MICROPHONE_ACCESS_DENIED,{operation:t,originalError:e.message,stack:e.stack,currentState:{controllerState:this.currentState,isPermissionGranted:this.isPermissionGranted,isActive:this.isActive(),isReady:this.isReady(),deviceSpecs:this.deviceSpecs}})}}const b=class b{static frequencyToMidi(e){return e<=0?0:Math.round(12*Math.log2(e/b.A4_FREQUENCY)+b.A4_MIDI_NUMBER)}static midiToFrequency(e){return b.A4_FREQUENCY*Math.pow(2,(e-b.A4_MIDI_NUMBER)/12)}static frequencyToNote(e,t=!1){if(e<=0)return{name:"--",octave:0,midi:0,frequency:0};const i=b.frequencyToMidi(e),s=t?b.FLAT_NOTE_NAMES:b.NOTE_NAMES,n=(i-12)%12,o=Math.floor((i-12)/12);return{name:s[n]+o,octave:o,midi:i,frequency:b.midiToFrequency(i)}}static frequencyToCents(e){if(e<=0)return 0;const t=12*Math.log2(e/b.A4_FREQUENCY)+b.A4_MIDI_NUMBER,i=Math.round(t),s=(t-i)*100;return Math.round(s)}static centsToRatio(e){return Math.pow(2,e/1200)}static ratioToCents(e){return e<=0?0:Math.round(1200*Math.log2(e))}static getClosestNoteFrequency(e){if(e<=0)return 0;const t=b.frequencyToMidi(e);return b.midiToFrequency(t)}static getInterval(e,t){if(e<=0||t<=0)return 0;const i=b.frequencyToMidi(e),s=b.frequencyToMidi(t);return Math.abs(s-i)}static getSignedInterval(e,t){if(e<=0||t<=0)return 0;const i=b.frequencyToMidi(e);return b.frequencyToMidi(t)-i}static getIntervalInfo(e){const t={0:"Perfect Unison",1:"Minor Second",2:"Major Second",3:"Minor Third",4:"Major Third",5:"Perfect Fourth",6:"Tritone",7:"Perfect Fifth",8:"Minor Sixth",9:"Major Sixth",10:"Minor Seventh",11:"Major Seventh",12:"Perfect Octave"},i=(e%12+12)%12,s=Math.floor(e/12),n=t[i]||"Unknown";return{name:s>0?`${n} + ${s} octave(s)`:n,semitones:e,cents:e*100,ratio:Math.pow(2,e/12)}}static isInVocalRange(e){return e>=80&&e<=1100}static isInPianoRange(e){return e>=27.5&&e<=4186}static getInstrumentRange(e){return{piano:{min:27.5,max:4186},guitar:{min:82.4,max:1397},violin:{min:196,max:3520},cello:{min:65.4,max:1397},voice_bass:{min:87.3,max:349},voice_tenor:{min:131,max:523},voice_alto:{min:175,max:698},voice_soprano:{min:262,max:1047}}[e]||null}static generateChromaticScale(e,t=1){const i=[];for(let s=0;s<12*t;s++){const n=e*Math.pow(2,s/12);i.push(n)}return i}static generateMajorScale(e){return[0,2,4,5,7,9,11,12].map(i=>e*Math.pow(2,i/12))}static generateMinorScale(e){return[0,2,3,5,7,8,10,12].map(i=>e*Math.pow(2,i/12))}static findHarmonics(e,t=8){const i=[];for(let s=1;s<=t;s++)i.push(e*s);return i}static isHarmonic(e,t,i=.05){if(t<=0||e<=0)return{isHarmonic:!1,harmonicNumber:null,exactFrequency:null};const s=e/t,n=Math.round(s);return n>=1&&Math.abs(s-n)<=i?{isHarmonic:!0,harmonicNumber:n,exactFrequency:t*n}:{isHarmonic:!1,harmonicNumber:null,exactFrequency:null}}static calculateFundamental(e,t){return t<=0||e<=0?0:e/t}static frequencyToScientificPitch(e){return b.frequencyToNote(e).name}static scientificPitchToFrequency(e){const t=e.match(/^([A-G][#b]?)(-?\d+)$/);if(!t)return 0;const[,i,s]=t,n=parseInt(s,10);let o=0;const r=i[0],a=i.slice(1);o={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[r]||0,a==="#"?o+=1:a==="b"&&(o-=1);const l=(n+1)*12+o;return b.midiToFrequency(l)}static formatFrequency(e,t=1){return e===0?"0 Hz":e<.1?"<0.1 Hz":e>=1e4?`${Math.round(e/1e3)}k Hz`:`${e.toFixed(t)} Hz`}static formatCents(e){return e===0?"0¢":`${e>0?"+":""}${e}¢`}};b.A4_FREQUENCY=440,b.A4_MIDI_NUMBER=69,b.NOTE_NAMES=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],b.FLAT_NOTE_NAMES=["C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B"],b.INTERVALS={unison:0,minorSecond:1,majorSecond:2,minorThird:3,majorThird:4,perfectFourth:5,tritone:6,perfectFifth:7,minorSixth:8,majorSixth:9,minorSeventh:10,majorSeventh:11,octave:12};let F=b;const _=class _{constructor(e={}){this.pitchDetector=null,this.micController=null,this.currentState="uninitialized",this.callbacks={},this.deviceSpecs=null,this.deviceSettings=null,this.uiUpdateTimer=null,this.isUpdatingSelectors=!1,this.uiElements={},this.lastError=null,this.isInitialized=!1,this.noteResetTimer=null,this.config={volumeBarSelector:e.volumeBarSelector,volumeTextSelector:e.volumeTextSelector,frequencySelector:e.frequencySelector,noteSelector:e.noteSelector,clarityThreshold:e.clarityThreshold??.4,minVolumeAbsolute:e.minVolumeAbsolute??.02,fftSize:e.fftSize??4096,smoothing:e.smoothing??.1,deviceOptimization:e.deviceOptimization??!0,uiUpdateInterval:e.uiUpdateInterval??50,autoUpdateUI:e.autoUpdateUI??!0,onPitchUpdate:e.onPitchUpdate,debug:e.debug??!1,logPrefix:e.logPrefix??"🎵 AudioDetection"},this.audioManager=new pe({sampleRate:44100,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1}),this.config.deviceOptimization&&this.detectAndOptimizeDevice(),this.checkAutoUpdateUIWarnings(),this.debugLog("AudioDetectionComponent created with config:",this.config)}delay(e){return new Promise(t=>setTimeout(t,e))}checkAutoUpdateUIWarnings(){const e=!!(this.config.volumeBarSelector||this.config.volumeTextSelector||this.config.frequencySelector||this.config.noteSelector);e&&!this.config.autoUpdateUI&&console.warn("⚠️ [PitchPro v1.1.9] UI selectors provided without autoUpdateUI=true. Set autoUpdateUI=true to enable automatic updates, or remove selectors for manual control in onPitchUpdate callback."),e&&this.config.autoUpdateUI&&console.info("ℹ️ [PitchPro] Automatic UI updates enabled. Note: Values applied may include device-specific multipliers and may differ from callback result.volume. For precise control, set autoUpdateUI=false and handle UI manually.")}async initialize(){var e,t,i,s,n,o;if(this.isInitialized){this.debugLog("Already initialized");return}try{this.updateState("initializing"),this.debugLog("Starting initialization..."),this.micController=new Pe({audioManager:{sampleRate:44100,echoCancellation:!1,autoGainControl:!1},lifecycle:{maxAutoRecoveryAttempts:3,healthCheckIntervalMs:1e3},notifications:{enabled:this.config.debug}}),this.micController.setCallbacks({onStateChange:c=>{this.debugLog("MicrophoneController state:",c)},onError:c=>{this.handleError(c,"microphone_controller")},onDeviceChange:c=>{var l,m;this.deviceSpecs=c,(m=(l=this.callbacks).onDeviceDetected)==null||m.call(l,c)}}),await this.micController.initialize(),this.debugLog("DeviceDetection values:",{device:(e=this.deviceSpecs)==null?void 0:e.deviceType,noiseGate:(t=this.deviceSpecs)==null?void 0:t.noiseGate,volumeMultiplier:(i=this.deviceSpecs)==null?void 0:i.volumeMultiplier,smoothingFactor:(s=this.deviceSpecs)==null?void 0:s.smoothingFactor});const r={clarityThreshold:this.config.clarityThreshold,minVolumeAbsolute:((n=this.deviceSpecs)==null?void 0:n.noiseGate)??this.config.minVolumeAbsolute,fftSize:this.config.fftSize,smoothing:((o=this.deviceSpecs)==null?void 0:o.smoothingFactor)??this.config.smoothing,deviceOptimization:this.config.deviceOptimization};this.debugLog("PitchDetector config object:",r),this.pitchDetector=new xe(this.audioManager,r),this.pitchDetector.setCallbacks({onPitchUpdate:c=>{this.handlePitchUpdate(c)},onError:c=>{this.handleError(c,"pitch_detector")},onStateChange:c=>{this.debugLog("PitchDetector state:",c),c==="detecting"&&this.config.autoUpdateUI?(this.debugLog("🔄 Starting UI updates (state: detecting)"),this.startUIUpdates()):c!=="detecting"&&this.uiUpdateTimer&&(this.debugLog("⏹️ Stopping UI updates (state: "+c+")"),clearInterval(this.uiUpdateTimer),this.uiUpdateTimer=null)}}),await this.pitchDetector.initialize();const a=this.pitchDetector.getStatus();this.debugLog("After PitchDetector initialization:",{status:a,componentState:a.componentState,isInitialized:a.isInitialized}),this.micController&&this.pitchDetector&&(this.micController.registerDetector(this.pitchDetector),this.micController.registerAudioDetectionComponent(this),this.debugLog("✅ PitchDetector and AudioDetectionComponent registered with MicrophoneController for unified management")),this.cacheUIElements(),this.deviceSpecs&&this.micController&&(this.micController.setSensitivity(this.deviceSpecs.sensitivity),this.debugLog("Applied DeviceDetection sensitivity:",this.deviceSpecs.sensitivity)),this.isInitialized=!0,this.updateState("ready"),this.debugLog("Initialization complete")}catch(r){const a=this.createStructuredError(r,"initialization");throw I.logError(a,"AudioDetectionComponent initialization"),this.lastError=a,this.updateState("error"),a}}updateUI(e){if(this.config.autoUpdateUI){if(this.isUpdatingSelectors){this.debugLog("UI update skipped - selectors are being updated");return}try{if(this.uiElements.volumeBar&&this.config.volumeBarSelector){const t=document.querySelector(this.config.volumeBarSelector);if(t&&t===this.uiElements.volumeBar){const i=Math.min(100,Math.max(0,e.volume));this.uiElements.volumeBar instanceof HTMLProgressElement?this.uiElements.volumeBar.value=i:this.uiElements.volumeBar.style.width=`${i}%`}}if(this.uiElements.volumeText&&this.config.volumeTextSelector){const t=document.querySelector(this.config.volumeTextSelector);if(t&&t===this.uiElements.volumeText){const i=Math.min(100,Math.max(0,e.volume));this.uiElements.volumeText.textContent=`${i.toFixed(1)}%`}}if(this.uiElements.frequency&&this.config.frequencySelector){const t=document.querySelector(this.config.frequencySelector);t&&t===this.uiElements.frequency&&(e.frequency&&e.frequency>0?this.uiElements.frequency.textContent=F.formatFrequency(e.frequency):this.uiElements.frequency.textContent="0.0 Hz")}if(this.uiElements.note&&this.config.noteSelector&&this.config.noteSelector!=="#note-display"){const t=document.querySelector(this.config.noteSelector);if(t&&t===this.uiElements.note)if(e.frequency&&e.frequency>0){this.noteResetTimer&&(clearTimeout(this.noteResetTimer),this.noteResetTimer=null);const i=F.frequencyToNote(e.frequency);this.debugLog(`Updating note display: ${this.uiElements.note.id||"unknown-id"} with note: ${i.name} (selector: ${this.config.noteSelector})`),this.uiElements.note.textContent=i.name}else this.noteResetTimer||(this.noteResetTimer=window.setTimeout(()=>{this.uiElements.note&&(this.debugLog(`Resetting note display: ${this.uiElements.note.id||"unknown-id"} to "-" (delayed, selector: ${this.config.noteSelector})`),this.uiElements.note.textContent="-"),this.noteResetTimer=null},_.NOTE_RESET_DELAY_MS));else this.debugLog(`Note element mismatch: cached element does not match current selector ${this.config.noteSelector} - skipping update to prevent cross-mode interference`)}else this.config.noteSelector?this.debugLog("Note element not found in uiElements.note - check selector caching"):this.debugLog("Note updates skipped - no noteSelector configured")}catch(t){this.debugLog("UI update error:",t)}}}async updateSelectors(e){this.debugLog("Updating selectors:",e),this.isUpdatingSelectors=!0;const t=this.uiUpdateTimer!==null;t&&this.stopUIUpdates(),await this.delay(_.SELECTOR_UPDATE_DELAY_MS),this.resetAllUIElements(),e.volumeBarSelector!==void 0&&(this.config.volumeBarSelector=e.volumeBarSelector),e.volumeTextSelector!==void 0&&(this.config.volumeTextSelector=e.volumeTextSelector),e.frequencySelector!==void 0&&(this.config.frequencySelector=e.frequencySelector),e.noteSelector!==void 0?this.config.noteSelector=e.noteSelector:(this.config.noteSelector="",this.debugLog("noteSelector cleared automatically to prevent cross-mode interference")),this.cacheUIElements(),await this.delay(_.SELECTOR_UPDATE_DELAY_MS),this.resetAllUIElements(),this.isUpdatingSelectors=!1,t&&(await this.delay(_.UI_RESTART_DELAY_MS),this.startUIUpdates()),this.debugLog("Selectors updated, all elements reset, and UI elements re-cached:",Object.keys(this.uiElements))}resetRecoveryAttempts(){this.debugLog("Resetting recovery attempts...");try{this.micController?(this.micController.resetRecoveryAttempts(),this.debugLog("Recovery attempts reset successfully")):this.debugLog("No microphone controller available to reset")}catch(e){throw this.debugLog("Error resetting recovery attempts:",e),e}}destroy(){this.debugLog("Destroying AudioDetectionComponent...");try{this.stopUIUpdates(),this.noteResetTimer&&(clearTimeout(this.noteResetTimer),this.noteResetTimer=null),this.pitchDetector&&(this.pitchDetector.destroy(),this.pitchDetector=null),this.micController&&(this.micController.destroy(),this.micController=null),this.uiElements={},this.isInitialized=!1,this.currentState="uninitialized",this.callbacks={},this.lastError=null,this.debugLog("AudioDetectionComponent destroyed")}catch(e){console.error("Error during AudioDetectionComponent destruction:",e)}}getStatus(){var e,t;return{state:this.currentState,isInitialized:this.isInitialized,deviceSpecs:this.deviceSpecs,deviceSettings:this.deviceSettings,config:this.config,lastError:this.lastError,pitchDetectorStatus:(e=this.pitchDetector)==null?void 0:e.getStatus(),micControllerStatus:(t=this.micController)==null?void 0:t.getStatus()}}get microphoneController(){return this.micController}detectAndOptimizeDevice(){this.deviceSpecs=E.getDeviceSpecs(),this.debugLog("Using DeviceDetection values directly:",{device:this.deviceSpecs.deviceType,noiseGate:`${this.deviceSpecs.noiseGate} (${(this.deviceSpecs.noiseGate*100).toFixed(2)}% threshold)`,volumeMultiplier:this.deviceSpecs.volumeMultiplier,sensitivity:this.deviceSpecs.sensitivity,smoothingFactor:this.deviceSpecs.smoothingFactor}),this.debugLog("Device optimization applied:",{device:this.deviceSpecs.deviceType,settings:this.deviceSpecs})}cacheUIElements(){var e;if(!this.config.autoUpdateUI){this.debugLog("UI element caching skipped - autoUpdateUI is disabled");return}this.config.volumeBarSelector&&(this.uiElements.volumeBar=document.querySelector(this.config.volumeBarSelector)||void 0),this.config.volumeTextSelector&&(this.uiElements.volumeText=document.querySelector(this.config.volumeTextSelector)||void 0),this.config.frequencySelector&&(this.uiElements.frequency=document.querySelector(this.config.frequencySelector)||void 0),this.config.noteSelector&&(this.uiElements.note=document.querySelector(this.config.noteSelector)||void 0,this.debugLog(`Note element cached: selector="${this.config.noteSelector}", found=${!!this.uiElements.note}, id="${((e=this.uiElements.note)==null?void 0:e.id)||"no-id"}"`)),this.debugLog("UI elements cached:",Object.keys(this.uiElements))}resetDisplayElements(){this.resetAllUIElements()}resetAllUIElements(){try{const e=["#mic-volume-bar","#mic-volume-text","#mic-frequency","#mic-frequency-display","#range-volume-bar","#range-volume-text","#range-frequency","#range-frequency-value","#range-frequency-display","#practice-volume-bar","#practice-volume-text","#practice-frequency","#practice-note","#freq-1","#freq-2","#freq-3","#freq-4","#freq-5","#frequency-1","#frequency-2","#frequency-3","#pitch-1","#pitch-2","#pitch-3",this.config.volumeBarSelector,this.config.volumeTextSelector,this.config.frequencySelector,this.config.noteSelector];document.querySelectorAll('[id*="freq"]:not(.frequency-group):not(.frequency-box), [id*="frequency"]:not(.frequency-group):not(.frequency-box), [id*="pitch"]:not(.frequency-group):not(.frequency-box)').forEach(i=>{const s=i.textContent||"";(s.includes("Hz")||s.match(/^\d+\.?\d*$/))&&(i.classList.contains("frequency-display")||i.id.includes("freq-"))&&(i.textContent="0.0 Hz")}),e.forEach(i=>{if(i){const s=document.querySelector(i);if(s){if(this.debugLog(`Processing selector: ${i}, element found: ${!!s}`),i.includes("volume-bar"))s instanceof HTMLProgressElement?s.value=0:s.style.width="0%";else if(i.includes("volume-text"))s.textContent="0.0%";else if(i.includes("frequency"))s.textContent="0.0 Hz",s.innerHTML="0.0 Hz",s.setAttribute("data-frequency","0"),s.style.display!=="none"&&(s.style.opacity="0.99",s.offsetHeight,s.style.opacity="");else if(i.includes("note")){const n=s.textContent,o=s.innerHTML;this.debugLog(`Resetting note element: ${i}, textContent: "${n}", innerHTML: "${o}"`),s.textContent="-",s.innerHTML="-",s.style.opacity="0.99",s.offsetHeight,s.style.opacity="",this.debugLog(`Note reset complete: ${i}, new textContent: "${s.textContent}", new innerHTML: "${s.innerHTML}"`)}}}}),this.debugLog("All UI elements reset to initial state")}catch(e){this.debugLog("Error resetting UI elements:",e)}}handlePitchUpdate(e){var i,s,n,o;const t=this._getProcessedResult(e);t&&((s=(i=this.callbacks).onPitchUpdate)==null||s.call(i,t),(o=(n=this.callbacks).onVolumeUpdate)==null||o.call(n,t.volume))}startUIUpdates(){this.uiUpdateTimer&&clearInterval(this.uiUpdateTimer),this.uiUpdateTimer=window.setInterval(()=>{if(this.pitchDetector&&this.pitchDetector.getStatus().componentState==="detecting"){const e=this.pitchDetector.getLatestResult(),t=this._getProcessedResult(e);if(t)this.config.autoUpdateUI&&this.updateUI(t),this.config.onPitchUpdate?(this.debugLog("Calling onPitchUpdate callback with result:",t),this.config.onPitchUpdate(t)):this.debugLog("onPitchUpdate callback not set - skipping callback execution");else{const i={frequency:0,note:"-",octave:0,volume:0,rawVolume:0,clarity:0};this.config.autoUpdateUI&&this.updateUI(i),this.config.onPitchUpdate&&this.config.onPitchUpdate(i)}}},this.config.uiUpdateInterval)}stopUIUpdates(){this.uiUpdateTimer&&(clearInterval(this.uiUpdateTimer),this.uiUpdateTimer=null)}_getProcessedResult(e){var a,c,l;if(!e)return null;const t={...e},s=e.volume*1500,n=(((a=this.deviceSpecs)==null?void 0:a.noiseGate)??.06)*100;if(s<n)return t.volume=0,t.frequency=0,t.note="--",t.rawVolume=e.volume,t;const o=((c=this.deviceSpecs)==null?void 0:c.volumeMultiplier)??1,r=s*o;return t.volume=Math.min(100,Math.max(0,r)),t.rawVolume=e.volume,this.config.debug&&e.volume>.001&&this.debugLog("UnifiedVolumeProcessing:",{device:(l=this.deviceSpecs)==null?void 0:l.deviceType,step1_rawRMS:e.volume.toFixed(6),step2_initial:s.toFixed(2),step3_noiseGate:`${n.toFixed(2)}% (${s>=n?"PASS":"BLOCK"})`,step4_multiplier:o,step5_final:`${t.volume.toFixed(2)}%`}),t}updateState(e){var t,i;if(this.currentState!==e){const s=this.currentState;this.currentState=e,this.debugLog(`State changed: ${s} → ${e}`),(i=(t=this.callbacks).onStateChange)==null||i.call(t,e)}}handleError(e,t){var s,n;const i=e instanceof T?e:this.createStructuredError(e,t);this.lastError=i,this.updateState("error"),(n=(s=this.callbacks).onError)==null||n.call(s,i),this.debugLog("Error handled:",i.toJSON())}createStructuredError(e,t){return e.message.includes("Permission denied")||e.message.includes("NotAllowedError")||e.message.includes("permission")?new ge("マイクへのアクセス許可が拒否されました。ブラウザの設定でマイクアクセスを許可してください。",{operation:t,originalError:e.message,deviceSpecs:this.deviceSpecs,componentState:this.currentState}):e.message.includes("AudioContext")||e.message.includes("audio")||e.message.includes("initialization")?new q("オーディオシステムの初期化に失敗しました。デバイスの音響設定を確認するか、ブラウザを再起動してください。",{operation:t,originalError:e.message,componentState:this.currentState,deviceSpecs:this.deviceSpecs}):new T(`${t}中に予期しないエラーが発生しました: ${e.message}`,N.PITCH_DETECTION_ERROR,{operation:t,originalError:e.message,stack:e.stack,componentState:this.currentState,isInitialized:this.isInitialized})}debugLog(e,...t){this.config.debug&&console.log(`${this.config.logPrefix} ${e}`,...t)}};_.NOTE_RESET_DELAY_MS=300,_.SELECTOR_UPDATE_DELAY_MS=50,_.UI_RESTART_DELAY_MS=200;let ve=_;class Je{constructor(e={}){this.historyBuffer=[],this.config={historyWindowMs:2e3,minConfidenceThreshold:.6,harmonicToleranceCents:30,maxHarmonicNumber:8,stabilityWeight:.7,volumeWeight:.3},this.config={...this.config,...e}}correctFrequency(e,t=1){const i=Date.now();this.cleanHistory(i),this.addToHistory(e,t,i);const s=this.analyzeHarmonics(e);return s.confidence>=this.config.minConfidenceThreshold?{correctedFreq:s.correctedFrequency,confidence:s.confidence,correctionApplied:Math.abs(s.correctedFrequency-e)>1}:{correctedFreq:e,confidence:s.confidence,correctionApplied:!1}}analyzeHarmonics(e){if(this.historyBuffer.length<3)return{correctedFrequency:e,confidence:.1};const t=this.historyBuffer.slice(-10).map(n=>n.frequency),i=this.findFundamentalCandidates(e);let s={frequency:e,confidence:.1,harmonicNumber:1};for(const n of i){const o=this.calculateHarmonicConfidence(n.fundamental,n.harmonicNumber,t);o>s.confidence&&(s={frequency:n.fundamental,confidence:o,harmonicNumber:n.harmonicNumber})}return s.harmonicNumber>1&&s.confidence>this.config.minConfidenceThreshold?{correctedFrequency:s.frequency,confidence:s.confidence,harmonicNumber:s.harmonicNumber,fundamentalCandidate:s.frequency}:{correctedFrequency:e,confidence:s.confidence}}findFundamentalCandidates(e){const t=[];for(let i=2;i<=this.config.maxHarmonicNumber;i++){const s=e/i;if(s<60)continue;const n=s*i,o=Math.abs(1200*Math.log2(e/n));if(o<=this.config.harmonicToleranceCents){const r=1-o/this.config.harmonicToleranceCents;t.push({fundamental:s,harmonicNumber:i,likelihood:r})}}return t.push({fundamental:e,harmonicNumber:1,likelihood:.5}),t.sort((i,s)=>s.likelihood-i.likelihood)}calculateHarmonicConfidence(e,t,i){if(i.length<3)return .1;let s=0,n=0;for(const a of i){let c=Math.round(a/e);c<1&&(c=1);const l=e*c,m=Math.abs(1200*Math.log2(a/l));if(m<=this.config.harmonicToleranceCents*2){const u=1-m/(this.config.harmonicToleranceCents*2);s+=u,n++}}if(n===0)return .1;const o=s/n,r=Math.min(n/i.length,1);return Math.min(o*this.config.stabilityWeight+r*(1-this.config.stabilityWeight),1)}addToHistory(e,t,i){const s=Math.min(t,1);let n=.5;if(this.historyBuffer.length>0){const r=this.historyBuffer[this.historyBuffer.length-1].frequency,a=Math.max(e,r)/Math.min(e,r);n=Math.max(0,1-(a-1)*5)}const o=s*this.config.volumeWeight+n*(1-this.config.volumeWeight);this.historyBuffer.push({frequency:e,confidence:o,timestamp:i,volume:t}),this.historyBuffer.length>50&&this.historyBuffer.shift()}cleanHistory(e){const t=e-this.config.historyWindowMs;this.historyBuffer=this.historyBuffer.filter(i=>i.timestamp>t)}resetHistory(){this.historyBuffer=[]}getAnalysisStats(){if(this.historyBuffer.length===0)return{historyLength:0,averageConfidence:0,frequencyRange:null,stabilityScore:0};const e=this.historyBuffer.map(l=>l.frequency),t=this.historyBuffer.map(l=>l.confidence),i=t.reduce((l,m)=>l+m,0)/t.length,s=Math.min(...e),n=Math.max(...e),o=e.reduce((l,m)=>l+m,0)/e.length,r=e.reduce((l,m)=>l+Math.pow(m-o,2),0)/e.length,a=Math.sqrt(r)/o,c=Math.max(0,1-a);return{historyLength:this.historyBuffer.length,averageConfidence:i,frequencyRange:{min:s,max:n},stabilityScore:c}}updateConfig(e){this.config={...this.config,...e}}}const k={EXCELLENT:"excellent",GOOD:"good",FAIR:"fair",POOR:"poor"};class Xe{constructor(e={}){this.analysisBuffer=[],this.config={analysisWindowMs:3e3,stabilityThresholdCents:20,vibratoMinRate:4.5,vibratoMaxRate:7.5,vibratoMinDepthCents:50,breathinessThreshold:.3,minAnalysisTime:1e3},this.config={...this.config,...e}}analyzeVoice(e,t,i,s){const n=Date.now();this.addToBuffer(e,t,i,n),this.cleanBuffer(n);const o=this.calculateStability(),r=this.detectVibrato(),a=s?this.analyzeBreathiness(s):null,c=this.analyzeConsistency(),l=this.calculateOverallQuality(o,r,a,c),m=this.generateRecommendations(l,o,r,a,c);return{quality:l,stability:o,recommendations:m}}calculateStability(){if(this.analysisBuffer.length<10)return .5;const t=this.analysisBuffer.map(a=>a.frequency).filter(a=>a>0);if(t.length<5)return .3;const i=t.reduce((a,c)=>a+c,0)/t.length,s=t.reduce((a,c)=>a+Math.pow(c-i,2),0)/t.length,r=Math.sqrt(s)/i*1200;return Math.max(0,Math.min(1,1-r/100))}detectVibrato(){if(this.analysisBuffer.length<30)return{detected:!1,rate:null,depth:null,regularity:null};const e=this.analysisBuffer.map(u=>u.frequency).filter(u=>u>0);if(e.length<20)return{detected:!1,rate:null,depth:null,regularity:null};const t=this.smoothFrequencies(e,3),i=this.findExtrema(t);if(i.length<4)return{detected:!1,rate:null,depth:null,regularity:null};const s=(this.analysisBuffer[this.analysisBuffer.length-1].timestamp-this.analysisBuffer[0].timestamp)/1e3,o=i.length/2/s,r=[];for(let u=0;u<i.length-1;u++){const d=t[i[u].index],f=t[i[u+1].index];if(d>0&&f>0){const p=Math.abs(1200*Math.log2(d/f));r.push(p)}}const a=r.length>0?r.reduce((u,d)=>u+d,0)/r.length:0,c=[];for(let u=0;u<i.length-2;u+=2){const d=i[u+2].index-i[u].index;c.push(d)}let l=0;if(c.length>2){const u=c.reduce((f,p)=>f+p,0)/c.length,d=c.reduce((f,p)=>f+Math.pow(p-u,2),0)/c.length;l=Math.max(0,1-Math.sqrt(d)/u)}return{detected:o>=this.config.vibratoMinRate&&o<=this.config.vibratoMaxRate&&a>=this.config.vibratoMinDepthCents,rate:o,depth:a,regularity:l}}analyzeBreathiness(e){const t=Math.floor(e.length*.1),i=e.slice(Math.floor(e.length*.7)),s=e.slice(0,t*2).reduce((r,a)=>r+a*a,0),n=i.reduce((r,a)=>r+a*a,0);if(s===0)return 1;const o=n/s;return Math.min(1,o)}analyzeConsistency(){if(this.analysisBuffer.length<10)return .5;const e=this.analysisBuffer.map(n=>n.volume),t=this.analysisBuffer.map(n=>n.clarity),i=this.calculateConsistencyScore(e),s=this.calculateConsistencyScore(t);return(i+s)/2}calculateConsistencyScore(e){if(e.length<3)return .5;const t=e.reduce((n,o)=>n+o,0)/e.length,i=e.reduce((n,o)=>n+Math.pow(o-t,2),0)/e.length,s=Math.sqrt(i)/(t||1);return Math.max(0,Math.min(1,1-s))}calculateOverallQuality(e,t,i,s){const n={stability:.4,consistency:.3,breathiness:.2,vibrato:.1};let o=e*n.stability+s*n.consistency;return i!==null?o+=(1-Math.min(i,1))*n.breathiness:o+=.7*n.breathiness,t.detected&&t.regularity>.7?o+=.9*n.vibrato:t.detected?o+=.6*n.vibrato:o+=.5*n.vibrato,o>=.85?k.EXCELLENT:o>=.7?k.GOOD:o>=.5?k.FAIR:k.POOR}generateRecommendations(e,t,i,s,n){const o=[];return t<.5?(o.push("音程の安定性を向上させるため、ゆっくりとした発声練習を行ってください"),o.push("腹式呼吸を意識して、息の流れを一定に保つ練習をしてください")):t<.7&&o.push("音程の微調整練習で、より正確なピッチコントロールを目指しましょう"),n<.5&&(o.push("音量と音質の一貫性を保つため、定期的な発声練習を継続してください"),o.push("録音を聞き返して、自分の声の特徴を把握しましょう")),s!==null&&s>.6&&(o.push("声の息漏れが気になります。発声時の喉の締まりを意識してください"),o.push("ハミング練習で、クリアな声質を目指しましょう")),i.detected?i.regularity<.5?o.push("ビブラートの規則性を改善するため、メトロノームに合わせた練習をしてください"):i.rate>7.5&&o.push("ビブラートの速度が速すぎます。よりゆったりとしたビブラートを練習してください"):(e===k.GOOD||e===k.EXCELLENT)&&o.push("美しいビブラートの習得に挑戦してみましょう"),e===k.POOR?(o.push("基礎的な発声練習から始めることをお勧めします"),o.push("専門的な指導を受けることを検討してください")):e===k.EXCELLENT&&o.push("素晴らしい声質です。この状態を維持する練習を続けてください"),o}smoothFrequencies(e,t){const i=[];for(let s=0;s<e.length;s++){let n=0,o=0;const r=Math.max(0,s-Math.floor(t/2)),a=Math.min(e.length,s+Math.floor(t/2)+1);for(let c=r;c<a;c++)n+=e[c],o++;i.push(n/o)}return i}findExtrema(e){const t=[];for(let i=1;i<e.length-1;i++){const s=e[i-1],n=e[i],o=e[i+1];n>s&&n>o?t.push({index:i,value:n,type:"peak"}):n<s&&n<o&&t.push({index:i,value:n,type:"valley"})}return t}addToBuffer(e,t,i,s){this.analysisBuffer.push({frequency:e,volume:t,clarity:i,timestamp:s}),this.analysisBuffer.length>200&&this.analysisBuffer.shift()}cleanBuffer(e){const t=e-this.config.analysisWindowMs;this.analysisBuffer=this.analysisBuffer.filter(i=>i.timestamp>t)}reset(){this.analysisBuffer=[]}getBufferStats(){if(this.analysisBuffer.length===0)return{entryCount:0,timeSpanMs:0,averageVolume:0,averageClarity:0};const e=this.analysisBuffer.map(s=>s.volume),t=this.analysisBuffer.map(s=>s.clarity),i=this.analysisBuffer[this.analysisBuffer.length-1].timestamp-this.analysisBuffer[0].timestamp;return{entryCount:this.analysisBuffer.length,timeSpanMs:i,averageVolume:e.reduce((s,n)=>s+n,0)/e.length,averageClarity:t.reduce((s,n)=>s+n,0)/t.length}}}class Ye{constructor(){this.calibrationData=null,this.isCalibrated=!1,this.calibrationInProgress=!1,this.deviceSpecs=E.getDeviceSpecs()}async calibrate(e,t){if(this.calibrationInProgress)throw new Error("Calibration already in progress");this.calibrationInProgress=!0;try{console.log("🎛️ [CalibrationSystem] Starting device calibration");const i=await this.measureBackgroundNoise(e,t),s=await this.calibrateVolumeLevels(e,t),n=await this.measureFrequencyResponse(e,t),o=this.calculateOptimalSettings(i,s,n);return this.calibrationData={volumeOffset:s.offset,frequencyResponse:n,noiseProfile:i,optimalSettings:o},this.isCalibrated=!0,this.calibrationInProgress=!1,console.log("✅ [CalibrationSystem] Calibration completed successfully"),{success:!0,calibrationData:this.calibrationData,recommendedSettings:o}}catch(i){return console.error("❌ [CalibrationSystem] Calibration failed:",i),this.calibrationInProgress=!1,{success:!1,calibrationData:null,recommendedSettings:this.getDefaultSettings(),error:i}}}async measureBackgroundNoise(e,t,i=2e3){return new Promise(s=>{const n=e.createAnalyser();n.fftSize=2048;const o=e.createMediaStreamSource(t);o.connect(n);const r=n.frequencyBinCount,a=new Float32Array(r),c=[],l=Date.now(),m=()=>{if(Date.now()-l>=i){const u={};for(let d=0;d<r;d++){const f=d*e.sampleRate/n.fftSize;let p=0;for(const S of c)p+=S[d];u[Math.round(f)]=p/c.length}o.disconnect(),s(u);return}n.getFloatFrequencyData(a),c.push(new Float32Array(a)),setTimeout(m,100)};m()})}async calibrateVolumeLevels(e,t,i=3e3){return new Promise(s=>{const n=e.createAnalyser();n.fftSize=1024;const o=e.createMediaStreamSource(t);o.connect(n);const r=n.fftSize,a=new Float32Array(r),c=[],l=Date.now(),m=()=>{if(Date.now()-l>=i){c.sort((A,g)=>A-g);const f=c[0]||0,p=c[c.length-1]||1,C=.3-(c[Math.floor(c.length/2)]||.5);o.disconnect(),s({offset:C,range:{min:f,max:p}});return}n.getFloatTimeDomainData(a);let u=0;for(let f=0;f<r;f++)u+=a[f]*a[f];const d=Math.sqrt(u/r);c.push(d),setTimeout(m,50)};m()})}async measureFrequencyResponse(e,t,i=5e3){return new Promise(s=>{const n=e.createAnalyser();n.fftSize=4096;const o=e.createMediaStreamSource(t);o.connect(n);const r=n.frequencyBinCount,a=new Float32Array(r),c={},l=Date.now(),m=()=>{if(Date.now()-l>=i){const u={};Object.keys(c).forEach(d=>{const f=parseInt(d),p=c[f],S=p.reduce((y,C)=>y+C,0)/p.length;u[f]=S}),o.disconnect(),s(u);return}n.getFloatFrequencyData(a);for(let u=0;u<r;u++){const d=Math.round(u*e.sampleRate/n.fftSize);d>=80&&d<=1e3&&(c[d]||(c[d]=[]),c[d].push(a[u]))}setTimeout(m,100)};m()})}calculateOptimalSettings(e,t,i){const s=this.getDefaultSettings(),n=Math.max(.5,Math.min(2,1-t.offset)),o=s.sensitivity*n,a=Object.keys(e).map(g=>parseInt(g)).filter(g=>g>=100&&g<=800).map(g=>e[g]),c=a.length>0?a.reduce((g,M)=>g+M,0)/a.length:-60,l=Math.max(-20,c+10),m=Math.max(s.noiseGate,Math.abs(l)/1e3),d=Object.keys(i).map(g=>parseInt(g)).sort((g,M)=>g-M).map(g=>i[g]),f=d.slice(0,Math.floor(d.length*.3)),p=d.slice(Math.floor(d.length*.3),Math.floor(d.length*.7)),S=d.slice(Math.floor(d.length*.7)),y=f.reduce((g,M)=>g+M,0)/f.length,C=p.reduce((g,M)=>g+M,0)/p.length,A=S.reduce((g,M)=>g+M,0)/S.length;return{sensitivity:Math.round(o*10)/10,noiseGate:Math.round(m*1e3)/1e3,volumeOffset:t.offset,filterSettings:{highpassFreq:y<C-5?100:80,lowpassFreq:A>C+3?600:800,notchFreq:60,highpassQ:.7,lowpassQ:.7,notchQ:10},deviceAdjustments:{lowFreqCompensation:Math.max(.8,Math.min(1.5,C/(y||-60))),highFreqCompensation:Math.max(.8,Math.min(1.2,C/(A||-60)))}}}getDefaultSettings(){return{sensitivity:this.deviceSpecs.sensitivity,noiseGate:this.deviceSpecs.noiseGate,volumeOffset:0,filterSettings:{highpassFreq:80,lowpassFreq:800,notchFreq:60,highpassQ:.7,lowpassQ:.7,notchQ:10}}}applyCalibration(e){if(!this.isCalibrated||!this.calibrationData)return console.warn("⚠️ [CalibrationSystem] No calibration data available"),!1;try{const t=this.calibrationData.optimalSettings;return e.setSensitivity&&e.setSensitivity(t.sensitivity),e.setNoiseGate&&e.setNoiseGate(t.noiseGate),e.updateFilterSettings&&e.updateFilterSettings(t.filterSettings),console.log("✅ [CalibrationSystem] Calibration applied successfully"),!0}catch(t){return console.error("❌ [CalibrationSystem] Failed to apply calibration:",t),!1}}getCalibrationStatus(){return{isCalibrated:this.isCalibrated,inProgress:this.calibrationInProgress,deviceSpecs:this.deviceSpecs,calibrationData:this.calibrationData}}reset(){this.isCalibrated=!1,this.calibrationInProgress=!1,this.calibrationData=null,console.log("🔄 [CalibrationSystem] Calibration reset")}saveCalibration(){if(!this.isCalibrated||!this.calibrationData)return!1;try{const e=`pitchpro_calibration_${this.deviceSpecs.deviceType}`,t={deviceSpecs:this.deviceSpecs,calibrationData:this.calibrationData,timestamp:Date.now()};return localStorage.setItem(e,JSON.stringify(t)),console.log("💾 [CalibrationSystem] Calibration saved"),!0}catch(e){return console.error("❌ [CalibrationSystem] Failed to save calibration:",e),!1}}loadCalibration(){try{const e=`pitchpro_calibration_${this.deviceSpecs.deviceType}`,t=localStorage.getItem(e);if(!t)return!1;const i=JSON.parse(t),s=7*24*60*60*1e3;return Date.now()-i.timestamp>s?(console.log("⏰ [CalibrationSystem] Saved calibration is too old, ignoring"),!1):i.deviceSpecs.deviceType!==this.deviceSpecs.deviceType?(console.log("📱 [CalibrationSystem] Device type mismatch, ignoring saved calibration"),!1):(this.calibrationData=i.calibrationData,this.isCalibrated=!0,console.log("📂 [CalibrationSystem] Calibration loaded successfully"),!0)}catch(e){return console.error("❌ [CalibrationSystem] Failed to load calibration:",e),!1}}}const D=class D{static generateScale(e,t="major"){const i=D.SCALE_PATTERNS[t];if(!i)throw new Error(`Unknown scale type: ${t}`);return i.map(s=>{const n=e*Math.pow(2,s/12);return F.frequencyToNote(n)})}static generateChord(e,t="major"){const i=D.CHORD_PATTERNS[t];if(!i)throw new Error(`Unknown chord type: ${t}`);return i.map(s=>{const n=e*Math.pow(2,s/12);return F.frequencyToNote(n)})}static identifyScale(e){if(e.length<3)return[];const t=e.sort((o,r)=>o-r),i=t[0],s=t.map(o=>Math.round(12*Math.log2(o/i))),n=[];return Object.entries(D.SCALE_PATTERNS).forEach(([o,r])=>{for(let a=0;a<12;a++){const c=r.map(d=>(d+a)%12).sort((d,f)=>d-f),l=s.map(d=>d%12).sort((d,f)=>d-f);let m=0;l.forEach(d=>{c.includes(d)&&m++});const u=m/Math.max(l.length,c.length);if(u>.5){const d=i*Math.pow(2,-a/12);n.push({scale:o,confidence:u,root:F.frequencyToNote(d)})}}}),n.sort((o,r)=>r.confidence-o.confidence).slice(0,5)}static identifyChord(e){if(e.length<2)return[];const t=e.sort((s,n)=>s-n),i=[];return Object.entries(D.CHORD_PATTERNS).forEach(([s,n])=>{for(let o=0;o<n.length;o++){const r=[...n.slice(o),...n.slice(0,o).map(a=>a+12)];t.forEach((a,c)=>{const l=t.map(f=>Math.round(12*Math.log2(f/a)));let m=0;const u=new Set(r);l.forEach(f=>{const p=f%12;(u.has(p)||u.has(p+12))&&m++});const d=m/Math.max(l.length,n.length);if(d>.6){const f=o===0?a:a*Math.pow(2,-n[o]/12);i.push({chord:s,confidence:d,root:F.frequencyToNote(f),inversion:o>0?o:void 0})}})}}),i.sort((s,n)=>n.confidence-s.confidence).slice(0,3)}static getKeySignature(e,t="major"){const i=["F","C","G","D","A","E","B"],s=["B","E","A","D","G","C","F"],n={C:{sharps:0,flats:0},G:{sharps:1,flats:0},D:{sharps:2,flats:0},A:{sharps:3,flats:0},E:{sharps:4,flats:0},B:{sharps:5,flats:0},"F#":{sharps:6,flats:0},"C#":{sharps:7,flats:0},F:{sharps:0,flats:1},Bb:{sharps:0,flats:2},Eb:{sharps:0,flats:3},Ab:{sharps:0,flats:4},Db:{sharps:0,flats:5},Gb:{sharps:0,flats:6},Cb:{sharps:0,flats:7}};let o=n[e];if(!o&&t==="minor"){const l={A:"C",E:"G",B:"D","F#":"A","C#":"E","G#":"B","D#":"F#","A#":"C#",D:"F",G:"Bb",C:"Eb",F:"Ab",Bb:"Db",Eb:"Gb",Ab:"Cb"}[e];l&&(o=n[l])}if(!o)return{sharps:[],flats:[],accidentalCount:0};const r=i.slice(0,o.sharps).map(c=>c+"#"),a=s.slice(0,o.flats).map(c=>c+"b");return{sharps:r,flats:a,accidentalCount:o.sharps||o.flats}}static getHarmonicSeries(e,t=16){const i=[];for(let s=1;s<=t;s++){const n=e*s;i.push(F.frequencyToNote(n))}return i}static getJustIntonationRatios(){return{unison:{ratio:1/1,cents:0},minorSecond:{ratio:16/15,cents:112},majorSecond:{ratio:9/8,cents:204},minorThird:{ratio:6/5,cents:316},majorThird:{ratio:5/4,cents:386},perfectFourth:{ratio:4/3,cents:498},tritone:{ratio:45/32,cents:590},perfectFifth:{ratio:3/2,cents:702},minorSixth:{ratio:8/5,cents:814},majorSixth:{ratio:5/3,cents:884},minorSeventh:{ratio:16/9,cents:996},majorSeventh:{ratio:15/8,cents:1088},octave:{ratio:2/1,cents:1200}}}static equalTemperamentToJustIntonation(e){const t=e*100,i=D.getJustIntonationRatios();let s,n=1/0;return Object.entries(i).forEach(([r,{cents:a}])=>{const c=Math.abs(t-a);c<n&&(n=c,s=r)}),{ratio:Math.pow(2,e/12),cents:t,closestJustInterval:s,centsDeviation:s?n:void 0}}static analyzeMelody(e){if(e.length<2)return[];const t=[];for(let i=1;i<e.length;i++){const s=e[i-1],n=e[i],o=F.frequencyToNote(s),r=F.frequencyToNote(n),a=F.getSignedInterval(s,n),c=F.getIntervalInfo(Math.abs(a)),l=a>0?"up":a<0?"down":"same";t.push({fromNote:o,toNote:r,interval:c,direction:l})}return t}static generateChordProgression(e,t="major",i=[1,4,5,1]){const s=F.scientificPitchToFrequency(e+"4");if(s===0)throw new Error(`Invalid key: ${e}`);const n=D.generateScale(s,t==="minor"?"naturalMinor":"major"),o=[];return i.forEach(r=>{const a=n[(r-1)%n.length],c=t==="major"?D.getMajorScaleChordType(r):D.getMinorScaleChordType(r),l=D.generateChord(a.frequency,c);o.push(l)}),o}static getMajorScaleChordType(e){return["major","minor","minor","major","major","minor","diminished"][(e-1)%7]}static getMinorScaleChordType(e){return["minor","diminished","major","minor","minor","major","major"][(e-1)%7]}};D.SCALE_PATTERNS={major:[0,2,4,5,7,9,11],naturalMinor:[0,2,3,5,7,8,10],harmonicMinor:[0,2,3,5,7,8,11],melodicMinor:[0,2,3,5,7,9,11],dorian:[0,2,3,5,7,9,10],phrygian:[0,1,3,5,7,8,10],lydian:[0,2,4,6,7,9,11],mixolydian:[0,2,4,5,7,9,10],locrian:[0,1,3,5,6,8,10],pentatonicMajor:[0,2,4,7,9],pentatonicMinor:[0,3,5,7,10],blues:[0,3,5,6,7,10],chromatic:[0,1,2,3,4,5,6,7,8,9,10,11]},D.CHORD_PATTERNS={major:[0,4,7],minor:[0,3,7],diminished:[0,3,6],augmented:[0,4,8],sus2:[0,2,7],sus4:[0,5,7],major7:[0,4,7,11],minor7:[0,3,7,10],dominant7:[0,4,7,10],majorMaj7:[0,4,7,11],halfDiminished7:[0,3,6,10],diminished7:[0,3,6,9],add9:[0,4,7,14],major9:[0,4,7,11,14],minor9:[0,3,7,10,14]},D.CIRCLE_OF_FIFTHS=["C","G","D","A","E","B","F#","C#","Ab","Eb","Bb","F"],D.INTERVAL_NAMES={0:"Perfect Unison",1:"Minor Second",2:"Major Second",3:"Minor Third",4:"Major Third",5:"Perfect Fourth",6:"Tritone",7:"Perfect Fifth",8:"Minor Sixth",9:"Major Sixth",10:"Minor Seventh",11:"Major Seventh",12:"Perfect Octave"};let ye=D;const Ke="1.2.1",Ze=new Date().toISOString(),et={pitchDetector:{fftSize:4096,smoothing:.1,clarityThreshold:.4,minVolumeAbsolute:.02},audioManager:{sampleRate:44100,channelCount:1,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1},noiseFilter:{highpassFreq:50,lowpassFreq:800,notchFreq:50,highpassQ:.7,lowpassQ:.7,notchQ:10}};v.AudioDetectionComponent=ve,v.AudioManager=pe,v.BUILD_DATE=Ze,v.CalibrationSystem=Ye,v.DEFAULT_CONFIG=et,v.DeviceDetection=E,v.ErrorNotificationSystem=Re,v.FrequencyUtils=F,v.HarmonicCorrection=Je,v.LogLevel=Z,v.Logger=Q,v.MicrophoneController=Pe,v.MicrophoneHealthError=Fe,v.MicrophoneLifecycleManager=Ne,v.MusicTheory=ye,v.NoiseFilter=Ve,v.PitchDetector=xe,v.VERSION=Ke,v.VoiceAnalyzer=Xe,v.debug=Ge,v.defaultLogger=ee,v.error=We,v.info=je,v.warn=Qe,Object.defineProperty(v,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=pitchpro.umd.js.map
